{"ast":null,"code":"/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport Controls from '../controls';\nimport Icon from '../../../icon';\nimport Info from '../info';\nimport Label from '../label';\nimport MediaObject from '../../../media-object';\nimport Title from '../title';\nvar displayName = 'PageHeaderObjectHome';\nvar propTypes = {\n  /**\n   * The label property can be a string or a React element\n   */\n  label: PropTypes.node,\n\n  /**\n   * The page header icon\n   */\n  icon: PropTypes.element,\n\n  /**\n   * The info property can be a string or a React element\n   */\n  info: PropTypes.node,\n\n  /**\n   * Used with the `object-home` variant. Accepts a node, typically a Dropdown component\n   */\n  nameSwitcherDropdown: PropTypes.node,\n\n  /**\n   * Content to appear on the right hand side of the page header\n   * prop 'contentRight' will be deprecated soon, use 'onRenderActions' instead\n   */\n  onRenderActions: PropTypes.func,\n\n  /**\n   * Nav content which appears in the upper right hand corner.\n   * prop 'navRight' will be deprecated soon, use 'onRenderControls' instead\n   */\n  onRenderControls: PropTypes.func,\n\n  /**\n   * The title property can be a string or a React element\n   */\n  title: PropTypes.node,\n\n  /**\n   * An array of react elements presumably anchor <a> elements.\n   */\n  trail: PropTypes.array,\n\n  /**\n   * The type of component\n   * Note: Extra options are added to make the version backward compatible\n   */\n  variant: PropTypes.string\n};\n\nvar ObjectHome = function ObjectHome(props) {\n  var icon; // Backwards compatibility\n\n  if (props.iconName) {\n    icon = /*#__PURE__*/React.createElement(Icon, {\n      category: props.iconCategory,\n      className: \"slds-page-header__icon\",\n      name: props.iconName,\n      position: props.iconPosition,\n      size: props.iconSize,\n      variant: props.iconVariant\n    });\n  } else if (props.icon) {\n    var iconClasses = 'slds-page-header__icon';\n\n    if (props.icon.props) {\n      iconClasses = classnames(props.icon.props.className, iconClasses);\n    }\n\n    icon = /*#__PURE__*/React.cloneElement(props.icon, {\n      className: iconClasses\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"slds-page-header__row\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"slds-page-header__col-title\"\n  }, /*#__PURE__*/React.createElement(MediaObject, {\n    body: /*#__PURE__*/React.createElement(React.Fragment, null, props.trail ? /*#__PURE__*/React.createElement(Label, {\n      style: {\n        lineHeight: '1.3'\n      },\n      trail: props.trail\n    }) : null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"slds-page-header__name\"\n    }, /*#__PURE__*/React.createElement(Title, {\n      content: props.title,\n      label: !props.trail ? props.label : null\n    }), props.nameSwitcherDropdown ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"slds-page-header__name-switcher\"\n    }, props.nameSwitcherDropdown) : null)),\n    figure: icon\n  })), /*#__PURE__*/React.createElement(Controls, {\n    className: classnames({\n      'slds-align-middle slds-p-bottom_none': !props.onRenderControls && !props.navRight\n    }),\n    contentRight: props.contentRight,\n    onRenderActions: props.onRenderActions,\n    type: \"actions\"\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"slds-page-header__row\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"slds-page-header__col-meta\"\n  }, /*#__PURE__*/React.createElement(Info, {\n    content: props.info,\n    variant: props.variant\n  })), /*#__PURE__*/React.createElement(Controls, {\n    className: classnames({\n      'slds-align-middle': !props.onRenderActions && !props.comntentRight\n    }),\n    navRight: props.navRight,\n    onRenderControls: props.onRenderControls,\n    type: \"controls\"\n  })));\n};\n\nObjectHome.displayName = displayName;\nObjectHome.propTypes = propTypes;\nexport default ObjectHome;","map":{"version":3,"sources":["../../../../../.tmp-es/components/page-header/private/object-home/index.jsx"],"names":["displayName","propTypes","label","PropTypes","icon","info","nameSwitcherDropdown","onRenderActions","onRenderControls","title","trail","variant","string","ObjectHome","props","iconVariant","iconClasses","classnames","className","lineHeight","navRight","comntentRight"],"mappings":"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","sourcesContent":["/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nimport Controls from '../controls';\nimport Icon from '../../../icon';\nimport Info from '../info';\nimport Label from '../label';\nimport MediaObject from '../../../media-object';\nimport Title from '../title';\n\nconst displayName = 'PageHeaderObjectHome';\nconst propTypes = {\n\t/**\n\t * The label property can be a string or a React element\n\t */\n\tlabel: PropTypes.node,\n\t/**\n\t * The page header icon\n\t */\n\ticon: PropTypes.element,\n\t/**\n\t * The info property can be a string or a React element\n\t */\n\tinfo: PropTypes.node,\n\t/**\n\t * Used with the `object-home` variant. Accepts a node, typically a Dropdown component\n\t */\n\tnameSwitcherDropdown: PropTypes.node,\n\t/**\n\t * Content to appear on the right hand side of the page header\n\t * prop 'contentRight' will be deprecated soon, use 'onRenderActions' instead\n\t */\n\tonRenderActions: PropTypes.func,\n\t/**\n\t * Nav content which appears in the upper right hand corner.\n\t * prop 'navRight' will be deprecated soon, use 'onRenderControls' instead\n\t */\n\tonRenderControls: PropTypes.func,\n\t/**\n\t * The title property can be a string or a React element\n\t */\n\ttitle: PropTypes.node,\n\t/**\n\t * An array of react elements presumably anchor <a> elements.\n\t */\n\ttrail: PropTypes.array,\n\t/**\n\t * The type of component\n\t * Note: Extra options are added to make the version backward compatible\n\t */\n\tvariant: PropTypes.string,\n};\n\nconst ObjectHome = (props) => {\n\tlet icon;\n\n\t// Backwards compatibility\n\tif (props.iconName) {\n\t\ticon = (\n\t\t\t<Icon\n\t\t\t\tcategory={props.iconCategory}\n\t\t\t\tclassName=\"slds-page-header__icon\"\n\t\t\t\tname={props.iconName}\n\t\t\t\tposition={props.iconPosition}\n\t\t\t\tsize={props.iconSize}\n\t\t\t\tvariant={props.iconVariant}\n\t\t\t/>\n\t\t);\n\t} else if (props.icon) {\n\t\tlet iconClasses = 'slds-page-header__icon';\n\n\t\tif (props.icon.props) {\n\t\t\ticonClasses = classnames(props.icon.props.className, iconClasses);\n\t\t}\n\n\t\ticon = React.cloneElement(props.icon, { className: iconClasses });\n\t}\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<div className=\"slds-page-header__row\">\n\t\t\t\t<div className=\"slds-page-header__col-title\">\n\t\t\t\t\t<MediaObject\n\t\t\t\t\t\tbody={\n\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t{props.trail ? (\n\t\t\t\t\t\t\t\t\t<Label style={{ lineHeight: '1.3' }} trail={props.trail} />\n\t\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t\t\t<div className=\"slds-page-header__name\">\n\t\t\t\t\t\t\t\t\t<Title\n\t\t\t\t\t\t\t\t\t\tcontent={props.title}\n\t\t\t\t\t\t\t\t\t\tlabel={!props.trail ? props.label : null}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t{props.nameSwitcherDropdown ? (\n\t\t\t\t\t\t\t\t\t\t<div className=\"slds-page-header__name-switcher\">\n\t\t\t\t\t\t\t\t\t\t\t{props.nameSwitcherDropdown}\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t}\n\t\t\t\t\t\tfigure={icon}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<Controls\n\t\t\t\t\tclassName={classnames({\n\t\t\t\t\t\t'slds-align-middle slds-p-bottom_none':\n\t\t\t\t\t\t\t!props.onRenderControls && !props.navRight,\n\t\t\t\t\t})}\n\t\t\t\t\tcontentRight={props.contentRight}\n\t\t\t\t\tonRenderActions={props.onRenderActions}\n\t\t\t\t\ttype=\"actions\"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div className=\"slds-page-header__row\">\n\t\t\t\t<div className=\"slds-page-header__col-meta\">\n\t\t\t\t\t<Info content={props.info} variant={props.variant} />\n\t\t\t\t</div>\n\t\t\t\t<Controls\n\t\t\t\t\tclassName={classnames({\n\t\t\t\t\t\t'slds-align-middle': !props.onRenderActions && !props.comntentRight,\n\t\t\t\t\t})}\n\t\t\t\t\tnavRight={props.navRight}\n\t\t\t\t\tonRenderControls={props.onRenderControls}\n\t\t\t\t\ttype=\"controls\"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</React.Fragment>\n\t);\n};\n\nObjectHome.displayName = displayName;\nObjectHome.propTypes = propTypes;\n\nexport default ObjectHome;\n"]},"metadata":{},"sourceType":"module"}