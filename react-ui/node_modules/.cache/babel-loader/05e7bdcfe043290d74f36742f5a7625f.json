{"ast":null,"code":"function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n// # Global Navigation Bar Component\n// Implements the [Global Navigation Bar design pattern](https://www.lightningdesignsystem.com/components/global-navigation#flavor-navigation-bar) in React.\n// Based on SLDS v2.1.0-rc.2\n// ## Dependencies\n// ### React\n\n\nimport React from 'react';\nimport PropTypes from 'prop-types'; // ### classNames\n\nimport classNames from 'classnames'; // ## Constants\n\nimport { GLOBAL_NAVIGATION_BAR, GLOBAL_NAVIGATION_BAR_REGION } from '../../utilities/constants';\n\nvar auditChildren = function auditChildren(children) {\n  var primaryRegion; // there can be multiple secondary navigation regions\n\n  var secondaryRegions = [];\n  var tertiaryRegion;\n  React.Children.forEach(children, function (child) {\n    if (child && child.type.displayName === GLOBAL_NAVIGATION_BAR_REGION) {\n      if (child.props.region === 'primary') {\n        primaryRegion = child;\n      } else if (child.props.region === 'secondary') {\n        // eslint-disable-next-line fp/no-mutating-methods\n        secondaryRegions.push(child);\n      } else if (child.props.region === 'tertiary') {\n        tertiaryRegion = child;\n      }\n    }\n  });\n  return [primaryRegion].concat(secondaryRegions, [tertiaryRegion]);\n};\n/**\n * Global Navigation Bar represents a list of links that either take the user to another page or parts of the page the user is in.\n */\n\n\nvar GlobalNavigationBar = function GlobalNavigationBar(props) {\n  var _classNames;\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classNames('slds-context-bar', (_classNames = {}, _defineProperty(_classNames, \"slds-context-bar_theme-\".concat(props.cloud), props.cloud), _defineProperty(_classNames, \"slds-context-bar_theme-\".concat(props.theme), props.theme), _classNames), props.className)\n  }, auditChildren(props.children));\n}; // ### Prop Types\n\n\nGlobalNavigationBar.propTypes = {\n  /**\n   * The items to be displayed in the Global Navigation Bar.\n   */\n  children: PropTypes.node,\n\n  /**\n   * CSS class names to be added to the container element.\n   */\n  className: PropTypes.oneOfType([PropTypes.array, PropTypes.object, PropTypes.string]),\n\n  /**\n   * Typically the cloud name (e.g.- \"sales\" or \"marketing\"). This primarily changes the background color.\n   */\n  cloud: PropTypes.string,\n\n  /**\n   * Transforms text and interactions (such as hover) to be more visually accessible.\n   */\n  theme: PropTypes.oneOf(['light', 'dark'])\n};\nGlobalNavigationBar.defaultProps = {};\nGlobalNavigationBar.displayName = GLOBAL_NAVIGATION_BAR;\nexport default GlobalNavigationBar;","map":{"version":3,"sources":["../../../.tmp-es/components/global-navigation-bar/index.jsx"],"names":["auditChildren","secondaryRegions","React","child","primaryRegion","tertiaryRegion","GlobalNavigationBar","classNames","props","children","PropTypes","className","cloud","theme"],"mappings":";;;;;;;;;;;;;;AAAA;;AACA;AAEA;AAEA;AACA;AAEA;AAEA;;;AACA,OAAA,KAAA,MAAA,OAAA;AACA,OAAA,SAAA,MAAA,YAAA,C,CAEA;;AACA,OAAA,UAAA,MAAA,YAAA,C,CAEA;;AACA,SAAA,qBAAA,EAAA,4BAAA,QAAA,2BAAA;;AAKA,IAAMA,aAAa,GAAG,SAAhBA,aAAgB,CAAA,QAAA,EAAc;AACnC,MADmC,aACnC,CADmC,CAEnC;;AACA,MAAMC,gBAAgB,GAAtB,EAAA;AACA,MAAA,cAAA;AAEAC,EAAAA,KAAK,CAALA,QAAAA,CAAAA,OAAAA,CAAAA,QAAAA,EAAiC,UAAA,KAAA,EAAW;AAC3C,QAAIC,KAAK,IAAIA,KAAK,CAALA,IAAAA,CAAAA,WAAAA,KAAb,4BAAA,EAAsE;AACrE,UAAIA,KAAK,CAALA,KAAAA,CAAAA,MAAAA,KAAJ,SAAA,EAAsC;AACrCC,QAAAA,aAAa,GAAbA,KAAAA;AADD,OAAA,MAEO,IAAID,KAAK,CAALA,KAAAA,CAAAA,MAAAA,KAAJ,WAAA,EAAwC;AAC9C;AACAF,QAAAA,gBAAgB,CAAhBA,IAAAA,CAAAA,KAAAA;AAFM,OAAA,MAGA,IAAIE,KAAK,CAALA,KAAAA,CAAAA,MAAAA,KAAJ,UAAA,EAAuC;AAC7CE,QAAAA,cAAc,GAAdA,KAAAA;AACA;AACD;AAVFH,GAAAA;AAaA,SAAA,CAAA,aAAA,EAAA,MAAA,CAAA,gBAAA,EAAA,CAAA,cAAA,CAAA,CAAA;AAnBD,CAAA;AAsBA;AACA;AACA;;;AACA,IAAMI,mBAAmB,GAAG,SAAtBA,mBAAsB,CAAA,KAAA,EAAA;AAAA,MAAA,WAAA;;AAAA,SAAA,aAC3B,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AACC,IAAA,SAAS,EAAEC,UAAU,CAAA,kBAAA,GAAA,WAAA,GAAA,EAAA,EAAA,eAAA,CAAA,WAAA,EAAA,0BAAA,MAAA,CAGQC,KAAK,CAHb,KAAA,CAAA,EAGwBA,KAAK,CAH7B,KAAA,CAAA,EAAA,eAAA,CAAA,WAAA,EAAA,0BAAA,MAAA,CAIQA,KAAK,CAJb,KAAA,CAAA,EAIwBA,KAAK,CAJ7B,KAAA,CAAA,EAAA,WAAA,GAMpBA,KAAK,CANe,SAAA;AADtB,GAAA,EAUER,aAAa,CAACQ,KAAK,CAXM,QAWZ,CAVf,CAD2B;AAA5B,CAAA,C,CAeA;;;AACAF,mBAAmB,CAAnBA,SAAAA,GAAgC;AAC/B;AACD;AACA;AACCG,EAAAA,QAAQ,EAAEC,SAAS,CAJY,IAAA;;AAK/B;AACD;AACA;AACCC,EAAAA,SAAS,EAAED,SAAS,CAATA,SAAAA,CAAoB,CAC9BA,SAAS,CADqB,KAAA,EAE9BA,SAAS,CAFqB,MAAA,EAG9BA,SAAS,CAXqB,MAQA,CAApBA,CARoB;;AAa/B;AACD;AACA;AACCE,EAAAA,KAAK,EAAEF,SAAS,CAhBe,MAAA;;AAiB/B;AACD;AACA;AACCG,EAAAA,KAAK,EAAEH,SAAS,CAATA,KAAAA,CAAgB,CAAA,OAAA,EAAhBA,MAAgB,CAAhBA;AApBwB,CAAhCJ;AAuBAA,mBAAmB,CAAnBA,YAAAA,GAAAA,EAAAA;AAEAA,mBAAmB,CAAnBA,WAAAA,GAAAA,qBAAAA;AAEA,eAAA,mBAAA","sourcesContent":["/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\n// # Global Navigation Bar Component\n\n// Implements the [Global Navigation Bar design pattern](https://www.lightningdesignsystem.com/components/global-navigation#flavor-navigation-bar) in React.\n// Based on SLDS v2.1.0-rc.2\n\n// ## Dependencies\n\n// ### React\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\n// ### classNames\nimport classNames from 'classnames';\n\n// ## Constants\nimport {\n\tGLOBAL_NAVIGATION_BAR,\n\tGLOBAL_NAVIGATION_BAR_REGION,\n} from '../../utilities/constants';\n\nconst auditChildren = (children) => {\n\tlet primaryRegion;\n\t// there can be multiple secondary navigation regions\n\tconst secondaryRegions = [];\n\tlet tertiaryRegion;\n\n\tReact.Children.forEach(children, (child) => {\n\t\tif (child && child.type.displayName === GLOBAL_NAVIGATION_BAR_REGION) {\n\t\t\tif (child.props.region === 'primary') {\n\t\t\t\tprimaryRegion = child;\n\t\t\t} else if (child.props.region === 'secondary') {\n\t\t\t\t// eslint-disable-next-line fp/no-mutating-methods\n\t\t\t\tsecondaryRegions.push(child);\n\t\t\t} else if (child.props.region === 'tertiary') {\n\t\t\t\ttertiaryRegion = child;\n\t\t\t}\n\t\t}\n\t});\n\n\treturn [primaryRegion, ...secondaryRegions, tertiaryRegion];\n};\n\n/**\n * Global Navigation Bar represents a list of links that either take the user to another page or parts of the page the user is in.\n */\nconst GlobalNavigationBar = (props) => (\n\t<div\n\t\tclassName={classNames(\n\t\t\t'slds-context-bar',\n\t\t\t{\n\t\t\t\t[`slds-context-bar_theme-${props.cloud}`]: props.cloud,\n\t\t\t\t[`slds-context-bar_theme-${props.theme}`]: props.theme,\n\t\t\t},\n\t\t\tprops.className\n\t\t)}\n\t>\n\t\t{auditChildren(props.children)}\n\t</div>\n);\n\n// ### Prop Types\nGlobalNavigationBar.propTypes = {\n\t/**\n\t * The items to be displayed in the Global Navigation Bar.\n\t */\n\tchildren: PropTypes.node,\n\t/**\n\t * CSS class names to be added to the container element.\n\t */\n\tclassName: PropTypes.oneOfType([\n\t\tPropTypes.array,\n\t\tPropTypes.object,\n\t\tPropTypes.string,\n\t]),\n\t/**\n\t * Typically the cloud name (e.g.- \"sales\" or \"marketing\"). This primarily changes the background color.\n\t */\n\tcloud: PropTypes.string,\n\t/**\n\t * Transforms text and interactions (such as hover) to be more visually accessible.\n\t */\n\ttheme: PropTypes.oneOf(['light', 'dark']),\n};\n\nGlobalNavigationBar.defaultProps = {};\n\nGlobalNavigationBar.displayName = GLOBAL_NAVIGATION_BAR;\n\nexport default GlobalNavigationBar;\n"]},"metadata":{},"sourceType":"module"}