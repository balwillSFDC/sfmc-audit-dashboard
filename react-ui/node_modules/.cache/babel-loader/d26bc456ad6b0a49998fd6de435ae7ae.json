{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\n/* eslint-disable jsx-a11y/no-redundant-roles */\n// # Global Navigation Bar Region Component\n// ## Dependencies\n// ### React\n\n\nimport React from 'react';\nimport PropTypes from 'prop-types'; // ### classNames\n\nimport classNames from 'classnames'; // ## Constants\n\nimport { GLOBAL_NAVIGATION_BAR_REGION } from '../../utilities/constants'; // List regions for export\n\nvar regions = ['primary', 'secondary', 'tertiary'];\n/* eslint-disable react/display-name */\n\nvar renderPrimary = function renderPrimary(dividerClass, className, children) {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classNames('slds-context-bar__primary', dividerClass, className)\n  }, children);\n};\n\nvar renderSecondary = function renderSecondary(dividerClass, className, children, navigation) {\n  var region;\n\n  if (navigation) {\n    region = /*#__PURE__*/React.createElement(\"nav\", {\n      className: classNames('slds-context-bar__secondary', dividerClass, className),\n      role: \"navigation\"\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"slds-grid\"\n    }, children));\n  } else {\n    region = /*#__PURE__*/React.createElement(\"div\", {\n      className: classNames('slds-context-bar__secondary', dividerClass, className)\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"slds-grid\"\n    }, children));\n  }\n\n  return region;\n};\n\nvar renderTertiary = function renderTertiary(dividerClass, className, children) {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classNames('slds-context-bar__tertiary', 'slds-col_bump-left', dividerClass, className)\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"slds-grid\"\n  }, children));\n};\n/* eslint-enable react/display-name */\n\n/**\n * Regions make up a GlobalNavigation Bar and typically contain links and dropdowns. The Primary region contains the AppSwitcher, Application Name, and Object Switcher. The secondary region typically has navigation betweens sections of the application. The tertiary region is aligned to the right side of the screen and contains shortcuts or actions.\n */\n\n\nvar Region = /*#__PURE__*/function (_React$Component) {\n  _inherits(Region, _React$Component);\n\n  var _super = _createSuper(Region);\n\n  function Region() {\n    _classCallCheck(this, Region);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Region, [{\n    key: \"render\",\n    value: function render() {\n      var region;\n      var dividerClass = this.props.dividerPosition ? \"slds-context-bar__item_divider-\".concat(this.props.dividerPosition) : null;\n\n      switch (this.props.region) {\n        case 'primary':\n          region = renderPrimary(dividerClass, this.props.className, this.props.children);\n          break;\n\n        case 'secondary':\n          region = renderSecondary(dividerClass, this.props.className, this.props.children, this.props.navigation);\n          break;\n\n        case 'tertiary':\n          region = renderTertiary(dividerClass, this.props.className, this.props.children);\n          break;\n\n        default: // do nothing\n\n      }\n\n      return region;\n    }\n  }]);\n\n  return Region;\n}(React.Component);\n\n_defineProperty(Region, \"displayName\", GLOBAL_NAVIGATION_BAR_REGION);\n\n_defineProperty(Region, \"propTypes\", {\n  /**\n   * Contents of region. Expects `GlobalNavigationBarLink`, `GlobalNavigationBarDropdown`, `GlobalNavigationBarApplicationName`, `AppSwitcher`, but could be any component. This is the place to pass in an Object Switcher until that is supported.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Determines position of separating bar.\n   */\n  dividerPosition: PropTypes.oneOf(['left', 'right']),\n\n  /**\n   * CSS classes to be added to the region\n   */\n  className: PropTypes.oneOfType([PropTypes.array, PropTypes.object, PropTypes.string]),\n\n  /**\n   * Wraps the `secondary` region in a `nav` and adds a role attribute\n   */\n  navigation: PropTypes.bool,\n\n  /**\n   * Region wrap children in styling specific to that region. When `tertiary`\n   * region is used, secondary region only supports four list items.\n   */\n  region: PropTypes.oneOf(['primary', 'secondary', 'tertiary']).isRequired\n});\n\nexport default Region;\nexport { regions };","map":{"version":3,"sources":["../../../.tmp-es/components/global-navigation-bar/region.jsx"],"names":["regions","renderPrimary","classNames","renderSecondary","region","renderTertiary","Region","React","Component","GLOBAL_NAVIGATION_BAR_REGION","children","PropTypes","dividerPosition","className","navigation","isRequired","dividerClass"],"mappings":"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","sourcesContent":["/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\n/* eslint-disable jsx-a11y/no-redundant-roles */\n\n// # Global Navigation Bar Region Component\n\n// ## Dependencies\n\n// ### React\nimport React from 'react';\n\nimport PropTypes from 'prop-types';\n\n// ### classNames\nimport classNames from 'classnames';\n\n// ## Constants\nimport { GLOBAL_NAVIGATION_BAR_REGION } from '../../utilities/constants';\n\n// List regions for export\nconst regions = ['primary', 'secondary', 'tertiary'];\n\n/* eslint-disable react/display-name */\nconst renderPrimary = (dividerClass, className, children) => (\n\t<div\n\t\tclassName={classNames('slds-context-bar__primary', dividerClass, className)}\n\t>\n\t\t{children}\n\t</div>\n);\n\nconst renderSecondary = (dividerClass, className, children, navigation) => {\n\tlet region;\n\n\tif (navigation) {\n\t\tregion = (\n\t\t\t<nav\n\t\t\t\tclassName={classNames(\n\t\t\t\t\t'slds-context-bar__secondary',\n\t\t\t\t\tdividerClass,\n\t\t\t\t\tclassName\n\t\t\t\t)}\n\t\t\t\trole=\"navigation\"\n\t\t\t>\n\t\t\t\t<ul className=\"slds-grid\">{children}</ul>\n\t\t\t</nav>\n\t\t);\n\t} else {\n\t\tregion = (\n\t\t\t<div\n\t\t\t\tclassName={classNames(\n\t\t\t\t\t'slds-context-bar__secondary',\n\t\t\t\t\tdividerClass,\n\t\t\t\t\tclassName\n\t\t\t\t)}\n\t\t\t>\n\t\t\t\t<ul className=\"slds-grid\">{children}</ul>\n\t\t\t</div>\n\t\t);\n\t}\n\treturn region;\n};\n\nconst renderTertiary = (dividerClass, className, children) => (\n\t<div\n\t\tclassName={classNames(\n\t\t\t'slds-context-bar__tertiary',\n\t\t\t'slds-col_bump-left',\n\t\t\tdividerClass,\n\t\t\tclassName\n\t\t)}\n\t>\n\t\t<ul className=\"slds-grid\">{children}</ul>\n\t</div>\n);\n\n/* eslint-enable react/display-name */\n\n/**\n * Regions make up a GlobalNavigation Bar and typically contain links and dropdowns. The Primary region contains the AppSwitcher, Application Name, and Object Switcher. The secondary region typically has navigation betweens sections of the application. The tertiary region is aligned to the right side of the screen and contains shortcuts or actions.\n */\nclass Region extends React.Component {\n\tstatic displayName = GLOBAL_NAVIGATION_BAR_REGION;\n\n\tstatic propTypes = {\n\t\t/**\n\t\t * Contents of region. Expects `GlobalNavigationBarLink`, `GlobalNavigationBarDropdown`, `GlobalNavigationBarApplicationName`, `AppSwitcher`, but could be any component. This is the place to pass in an Object Switcher until that is supported.\n\t\t */\n\t\tchildren: PropTypes.node,\n\t\t/**\n\t\t * Determines position of separating bar.\n\t\t */\n\t\tdividerPosition: PropTypes.oneOf(['left', 'right']),\n\t\t/**\n\t\t * CSS classes to be added to the region\n\t\t */\n\t\tclassName: PropTypes.oneOfType([\n\t\t\tPropTypes.array,\n\t\t\tPropTypes.object,\n\t\t\tPropTypes.string,\n\t\t]),\n\t\t/**\n\t\t * Wraps the `secondary` region in a `nav` and adds a role attribute\n\t\t */\n\t\tnavigation: PropTypes.bool,\n\t\t/**\n\t\t * Region wrap children in styling specific to that region. When `tertiary`\n\t\t * region is used, secondary region only supports four list items.\n\t\t */\n\t\tregion: PropTypes.oneOf(['primary', 'secondary', 'tertiary']).isRequired,\n\t};\n\n\trender() {\n\t\tlet region;\n\t\tconst dividerClass = this.props.dividerPosition\n\t\t\t? `slds-context-bar__item_divider-${this.props.dividerPosition}`\n\t\t\t: null;\n\n\t\tswitch (this.props.region) {\n\t\t\tcase 'primary':\n\t\t\t\tregion = renderPrimary(\n\t\t\t\t\tdividerClass,\n\t\t\t\t\tthis.props.className,\n\t\t\t\t\tthis.props.children\n\t\t\t\t);\n\t\t\t\tbreak;\n\t\t\tcase 'secondary':\n\t\t\t\tregion = renderSecondary(\n\t\t\t\t\tdividerClass,\n\t\t\t\t\tthis.props.className,\n\t\t\t\t\tthis.props.children,\n\t\t\t\t\tthis.props.navigation\n\t\t\t\t);\n\t\t\t\tbreak;\n\t\t\tcase 'tertiary':\n\t\t\t\tregion = renderTertiary(\n\t\t\t\t\tdividerClass,\n\t\t\t\t\tthis.props.className,\n\t\t\t\t\tthis.props.children\n\t\t\t\t);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t// do nothing\n\t\t}\n\n\t\treturn region;\n\t}\n}\n\nexport default Region;\nexport { regions };\n"]},"metadata":{},"sourceType":"module"}