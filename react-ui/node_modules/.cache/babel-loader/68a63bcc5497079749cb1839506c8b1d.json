{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n// Implements the [Setup Assistant design pattern](https://lightningdesignsystem.com/components/progress-ring/) in React.\n// Based on SLDS v2.4.5\n\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames'; // ### shortid\n// [npmjs.com/package/shortid](https://www.npmjs.com/package/shortid)\n// shortid is a short, non-sequential, url-friendly, unique id generator\n\nimport shortid from 'shortid'; // This component's `checkProps` which issues warnings to developers about properties\n// when in development mode (similar to React's built in development tools)\n\nimport checkProps from './check-props';\nimport componentDoc from './component.json';\nimport { SETUP_ASSISTANT, SETUP_ASSISTANT_STEP } from '../../utilities/constants';\nvar propTypes = {\n  /**\n   * Accepts SetupAssistantStep components only as children.\n   */\n  children: PropTypes.node,\n\n  /**\n   * CSS classes to be added to tag with `.slds-progress-bar`. Uses `classNames` [API](https://github.com/JedWatson/classnames).\n   */\n  className: PropTypes.oneOfType([PropTypes.array, PropTypes.object, PropTypes.string]),\n\n  /**\n   * HTML id for component.\n   */\n  id: PropTypes.string,\n\n  /**\n   * Dictates whether this setup assistant has card wrappings and styling\n   */\n  isCard: PropTypes.bool,\n\n  /**\n   * Function to handle opening / closing of steps when the step is expandable. Passes event object and step `index`, `isOpen`, and `step` props as data.\n   */\n  onStepToggleIsOpen: PropTypes.func,\n\n  /**\n   * Accepts a progress bar component, which will only be visible if `isCard` is enabled\n   */\n  progressBar: PropTypes.node\n};\nvar defaultProps = {\n  isCard: false\n};\n/**\n * Setup Assistant provides Administrators with a centralized list of tasks for\n * onboarding organizations, clouds, or features within the Salesforce Platform.\n */\n\nvar SetupAssistant = /*#__PURE__*/function (_React$Component) {\n  _inherits(SetupAssistant, _React$Component);\n\n  var _super = _createSuper(SetupAssistant);\n\n  function SetupAssistant(props) {\n    var _this;\n\n    _classCallCheck(this, SetupAssistant);\n\n    _this = _super.call(this, props);\n    _this.generatedId = shortid.generate();\n    return _this;\n  }\n\n  _createClass(SetupAssistant, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      checkProps(SETUP_ASSISTANT, this.props, componentDoc);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      checkProps(SETUP_ASSISTANT, this.props, componentDoc);\n    }\n    /**\n     * ID as a string\n     * @returns {string} id\n     */\n\n  }, {\n    key: \"getId\",\n    value: function getId() {\n      return this.props.id || this.generatedId;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var steps = /*#__PURE__*/React.createElement(\"ol\", {\n        id: this.getId(),\n        className: classNames('slds-setup-assistant', this.props.className)\n      }, React.Children.map(this.props.children, function (child, i) {\n        if (child.type.displayName !== SETUP_ASSISTANT_STEP) return null;\n        return /*#__PURE__*/React.cloneElement(child, _objectSpread({\n          index: i,\n          onToggleIsOpen: _this2.props.onStepToggleIsOpen,\n          stepNumber: i + 1\n        }, child.props));\n      }));\n      return this.props.isCard ? /*#__PURE__*/React.createElement(\"section\", {\n        className: \"slds-card\"\n      }, /*#__PURE__*/React.createElement(\"header\", {\n        className: \"slds-theme_shade slds-p-around_medium slds-m-bottom_small\"\n      }, this.props.progressBar), steps) : /*#__PURE__*/React.createElement(React.Fragment, null, steps);\n    }\n  }]);\n\n  return SetupAssistant;\n}(React.Component);\n\nSetupAssistant.displayName = SETUP_ASSISTANT;\nSetupAssistant.propTypes = propTypes;\nSetupAssistant.defaultProps = defaultProps;\nexport default SetupAssistant;","map":{"version":3,"sources":["../../../.tmp-es/components/setup-assistant/index.jsx"],"names":["propTypes","children","PropTypes","className","id","isCard","onStepToggleIsOpen","progressBar","node","defaultProps","SetupAssistant","React","Component","shortid","checkProps","steps","classNames","child","index","onToggleIsOpen","stepNumber","i"],"mappings":"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","sourcesContent":["/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\n// Implements the [Setup Assistant design pattern](https://lightningdesignsystem.com/components/progress-ring/) in React.\n// Based on SLDS v2.4.5\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\n// ### shortid\n// [npmjs.com/package/shortid](https://www.npmjs.com/package/shortid)\n// shortid is a short, non-sequential, url-friendly, unique id generator\nimport shortid from 'shortid';\n\n// This component's `checkProps` which issues warnings to developers about properties\n// when in development mode (similar to React's built in development tools)\nimport checkProps from './check-props';\nimport componentDoc from './component.json';\n\nimport {\n\tSETUP_ASSISTANT,\n\tSETUP_ASSISTANT_STEP,\n} from '../../utilities/constants';\n\nconst propTypes = {\n\t/**\n\t * Accepts SetupAssistantStep components only as children.\n\t */\n\tchildren: PropTypes.node,\n\t/**\n\t * CSS classes to be added to tag with `.slds-progress-bar`. Uses `classNames` [API](https://github.com/JedWatson/classnames).\n\t */\n\tclassName: PropTypes.oneOfType([\n\t\tPropTypes.array,\n\t\tPropTypes.object,\n\t\tPropTypes.string,\n\t]),\n\t/**\n\t * HTML id for component.\n\t */\n\tid: PropTypes.string,\n\t/**\n\t * Dictates whether this setup assistant has card wrappings and styling\n\t */\n\tisCard: PropTypes.bool,\n\t/**\n\t * Function to handle opening / closing of steps when the step is expandable. Passes event object and step `index`, `isOpen`, and `step` props as data.\n\t */\n\tonStepToggleIsOpen: PropTypes.func,\n\t/**\n\t * Accepts a progress bar component, which will only be visible if `isCard` is enabled\n\t */\n\tprogressBar: PropTypes.node,\n};\n\nconst defaultProps = {\n\tisCard: false,\n};\n\n/**\n * Setup Assistant provides Administrators with a centralized list of tasks for\n * onboarding organizations, clouds, or features within the Salesforce Platform.\n */\nclass SetupAssistant extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.generatedId = shortid.generate();\n\t}\n\n\tcomponentDidMount() {\n\t\tcheckProps(SETUP_ASSISTANT, this.props, componentDoc);\n\t}\n\n\tcomponentDidUpdate() {\n\t\tcheckProps(SETUP_ASSISTANT, this.props, componentDoc);\n\t}\n\n\t/**\n\t * ID as a string\n\t * @returns {string} id\n\t */\n\tgetId() {\n\t\treturn this.props.id || this.generatedId;\n\t}\n\n\trender() {\n\t\tconst steps = (\n\t\t\t<ol\n\t\t\t\tid={this.getId()}\n\t\t\t\tclassName={classNames('slds-setup-assistant', this.props.className)}\n\t\t\t>\n\t\t\t\t{React.Children.map(this.props.children, (child, i) => {\n\t\t\t\t\tif (child.type.displayName !== SETUP_ASSISTANT_STEP) return null;\n\t\t\t\t\treturn React.cloneElement(child, {\n\t\t\t\t\t\tindex: i,\n\t\t\t\t\t\tonToggleIsOpen: this.props.onStepToggleIsOpen,\n\t\t\t\t\t\tstepNumber: i + 1,\n\t\t\t\t\t\t...child.props,\n\t\t\t\t\t});\n\t\t\t\t})}\n\t\t\t</ol>\n\t\t);\n\n\t\treturn this.props.isCard ? (\n\t\t\t<section className=\"slds-card\">\n\t\t\t\t<header className=\"slds-theme_shade slds-p-around_medium slds-m-bottom_small\">\n\t\t\t\t\t{this.props.progressBar}\n\t\t\t\t</header>\n\t\t\t\t{steps}\n\t\t\t</section>\n\t\t) : (\n\t\t\t<React.Fragment>{steps}</React.Fragment>\n\t\t);\n\t}\n}\n\nSetupAssistant.displayName = SETUP_ASSISTANT;\nSetupAssistant.propTypes = propTypes;\nSetupAssistant.defaultProps = defaultProps;\n\nexport default SetupAssistant;\n"]},"metadata":{},"sourceType":"module"}