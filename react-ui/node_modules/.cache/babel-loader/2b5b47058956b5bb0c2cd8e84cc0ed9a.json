{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport memoize from 'lodash.memoize';\nvar documentDefined = typeof document !== 'undefined';\nvar canvas;\nvar docFragment;\nvar canvasContext;\n\nvar measureWidth = function measureWidth() {\n  return 0;\n};\n\nif (documentDefined) {\n  canvas = document.createElement('canvas');\n\n  if (canvas.getContext) {\n    docFragment = document.createDocumentFragment();\n    docFragment.appendChild(canvas);\n    canvasContext = canvas.getContext('2d');\n    measureWidth = memoize(function (text, font) {\n      canvasContext.font = font;\n      return canvasContext.measureText(text).width;\n    });\n  }\n}\n\nvar TextTruncate = /*#__PURE__*/function (_React$Component) {\n  _inherits(TextTruncate, _React$Component);\n\n  var _super = _createSuper(TextTruncate);\n\n  function TextTruncate() {\n    var _this;\n\n    _classCallCheck(this, TextTruncate);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {});\n\n    _defineProperty(_assertThisInitialized(_this), \"onResize\", function () {\n      _this.update(_this.props);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getRenderText\", function (ref, nextProps) {\n      if (!ref) {\n        return;\n      }\n\n      _this.scope = ref; // nextProps will be undefined for resize events, but will change if search or other props are changed\n\n      var propsToRender;\n\n      if (nextProps) {\n        propsToRender = nextProps;\n      } else {\n        propsToRender = _this.props;\n      }\n\n      var _propsToRender = propsToRender,\n          containerClassName = _propsToRender.containerClassName,\n          line = _propsToRender.line,\n          prefix = _propsToRender.prefix,\n          suffix = _propsToRender.suffix,\n          text = _propsToRender.text,\n          textTruncateChild = _propsToRender.textTruncateChild,\n          truncateText = _propsToRender.truncateText,\n          wrapper = _propsToRender.wrapper,\n          props = _objectWithoutProperties(_propsToRender, [\"containerClassName\", \"line\", \"prefix\", \"suffix\", \"text\", \"textTruncateChild\", \"truncateText\", \"wrapper\"]);\n\n      var scopeWidth = _this.scope.getBoundingClientRect().width;\n\n      var style = window.getComputedStyle(_this.scope);\n      var font = [style['font-weight'], style['font-style'], style['font-size'], style['font-family']].join(' '); // return if display:none\n\n      if (scopeWidth === 0) {\n        _this.setState({\n          renderText: null\n        });\n\n        return;\n      }\n\n      var child;\n      var outputText = text; // return if all of text can be displayed\n\n      if (scopeWidth < measureWidth(text, font)) {\n        var currentPos = 1;\n        var maxTextLength = text.length;\n        var truncatedText = '';\n        var splitPos = 0;\n        var startPos = 0;\n        var displayLine = line;\n        var width = 0;\n        var lastIsEng = false;\n        var lastSpaceIndex = -1; // eslint-disable-next-line fp/no-loops\n\n        while (displayLine !== 0) {\n          var ext = '';\n          var extraWidthDueToPrefixStyle = 0;\n\n          if (prefix && displayLine === line - 1) {\n            ext += \" \".concat(prefix); // MAGIC NUMBER: (width at letter-spacing of 0.25rems - width at normal) / number of letters\n\n            extraWidthDueToPrefixStyle = prefix.length * 0.66;\n          }\n\n          if (!displayLine) {\n            ext += truncateText;\n\n            if (suffix) {\n              ext += \" \".concat(suffix);\n            }\n          } // eslint-disable-next-line fp/no-loops\n\n\n          while (currentPos <= maxTextLength) {\n            truncatedText = text.substr(startPos, currentPos);\n            width = measureWidth(truncatedText + ext, font) + extraWidthDueToPrefixStyle;\n\n            if (width < scopeWidth) {\n              splitPos = text.indexOf(' ', currentPos + 1);\n\n              if (splitPos === -1) {\n                currentPos += 1;\n                lastIsEng = false;\n              } else {\n                lastIsEng = true;\n                currentPos = splitPos;\n              }\n            } else {\n              var lastWidth = 0; // eslint-disable-next-line fp/no-loops\n\n              do {\n                currentPos -= 1;\n                truncatedText = text.substr(startPos, currentPos);\n\n                if (truncatedText[truncatedText.length - 1] === ' ') {\n                  truncatedText = text.substr(startPos, currentPos - 1);\n                }\n\n                if (lastIsEng) {\n                  lastSpaceIndex = truncatedText.lastIndexOf(' ');\n\n                  if (lastSpaceIndex > -1) {\n                    currentPos = lastSpaceIndex;\n                    truncatedText = text.substr(startPos, currentPos);\n                  }\n                }\n\n                width = measureWidth(truncatedText + ext, font) + extraWidthDueToPrefixStyle;\n\n                if (width === lastWidth) {\n                  currentPos = 0;\n                  break;\n                } else {\n                  lastWidth = width;\n                }\n              } while (width >= scopeWidth);\n\n              startPos += currentPos;\n              break;\n            }\n          }\n\n          if (currentPos >= maxTextLength) {\n            startPos = maxTextLength;\n            break;\n          }\n\n          displayLine -= 1; // iterate\n        }\n\n        if (startPos !== maxTextLength) {\n          outputText = \"\".concat(text.substr(0, startPos)).concat(truncateText, \" \");\n          child = textTruncateChild;\n        }\n      }\n\n      var renderText;\n\n      if (wrapper) {\n        renderText = wrapper(outputText, child);\n      } else {\n        renderText = /*#__PURE__*/React.createElement(\"div\", props, outputText, child);\n      }\n\n      _this.setState({\n        renderText: renderText\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"update\", function (nextProps) {\n      _this.getRenderText(_this.scope, nextProps);\n    });\n\n    return _this;\n  }\n\n  _createClass(TextTruncate, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      window.addEventListener('resize', this.onResize, false);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(nextProps) {\n      if (nextProps.text !== this.props.text) {\n        this.update(nextProps);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      window.removeEventListener('resize', this.onResize, false);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var containerClassName = this.props.containerClassName; // inline style override\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        ref: this.getRenderText,\n        className: containerClassName,\n        style: {\n          overflow: 'hidden'\n        }\n      }, this.state.renderText);\n    }\n  }]);\n\n  return TextTruncate;\n}(React.Component);\n\n_defineProperty(TextTruncate, \"displayName\", 'TextTruncate');\n\n_defineProperty(TextTruncate, \"propTypes\", {\n  containerClassName: PropTypes.string,\n  line: PropTypes.number,\n  prefix: PropTypes.string,\n  suffix: PropTypes.string,\n  text: PropTypes.string,\n  textTruncateChild: PropTypes.node,\n  truncateText: PropTypes.string,\n  wrapper: PropTypes.func\n});\n\n_defineProperty(TextTruncate, \"defaultProps\", {\n  line: 1,\n  text: '',\n  truncateText: '…'\n});\n\nexport default TextTruncate;","map":{"version":3,"sources":["../../../../.tmp-es/components/utilities/truncate/index.jsx"],"names":["documentDefined","measureWidth","canvas","document","docFragment","canvasContext","memoize","TextTruncate","React","Component","containerClassName","PropTypes","line","prefix","suffix","text","textTruncateChild","truncateText","wrapper","func","window","nextProps","propsToRender","props","scopeWidth","style","font","renderText","outputText","currentPos","maxTextLength","truncatedText","splitPos","startPos","displayLine","width","lastIsEng","lastSpaceIndex","ext","extraWidthDueToPrefixStyle","lastWidth","child","overflow"],"mappings":"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","sourcesContent":["/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\nimport React from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport memoize from 'lodash.memoize';\n\nconst documentDefined = typeof document !== 'undefined';\n\nlet canvas;\nlet docFragment;\nlet canvasContext;\nlet measureWidth = () => 0;\n\nif (documentDefined) {\n\tcanvas = document.createElement('canvas');\n\tif (canvas.getContext) {\n\t\tdocFragment = document.createDocumentFragment();\n\t\tdocFragment.appendChild(canvas);\n\t\tcanvasContext = canvas.getContext('2d');\n\t\tmeasureWidth = memoize((text, font) => {\n\t\t\tcanvasContext.font = font;\n\t\t\treturn canvasContext.measureText(text).width;\n\t\t});\n\t}\n}\n\nclass TextTruncate extends React.Component {\n\tstatic displayName = 'TextTruncate';\n\n\tstatic propTypes = {\n\t\tcontainerClassName: PropTypes.string,\n\t\tline: PropTypes.number,\n\t\tprefix: PropTypes.string,\n\t\tsuffix: PropTypes.string,\n\t\ttext: PropTypes.string,\n\t\ttextTruncateChild: PropTypes.node,\n\t\ttruncateText: PropTypes.string,\n\t\twrapper: PropTypes.func,\n\t};\n\n\tstatic defaultProps = {\n\t\tline: 1,\n\t\ttext: '',\n\t\ttruncateText: '…',\n\t};\n\n\tstate = {};\n\n\tcomponentDidMount() {\n\t\twindow.addEventListener('resize', this.onResize, false);\n\t}\n\n\tcomponentDidUpdate(nextProps) {\n\t\tif (nextProps.text !== this.props.text) {\n\t\t\tthis.update(nextProps);\n\t\t}\n\t}\n\n\tcomponentWillUnmount() {\n\t\twindow.removeEventListener('resize', this.onResize, false);\n\t}\n\n\tonResize = () => {\n\t\tthis.update(this.props);\n\t};\n\n\tgetRenderText = (ref, nextProps) => {\n\t\tif (!ref) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.scope = ref;\n\n\t\t// nextProps will be undefined for resize events, but will change if search or other props are changed\n\t\tlet propsToRender;\n\t\tif (nextProps) {\n\t\t\tpropsToRender = nextProps;\n\t\t} else {\n\t\t\tpropsToRender = this.props;\n\t\t}\n\n\t\tconst {\n\t\t\tcontainerClassName, // eslint-disable-line no-unused-vars\n\t\t\tline,\n\t\t\tprefix,\n\t\t\tsuffix,\n\t\t\ttext,\n\t\t\ttextTruncateChild,\n\t\t\ttruncateText,\n\t\t\twrapper,\n\t\t\t...props\n\t\t} = propsToRender;\n\n\t\tconst scopeWidth = this.scope.getBoundingClientRect().width;\n\t\tconst style = window.getComputedStyle(this.scope);\n\t\tconst font = [\n\t\t\tstyle['font-weight'],\n\t\t\tstyle['font-style'],\n\t\t\tstyle['font-size'],\n\t\t\tstyle['font-family'],\n\t\t].join(' ');\n\n\t\t// return if display:none\n\t\tif (scopeWidth === 0) {\n\t\t\tthis.setState({ renderText: null });\n\t\t\treturn;\n\t\t}\n\n\t\tlet child;\n\t\tlet outputText = text;\n\n\t\t// return if all of text can be displayed\n\t\tif (scopeWidth < measureWidth(text, font)) {\n\t\t\tlet currentPos = 1;\n\t\t\tconst maxTextLength = text.length;\n\t\t\tlet truncatedText = '';\n\t\t\tlet splitPos = 0;\n\t\t\tlet startPos = 0;\n\t\t\tlet displayLine = line;\n\t\t\tlet width = 0;\n\t\t\tlet lastIsEng = false;\n\t\t\tlet lastSpaceIndex = -1;\n\n\t\t\t// eslint-disable-next-line fp/no-loops\n\t\t\twhile (displayLine !== 0) {\n\t\t\t\tlet ext = '';\n\t\t\t\tlet extraWidthDueToPrefixStyle = 0;\n\n\t\t\t\tif (prefix && displayLine === line - 1) {\n\t\t\t\t\text += ` ${prefix}`;\n\t\t\t\t\t// MAGIC NUMBER: (width at letter-spacing of 0.25rems - width at normal) / number of letters\n\t\t\t\t\textraWidthDueToPrefixStyle = prefix.length * 0.66;\n\t\t\t\t}\n\n\t\t\t\tif (!displayLine) {\n\t\t\t\t\text += truncateText;\n\n\t\t\t\t\tif (suffix) {\n\t\t\t\t\t\text += ` ${suffix}`;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// eslint-disable-next-line fp/no-loops\n\t\t\t\twhile (currentPos <= maxTextLength) {\n\t\t\t\t\ttruncatedText = text.substr(startPos, currentPos);\n\t\t\t\t\twidth =\n\t\t\t\t\t\tmeasureWidth(truncatedText + ext, font) +\n\t\t\t\t\t\textraWidthDueToPrefixStyle;\n\n\t\t\t\t\tif (width < scopeWidth) {\n\t\t\t\t\t\tsplitPos = text.indexOf(' ', currentPos + 1);\n\t\t\t\t\t\tif (splitPos === -1) {\n\t\t\t\t\t\t\tcurrentPos += 1;\n\t\t\t\t\t\t\tlastIsEng = false;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tlastIsEng = true;\n\t\t\t\t\t\t\tcurrentPos = splitPos;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlet lastWidth = 0;\n\t\t\t\t\t\t// eslint-disable-next-line fp/no-loops\n\t\t\t\t\t\tdo {\n\t\t\t\t\t\t\tcurrentPos -= 1;\n\t\t\t\t\t\t\ttruncatedText = text.substr(startPos, currentPos);\n\t\t\t\t\t\t\tif (truncatedText[truncatedText.length - 1] === ' ') {\n\t\t\t\t\t\t\t\ttruncatedText = text.substr(startPos, currentPos - 1);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (lastIsEng) {\n\t\t\t\t\t\t\t\tlastSpaceIndex = truncatedText.lastIndexOf(' ');\n\t\t\t\t\t\t\t\tif (lastSpaceIndex > -1) {\n\t\t\t\t\t\t\t\t\tcurrentPos = lastSpaceIndex;\n\t\t\t\t\t\t\t\t\ttruncatedText = text.substr(startPos, currentPos);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\twidth =\n\t\t\t\t\t\t\t\tmeasureWidth(truncatedText + ext, font) +\n\t\t\t\t\t\t\t\textraWidthDueToPrefixStyle;\n\t\t\t\t\t\t\tif (width === lastWidth) {\n\t\t\t\t\t\t\t\tcurrentPos = 0;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tlastWidth = width;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} while (width >= scopeWidth);\n\t\t\t\t\t\tstartPos += currentPos;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (currentPos >= maxTextLength) {\n\t\t\t\t\tstartPos = maxTextLength;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tdisplayLine -= 1; // iterate\n\t\t\t}\n\n\t\t\tif (startPos !== maxTextLength) {\n\t\t\t\toutputText = `${text.substr(0, startPos)}${truncateText} `;\n\t\t\t\tchild = textTruncateChild;\n\t\t\t}\n\t\t}\n\n\t\tlet renderText;\n\t\tif (wrapper) {\n\t\t\trenderText = wrapper(outputText, child);\n\t\t} else {\n\t\t\trenderText = (\n\t\t\t\t<div {...props}>\n\t\t\t\t\t{outputText}\n\t\t\t\t\t{child}\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\n\t\tthis.setState({ renderText });\n\t};\n\n\tupdate = (nextProps) => {\n\t\tthis.getRenderText(this.scope, nextProps);\n\t};\n\n\trender() {\n\t\tconst { containerClassName } = this.props;\n\n\t\t// inline style override\n\t\treturn (\n\t\t\t<div\n\t\t\t\tref={this.getRenderText}\n\t\t\t\tclassName={containerClassName}\n\t\t\t\tstyle={{ overflow: 'hidden' }}\n\t\t\t>\n\t\t\t\t{this.state.renderText}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default TextTruncate;\n"]},"metadata":{},"sourceType":"module"}