{"ast":null,"code":"/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\nvar DateUtil = {\n  firstDayOfMonth: function firstDayOfMonth(date) {\n    var newDate = new Date(date);\n    newDate.setDate(1);\n    return newDate;\n  },\n  isFirstDayOfMonth: function isFirstDayOfMonth(date) {\n    return date.getDate() === 1;\n  },\n  isLastDayOfMonth: function isLastDayOfMonth(date) {\n    return !DateUtil.isSameMonth(date, DateUtil.addDays(date, 1));\n  },\n  isSameMonth: function isSameMonth(d1, d2) {\n    if (!d1 || !d2) {\n      return false;\n    }\n\n    return d1.getFullYear() === d2.getFullYear() && d1.getMonth() === d2.getMonth();\n  },\n  isSameDay: function isSameDay(d1, d2) {\n    if (!d1 || !d2) {\n      return false;\n    }\n\n    return d1.getFullYear() === d2.getFullYear() && d1.getMonth() === d2.getMonth() && d1.getDate() === d2.getDate();\n  },\n  isCurrentMonth: function isCurrentMonth(date) {\n    if (!date) {\n      return false;\n    }\n\n    return DateUtil.isSameMonth(date, new Date());\n  },\n  isToday: function isToday(date) {\n    if (!date) {\n      return false;\n    }\n\n    return DateUtil.isSameDay(date, new Date());\n  },\n  isEqual: function isEqual(d1, d2) {\n    return d1.getTime() === d2.getTime();\n  },\n  addDays: function addDays(date, deltaDays) {\n    var newDate = new Date(date);\n    newDate.setDate(newDate.getDate() + parseInt(deltaDays, 10));\n    return newDate;\n  },\n  addWeeks: function addWeeks(date, deltaWeeks) {\n    return DateUtil.addDays(date, parseInt(deltaWeeks, 10) * 7);\n  },\n  nearestWeekDay: function nearestWeekDay(date, weekDayIndex) {\n    var delta = weekDayIndex - date.getDay();\n\n    if (delta < 0) {\n      delta += 7;\n    }\n\n    return DateUtil.addDays(date, delta);\n  },\n  isLeapYear: function isLeapYear(year) {\n    return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;\n  },\n  getDaysInMonth: function getDaysInMonth(year, month) {\n    return [31, DateUtil.isLeapYear(year) ? 29 : 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31][month];\n  },\n  addMonths: function addMonths(date, value) {\n    var newDate = new Date(date);\n    var dateOfNewDate = newDate.getDate();\n    newDate.setDate(1);\n    newDate.setMonth(newDate.getMonth() + value);\n    newDate.setDate(Math.min(dateOfNewDate, DateUtil.getDaysInMonth(newDate.getFullYear(), newDate.getMonth())));\n    return newDate;\n  }\n};\nexport default DateUtil;","map":{"version":3,"sources":["../../.tmp-es/utilities/date.js"],"names":["DateUtil","firstDayOfMonth","newDate","isFirstDayOfMonth","date","isLastDayOfMonth","isSameMonth","d1","d2","isSameDay","isCurrentMonth","isToday","isEqual","addDays","parseInt","addWeeks","nearestWeekDay","delta","weekDayIndex","isLeapYear","year","getDaysInMonth","addMonths","dateOfNewDate","Math"],"mappings":"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","sourcesContent":["/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\nconst DateUtil = {\n\tfirstDayOfMonth(date) {\n\t\tconst newDate = new Date(date);\n\t\tnewDate.setDate(1);\n\t\treturn newDate;\n\t},\n\n\tisFirstDayOfMonth(date) {\n\t\treturn date.getDate() === 1;\n\t},\n\n\tisLastDayOfMonth(date) {\n\t\treturn !DateUtil.isSameMonth(date, DateUtil.addDays(date, 1));\n\t},\n\tisSameMonth(d1, d2) {\n\t\tif (!d1 || !d2) {\n\t\t\treturn false;\n\t\t}\n\t\treturn (\n\t\t\td1.getFullYear() === d2.getFullYear() && d1.getMonth() === d2.getMonth()\n\t\t);\n\t},\n\tisSameDay(d1, d2) {\n\t\tif (!d1 || !d2) {\n\t\t\treturn false;\n\t\t}\n\t\treturn (\n\t\t\td1.getFullYear() === d2.getFullYear() &&\n\t\t\td1.getMonth() === d2.getMonth() &&\n\t\t\td1.getDate() === d2.getDate()\n\t\t);\n\t},\n\tisCurrentMonth(date) {\n\t\tif (!date) {\n\t\t\treturn false;\n\t\t}\n\t\treturn DateUtil.isSameMonth(date, new Date());\n\t},\n\tisToday(date) {\n\t\tif (!date) {\n\t\t\treturn false;\n\t\t}\n\t\treturn DateUtil.isSameDay(date, new Date());\n\t},\n\tisEqual(d1, d2) {\n\t\treturn d1.getTime() === d2.getTime();\n\t},\n\taddDays(date, deltaDays) {\n\t\tconst newDate = new Date(date);\n\t\tnewDate.setDate(newDate.getDate() + parseInt(deltaDays, 10));\n\t\treturn newDate;\n\t},\n\taddWeeks(date, deltaWeeks) {\n\t\treturn DateUtil.addDays(date, parseInt(deltaWeeks, 10) * 7);\n\t},\n\tnearestWeekDay(date, weekDayIndex) {\n\t\tlet delta = weekDayIndex - date.getDay();\n\t\tif (delta < 0) {\n\t\t\tdelta += 7;\n\t\t}\n\t\treturn DateUtil.addDays(date, delta);\n\t},\n\tisLeapYear(year) {\n\t\treturn (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;\n\t},\n\n\tgetDaysInMonth(year, month) {\n\t\treturn [\n\t\t\t31,\n\t\t\tDateUtil.isLeapYear(year) ? 29 : 28,\n\t\t\t31,\n\t\t\t30,\n\t\t\t31,\n\t\t\t30,\n\t\t\t31,\n\t\t\t31,\n\t\t\t30,\n\t\t\t31,\n\t\t\t30,\n\t\t\t31,\n\t\t][month];\n\t},\n\n\taddMonths(date, value) {\n\t\tconst newDate = new Date(date);\n\t\tconst dateOfNewDate = newDate.getDate();\n\t\tnewDate.setDate(1);\n\t\tnewDate.setMonth(newDate.getMonth() + value);\n\t\tnewDate.setDate(\n\t\t\tMath.min(\n\t\t\t\tdateOfNewDate,\n\t\t\t\tDateUtil.getDaysInMonth(newDate.getFullYear(), newDate.getMonth())\n\t\t\t)\n\t\t);\n\t\treturn newDate;\n\t},\n};\n\nexport default DateUtil;\n"]},"metadata":{},"sourceType":"module"}