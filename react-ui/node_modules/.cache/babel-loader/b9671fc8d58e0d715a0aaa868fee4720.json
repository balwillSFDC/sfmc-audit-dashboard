{"ast":null,"code":"function ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\n/**\n * This Pill component should be used within a listbox and differs from the standalone Pill component which is typically used for actions (such as a link) and not form fields. This component should be used in conjuction with `PillContainer`.\n */\n\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport assign from 'lodash.assign';\nimport KEYS from '../../../utilities/key-code';\nimport mapKeyEventCallbacks from '../../../utilities/key-callbacks';\nimport EventUtil from '../../../utilities/event';\nimport SLDSPill from '../../../components/pill';\nvar propTypes = {\n  /**\n   * Pill is the actively focused pill within a pill container. This will request focus on the DOM node.\n   */\n  active: PropTypes.bool,\n\n  /**\n   * **Assistive text for accessibility**\n   * This object is merged with the default props object on every render.\n   * * `pressDeleteOrBackspace`: Informs user of keyboard keys to press in order to remove a pill\n   */\n  assistiveText: PropTypes.shape({\n    remove: PropTypes.string\n  }),\n\n  /**\n   * SLDSAvatar component to show on the left of the pill.\n   * _Tested with Mocha framework._\n   */\n  avatar: PropTypes.element,\n\n  /**\n   * Applies the bare style to the component.\n   * _Tested with Mocha framework._\n   */\n  bare: PropTypes.bool,\n\n  /*\n   * Pills are often used for selection of a type of entity such as days in a daypicker. This prop allows you to pass in data that will be passed back to the event handler.\n   */\n  eventData: PropTypes.object,\n\n  /*\n   * Callbacks for various pill events such as click, focus, etc\n   */\n  events: PropTypes.shape({\n    onClick: PropTypes.func,\n    onFocus: PropTypes.func,\n    onRequestFocus: PropTypes.func.isRequired,\n    onRequestFocusOnNextPill: PropTypes.func.isRequired,\n    onRequestFocusOnPreviousPill: PropTypes.func.isRequired,\n    onRequestRemove: PropTypes.func.isRequired\n  }),\n\n  /**\n   * Applies the error style to the component.\n   * _Tested with Mocha framework._\n   */\n  hasError: PropTypes.bool,\n\n  /*\n   * The icon next to the pill label.\n   */\n  icon: PropTypes.element,\n\n  /*\n   * Pill Label\n   */\n  labels: PropTypes.shape({\n    label: PropTypes.string.isRequired,\n    removeTitle: PropTypes.string\n  }),\n\n  /*\n   * If true and is active pill in listbox, will trigger `events.onRequestFocus`\n   */\n  requestFocus: PropTypes.bool,\n\n  /*\n   * Pill Title\n   */\n  title: PropTypes.string,\n\n  /*\n   * Allows the user to tab to the node\n   */\n  tabIndex: PropTypes.number\n};\nvar defaultProps = {\n  assistiveText: PropTypes.shape({\n    remove: ', Press delete or backspace to remove'\n  }),\n  labels: {\n    remove: 'Remove'\n  },\n  events: {}\n};\n\nvar handleKeyDown = function handleKeyDown(event, _ref) {\n  var _callbacks;\n\n  var events = _ref.events,\n      data = _ref.data; // Helper function that takes an object literal of callbacks that are triggered with a key event\n\n  mapKeyEventCallbacks(event, {\n    callbacks: (_callbacks = {}, _defineProperty(_callbacks, KEYS.BACKSPACE, {\n      callback: events.onRequestRemove,\n      data: data\n    }), _defineProperty(_callbacks, KEYS.DELETE, {\n      callback: events.onRequestRemove,\n      data: data\n    }), _defineProperty(_callbacks, KEYS.LEFT, {\n      callback: events.onRequestFocusOnPreviousPill,\n      data: _objectSpread(_objectSpread({}, data), {}, {\n        direction: 'previous'\n      })\n    }), _defineProperty(_callbacks, KEYS.RIGHT, {\n      callback: events.onRequestFocusOnNextPill,\n      data: _objectSpread(_objectSpread({}, data), {}, {\n        direction: 'next'\n      })\n    }), _callbacks)\n  });\n};\n\nvar handleClickRemove = function handleClickRemove(event, _ref2) {\n  var events = _ref2.events,\n      data = _ref2.data;\n  EventUtil.trap(event);\n  events.onRequestRemove(event, data);\n};\n\nvar Pill = function Pill(props) {\n  var assistiveText = assign({}, defaultProps.assistiveText, props.assistiveText);\n  var labels = assign({}, defaultProps.labels, props.labels);\n  return /*#__PURE__*/React.createElement(SLDSPill, {\n    avatar: props.avatar,\n    bare: props.bare,\n    hasError: props.hasError,\n    tabIndex: props.tabIndex || '0',\n    icon: props.icon,\n    variant: \"option\",\n    labels: labels,\n    assistiveText: {\n      remove: assistiveText.remove\n    },\n    \"aria-selected\": \"true\",\n    onBlur: props.events.onBlur,\n    onClick: typeof props.events.onClick === 'function' ? function (event) {\n      if (props.events.onClick) {\n        props.events.onClick(event, _objectSpread({}, props.eventData));\n      }\n    } : null,\n    onFocus: function onFocus(event) {\n      if (props.events.onFocus) {\n        props.events.onFocus(event, _objectSpread({}, props.eventData));\n      }\n    },\n    onRemove: function onRemove(event) {\n      EventUtil.trap(event);\n      handleClickRemove(event, {\n        events: props.events,\n        data: props.eventData\n      });\n    },\n    onKeyDown: function onKeyDown(event) {\n      handleKeyDown(event, {\n        events: props.events,\n        data: props.eventData\n      });\n    },\n    ref: function ref(component) {\n      if (props.requestFocus && props.active) {\n        props.events.onRequestFocus(undefined, {\n          ref: component\n        });\n      }\n    }\n  });\n};\n\nPill.displayName = 'Pill';\nPill.propTypes = propTypes;\nPill.defaultProps = defaultProps;\nexport default Pill;","map":{"version":3,"sources":["../../../../.tmp-es/components/utilities/pill/index.jsx"],"names":["propTypes","active","PropTypes","assistiveText","remove","string","avatar","bare","eventData","events","onClick","onFocus","onRequestFocus","onRequestFocusOnNextPill","onRequestFocusOnPreviousPill","onRequestRemove","isRequired","hasError","icon","labels","label","removeTitle","requestFocus","title","tabIndex","number","defaultProps","handleKeyDown","data","mapKeyEventCallbacks","callbacks","KEYS","callback","direction","handleClickRemove","EventUtil","Pill","assign","props","ref","component"],"mappings":"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","sourcesContent":["/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\n/**\n * This Pill component should be used within a listbox and differs from the standalone Pill component which is typically used for actions (such as a link) and not form fields. This component should be used in conjuction with `PillContainer`.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport assign from 'lodash.assign';\n\nimport KEYS from '../../../utilities/key-code';\nimport mapKeyEventCallbacks from '../../../utilities/key-callbacks';\nimport EventUtil from '../../../utilities/event';\n\nimport SLDSPill from '../../../components/pill';\n\nconst propTypes = {\n\t/**\n\t * Pill is the actively focused pill within a pill container. This will request focus on the DOM node.\n\t */\n\tactive: PropTypes.bool,\n\t/**\n\t * **Assistive text for accessibility**\n\t * This object is merged with the default props object on every render.\n\t * * `pressDeleteOrBackspace`: Informs user of keyboard keys to press in order to remove a pill\n\t */\n\tassistiveText: PropTypes.shape({\n\t\tremove: PropTypes.string,\n\t}),\n\t/**\n\t * SLDSAvatar component to show on the left of the pill.\n\t * _Tested with Mocha framework._\n\t */\n\tavatar: PropTypes.element,\n\t/**\n\t * Applies the bare style to the component.\n\t * _Tested with Mocha framework._\n\t */\n\tbare: PropTypes.bool,\n\t/*\n\t * Pills are often used for selection of a type of entity such as days in a daypicker. This prop allows you to pass in data that will be passed back to the event handler.\n\t */\n\teventData: PropTypes.object,\n\t/*\n\t * Callbacks for various pill events such as click, focus, etc\n\t */\n\tevents: PropTypes.shape({\n\t\tonClick: PropTypes.func,\n\t\tonFocus: PropTypes.func,\n\t\tonRequestFocus: PropTypes.func.isRequired,\n\t\tonRequestFocusOnNextPill: PropTypes.func.isRequired,\n\t\tonRequestFocusOnPreviousPill: PropTypes.func.isRequired,\n\t\tonRequestRemove: PropTypes.func.isRequired,\n\t}),\n\t/**\n\t * Applies the error style to the component.\n\t * _Tested with Mocha framework._\n\t */\n\thasError: PropTypes.bool,\n\t/*\n\t * The icon next to the pill label.\n\t */\n\ticon: PropTypes.element,\n\t/*\n\t * Pill Label\n\t */\n\tlabels: PropTypes.shape({\n\t\tlabel: PropTypes.string.isRequired,\n\t\tremoveTitle: PropTypes.string,\n\t}),\n\t/*\n\t * If true and is active pill in listbox, will trigger `events.onRequestFocus`\n\t */\n\trequestFocus: PropTypes.bool,\n\t/*\n\t * Pill Title\n\t */\n\ttitle: PropTypes.string,\n\t/*\n\t * Allows the user to tab to the node\n\t */\n\ttabIndex: PropTypes.number,\n};\n\nconst defaultProps = {\n\tassistiveText: PropTypes.shape({\n\t\tremove: ', Press delete or backspace to remove',\n\t}),\n\tlabels: {\n\t\tremove: 'Remove',\n\t},\n\tevents: {},\n};\n\nconst handleKeyDown = (event, { events, data }) => {\n\t// Helper function that takes an object literal of callbacks that are triggered with a key event\n\tmapKeyEventCallbacks(event, {\n\t\tcallbacks: {\n\t\t\t[KEYS.BACKSPACE]: { callback: events.onRequestRemove, data },\n\t\t\t[KEYS.DELETE]: { callback: events.onRequestRemove, data },\n\t\t\t[KEYS.LEFT]: {\n\t\t\t\tcallback: events.onRequestFocusOnPreviousPill,\n\t\t\t\tdata: { ...data, direction: 'previous' },\n\t\t\t},\n\t\t\t[KEYS.RIGHT]: {\n\t\t\t\tcallback: events.onRequestFocusOnNextPill,\n\t\t\t\tdata: { ...data, direction: 'next' },\n\t\t\t},\n\t\t},\n\t});\n};\n\nconst handleClickRemove = (event, { events, data }) => {\n\tEventUtil.trap(event);\n\tevents.onRequestRemove(event, data);\n};\n\nconst Pill = (props) => {\n\tconst assistiveText = assign(\n\t\t{},\n\t\tdefaultProps.assistiveText,\n\t\tprops.assistiveText\n\t);\n\tconst labels = assign({}, defaultProps.labels, props.labels);\n\n\treturn (\n\t\t<SLDSPill\n\t\t\tavatar={props.avatar}\n\t\t\tbare={props.bare}\n\t\t\thasError={props.hasError}\n\t\t\ttabIndex={props.tabIndex || '0'}\n\t\t\ticon={props.icon}\n\t\t\tvariant=\"option\"\n\t\t\tlabels={labels}\n\t\t\tassistiveText={{\n\t\t\t\tremove: assistiveText.remove,\n\t\t\t}}\n\t\t\taria-selected=\"true\"\n\t\t\tonBlur={props.events.onBlur}\n\t\t\tonClick={\n\t\t\t\ttypeof props.events.onClick === 'function'\n\t\t\t\t\t? (event) => {\n\t\t\t\t\t\t\tif (props.events.onClick) {\n\t\t\t\t\t\t\t\tprops.events.onClick(event, {\n\t\t\t\t\t\t\t\t\t...props.eventData,\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t  }\n\t\t\t\t\t: null\n\t\t\t}\n\t\t\tonFocus={(event) => {\n\t\t\t\tif (props.events.onFocus) {\n\t\t\t\t\tprops.events.onFocus(event, {\n\t\t\t\t\t\t...props.eventData,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}}\n\t\t\tonRemove={(event) => {\n\t\t\t\tEventUtil.trap(event);\n\t\t\t\thandleClickRemove(event, {\n\t\t\t\t\tevents: props.events,\n\t\t\t\t\tdata: props.eventData,\n\t\t\t\t});\n\t\t\t}}\n\t\t\tonKeyDown={(event) => {\n\t\t\t\thandleKeyDown(event, {\n\t\t\t\t\tevents: props.events,\n\t\t\t\t\tdata: props.eventData,\n\t\t\t\t});\n\t\t\t}}\n\t\t\tref={(component) => {\n\t\t\t\tif (props.requestFocus && props.active) {\n\t\t\t\t\tprops.events.onRequestFocus(undefined, { ref: component });\n\t\t\t\t}\n\t\t\t}}\n\t\t/>\n\t);\n};\n\nPill.displayName = 'Pill';\nPill.propTypes = propTypes;\nPill.defaultProps = defaultProps;\n\nexport default Pill;\n"]},"metadata":{},"sourceType":"module"}