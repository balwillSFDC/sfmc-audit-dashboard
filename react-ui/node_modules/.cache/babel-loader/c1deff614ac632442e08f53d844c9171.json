{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport React from 'react';\nimport CustomColorForm from './custom-color-form';\nimport HsvColor from './hsv-color'; // using state to manage everything in here because multiple HSV coordinates\n// can map to a single RGB coordinate and we lose that if we're always passing\n// in a hex color\n\nvar CustomColor = /*#__PURE__*/function (_React$Component) {\n  _inherits(CustomColor, _React$Component);\n\n  var _super = _createSuper(CustomColor);\n\n  function CustomColor() {\n    _classCallCheck(this, CustomColor);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(CustomColor, [{\n    key: \"render\",\n    value: function render() {\n      var errorText;\n\n      if (this.props.errorTextWorkingColor) {\n        errorText = this.props.errorTextWorkingColor;\n      } else if (this.props.color.errors && this.props.color.errors.hex) {\n        errorText = this.props.labels.invalidColor;\n      } else {\n        errorText = this.props.labels.invalidComponent;\n      }\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"slds-color-picker__custom\"\n      }, /*#__PURE__*/React.createElement(HsvColor, {\n        assistiveText: this.props.assistiveText,\n        color: this.props.color,\n        id: this.props.id,\n        labels: this.props.labels,\n        onHueChange: this.props.onHueChange,\n        onSaturationValueChange: this.props.onSaturationValueChange,\n        onSaturationNavigate: this.props.onSaturationNavigate,\n        onValueNavigate: this.props.onValueNavigate,\n        onSwatchChange: this.props.onSwatchChange,\n        previousColor: this.props.previousColor\n      }), /*#__PURE__*/React.createElement(CustomColorForm, {\n        color: this.props.color,\n        id: this.props.id,\n        errorTextWorkingColor: this.props.errorTextWorkingColor,\n        labels: this.props.labels,\n        onBlueChange: this.props.onBlueChange,\n        onGreenChange: this.props.onGreenChange,\n        onHexChange: this.props.onHexChange,\n        onRedChange: this.props.onRedChange\n      }), this.props.errorTextWorkingColor || this.props.color.errors ? /*#__PURE__*/React.createElement(\"p\", {\n        className: \"slds-form-error slds-color-picker__input-custom-error\",\n        id: \"color-picker-custom-error-\".concat(this.props.id)\n      }, errorText) : '');\n    }\n  }]);\n\n  return CustomColor;\n}(React.Component);\n\n_defineProperty(CustomColor, \"displayName\", 'SLDSCustomColor');\n\nexport default CustomColor;","map":{"version":3,"sources":["../../../../.tmp-es/components/color-picker/private/custom-color.jsx"],"names":["CustomColor","React","Component","errorText","previousColor","onRedChange"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAA,KAAA,MAAA,OAAA;AAEA,OAAA,eAAA,MAAA,qBAAA;AACA,OAAA,QAAA,MAAA,aAAA,C,CAEA;AACA;AACA;;IACMA,W;;;;;;;;;;;;;6BAGI;AACR,UAAA,SAAA;;AAEA,UAAI,KAAA,KAAA,CAAJ,qBAAA,EAAsC;AACrCG,QAAAA,SAAS,GAAG,KAAA,KAAA,CAAZA,qBAAAA;AADD,OAAA,MAEO,IAAI,KAAA,KAAA,CAAA,KAAA,CAAA,MAAA,IAA2B,KAAA,KAAA,CAAA,KAAA,CAAA,MAAA,CAA/B,GAAA,EAA4D;AAClEA,QAAAA,SAAS,GAAG,KAAA,KAAA,CAAA,MAAA,CAAZA,YAAAA;AADM,OAAA,MAEA;AACNA,QAAAA,SAAS,GAAG,KAAA,KAAA,CAAA,MAAA,CAAZA,gBAAAA;AACA;;AAED,aAAA,aACC,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,QAAA,SAAS,EAAC;AAAf,OAAA,EAAA,aACC,KAAA,CAAA,aAAA,CAAA,QAAA,EAAA;AACC,QAAA,aAAa,EAAE,KAAA,KAAA,CADhB,aAAA;AAEC,QAAA,KAAK,EAAE,KAAA,KAAA,CAFR,KAAA;AAGC,QAAA,EAAE,EAAE,KAAA,KAAA,CAHL,EAAA;AAIC,QAAA,MAAM,EAAE,KAAA,KAAA,CAJT,MAAA;AAKC,QAAA,WAAW,EAAE,KAAA,KAAA,CALd,WAAA;AAMC,QAAA,uBAAuB,EAAE,KAAA,KAAA,CAN1B,uBAAA;AAOC,QAAA,oBAAoB,EAAE,KAAA,KAAA,CAPvB,oBAAA;AAQC,QAAA,eAAe,EAAE,KAAA,KAAA,CARlB,eAAA;AASC,QAAA,cAAc,EAAE,KAAA,KAAA,CATjB,cAAA;AAUC,QAAA,aAAa,EAAE,KAAA,KAAA,CAAWC;AAV3B,OAAA,CADD,EAAA,aAaC,KAAA,CAAA,aAAA,CAAA,eAAA,EAAA;AACC,QAAA,KAAK,EAAE,KAAA,KAAA,CADR,KAAA;AAEC,QAAA,EAAE,EAAE,KAAA,KAAA,CAFL,EAAA;AAGC,QAAA,qBAAqB,EAAE,KAAA,KAAA,CAHxB,qBAAA;AAIC,QAAA,MAAM,EAAE,KAAA,KAAA,CAJT,MAAA;AAKC,QAAA,YAAY,EAAE,KAAA,KAAA,CALf,YAAA;AAMC,QAAA,aAAa,EAAE,KAAA,KAAA,CANhB,aAAA;AAOC,QAAA,WAAW,EAAE,KAAA,KAAA,CAPd,WAAA;AAQC,QAAA,WAAW,EAAE,KAAA,KAAA,CAAWC;AARzB,OAAA,CAbD,EAuBE,KAAA,KAAA,CAAA,qBAAA,IAAoC,KAAA,KAAA,CAAA,KAAA,CAApC,MAAA,GAAA,aACA,KAAA,CAAA,aAAA,CAAA,GAAA,EAAA;AACC,QAAA,SAAS,EADV,uDAAA;AAEC,QAAA,EAAE,EAAA,6BAAA,MAAA,CAA+B,KAAA,KAAA,CAA/B,EAAA;AAFH,OAAA,EADA,SACA,CADA,GAxBH,EACC,CADD;AAoCA;;;;EAlDwBJ,KAAK,CAACC,S;;gBAA1BF,W,iBACgB,iB;;AAoDtB,eAAA,WAAA","sourcesContent":["import React from 'react';\n\nimport CustomColorForm from './custom-color-form';\nimport HsvColor from './hsv-color';\n\n// using state to manage everything in here because multiple HSV coordinates\n// can map to a single RGB coordinate and we lose that if we're always passing\n// in a hex color\nclass CustomColor extends React.Component {\n\tstatic displayName = 'SLDSCustomColor';\n\n\trender() {\n\t\tlet errorText;\n\n\t\tif (this.props.errorTextWorkingColor) {\n\t\t\terrorText = this.props.errorTextWorkingColor;\n\t\t} else if (this.props.color.errors && this.props.color.errors.hex) {\n\t\t\terrorText = this.props.labels.invalidColor;\n\t\t} else {\n\t\t\terrorText = this.props.labels.invalidComponent;\n\t\t}\n\n\t\treturn (\n\t\t\t<div className=\"slds-color-picker__custom\">\n\t\t\t\t<HsvColor\n\t\t\t\t\tassistiveText={this.props.assistiveText}\n\t\t\t\t\tcolor={this.props.color}\n\t\t\t\t\tid={this.props.id}\n\t\t\t\t\tlabels={this.props.labels}\n\t\t\t\t\tonHueChange={this.props.onHueChange}\n\t\t\t\t\tonSaturationValueChange={this.props.onSaturationValueChange}\n\t\t\t\t\tonSaturationNavigate={this.props.onSaturationNavigate}\n\t\t\t\t\tonValueNavigate={this.props.onValueNavigate}\n\t\t\t\t\tonSwatchChange={this.props.onSwatchChange}\n\t\t\t\t\tpreviousColor={this.props.previousColor}\n\t\t\t\t/>\n\t\t\t\t<CustomColorForm\n\t\t\t\t\tcolor={this.props.color}\n\t\t\t\t\tid={this.props.id}\n\t\t\t\t\terrorTextWorkingColor={this.props.errorTextWorkingColor}\n\t\t\t\t\tlabels={this.props.labels}\n\t\t\t\t\tonBlueChange={this.props.onBlueChange}\n\t\t\t\t\tonGreenChange={this.props.onGreenChange}\n\t\t\t\t\tonHexChange={this.props.onHexChange}\n\t\t\t\t\tonRedChange={this.props.onRedChange}\n\t\t\t\t/>\n\t\t\t\t{this.props.errorTextWorkingColor || this.props.color.errors ? (\n\t\t\t\t\t<p\n\t\t\t\t\t\tclassName=\"slds-form-error slds-color-picker__input-custom-error\"\n\t\t\t\t\t\tid={`color-picker-custom-error-${this.props.id}`}\n\t\t\t\t\t>\n\t\t\t\t\t\t{errorText}\n\t\t\t\t\t</p>\n\t\t\t\t) : (\n\t\t\t\t\t''\n\t\t\t\t)}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default CustomColor;\n"]},"metadata":{},"sourceType":"module"}