{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n// ### React\n\n\nimport React from 'react';\nimport PropTypes from 'prop-types'; // ### classNames\n\nimport classNames from 'classnames'; // ### find\n\nimport find from 'lodash.find'; // ## Children\n\nimport Checkbox from '../../checkbox';\nimport Radio from '../../radio'; // ## Constants\n\nimport { DATA_TABLE_ROW, DATA_TABLE_ROW_ACTIONS, DATA_TABLE_CELL } from '../../../utilities/constants';\n/**\n * Used internally, provides row rendering to the DataTable.\n */\n\nvar DataTableRow = /*#__PURE__*/function (_React$Component) {\n  _inherits(DataTableRow, _React$Component);\n\n  var _super = _createSuper(DataTableRow);\n\n  function DataTableRow() {\n    var _this;\n\n    _classCallCheck(this, DataTableRow);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"isSelected\", function () {\n      return !!find(_this.props.selection, _this.props.item);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleToggle\", function (e, _ref) {\n      var checked = _ref.checked;\n      return _this.props.onToggle(_this.props.item, checked, e);\n    });\n\n    return _this;\n  }\n\n  _createClass(DataTableRow, [{\n    key: \"render\",\n    // ### Render\n    value: function render() {\n      var _this2 = this;\n\n      var ariaProps = {};\n      var isSelected = this.isSelected();\n\n      if (this.props.canSelectRows) {\n        ariaProps['aria-selected'] = isSelected ? 'true' : 'false';\n      } // i18n\n\n\n      return /*#__PURE__*/React.createElement(\"tr\", _extends({}, ariaProps, {\n        className: classNames(this.props.className, {\n          'slds-hint-parent': this.props.rowActions,\n          'slds-is-selected': this.props.canSelectRows && isSelected\n        })\n      }), this.props.canSelectRows ? /*#__PURE__*/React.createElement(\"td\", {\n        role: this.props.fixedLayout ? 'gridcell' : null,\n        className: \"slds-text-align_right\",\n        \"data-label\": this.props.stacked ? 'Select Row' : undefined,\n        style: {\n          width: '3.25rem'\n        }\n      }, this.props.canSelectRows === 'radio' ? /*#__PURE__*/React.createElement(Radio, {\n        assistiveText: {\n          label: \"\".concat(this.props.assistiveText.selectRow, \" \").concat(Number(this.props.index) + 1)\n        },\n        \"aria-labelledby\": \"\".concat(this.props.id, \"-SelectRow-label \").concat(this.props.tableId, \"-SLDSDataTableHead-column-group-header-row-select\"),\n        checked: isSelected,\n        className: \"slds-m-right_x-small\",\n        id: \"\".concat(this.props.id, \"-SelectRow\"),\n        labelId: \"\".concat(this.props.id, \"-SelectRow-label\"),\n        name: \"\".concat(this.props.tableId, \"-SelectRow\"),\n        onChange: this.handleToggle\n      }) : /*#__PURE__*/React.createElement(Checkbox, {\n        assistiveText: {\n          label: \"\".concat(this.props.assistiveText.selectRow, \" \").concat(Number(this.props.index) + 1)\n        },\n        \"aria-labelledby\": \"\".concat(this.props.id, \"-SelectRow-label \").concat(this.props.tableId, \"-SLDSDataTableHead-column-group-header-row-select\"),\n        checked: isSelected,\n        id: \"\".concat(this.props.id, \"-SelectRow\"),\n        labelId: \"\".concat(this.props.id, \"-SelectRow-label\"),\n        name: \"SelectRow\".concat(this.props.index + 1),\n        onChange: this.handleToggle\n      })) : null, this.props.columns.map(function (column) {\n        var Cell = column.Cell;\n        var cellId = \"\".concat(_this2.props.id, \"-\").concat(DATA_TABLE_CELL, \"-\").concat(column.props.property);\n        return /*#__PURE__*/React.createElement(Cell, _extends({}, column.props, {\n          className: column.props.truncate ? 'slds-truncate' : null,\n          fixedLayout: _this2.props.fixedLayout,\n          rowHeader: column.props.primaryColumn,\n          id: cellId,\n          item: _this2.props.item,\n          key: cellId,\n          width: column.props.width,\n          headerId: _this2.props.item.headerId,\n          columns: _this2.props.columns\n        }), _this2.props.item[column.props.property]);\n      }), this.props.rowActions ? /*#__PURE__*/React.cloneElement(this.props.rowActions, {\n        id: \"\".concat(this.props.id, \"-\").concat(DATA_TABLE_ROW_ACTIONS),\n        item: this.props.item\n      }) : null);\n    }\n  }]);\n\n  return DataTableRow;\n}(React.Component);\n\n_defineProperty(DataTableRow, \"displayName\", DATA_TABLE_ROW);\n\n_defineProperty(DataTableRow, \"propTypes\", {\n  assistiveText: PropTypes.shape({\n    actionsHeader: PropTypes.string,\n    columnSort: PropTypes.string,\n    columnSortedAscending: PropTypes.string,\n    columnSortedDescending: PropTypes.string,\n    selectAllRows: PropTypes.string,\n    selectRow: PropTypes.string\n  }),\n  canSelectRows: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['checkbox', 'radio'])]),\n  className: PropTypes.string,\n  columns: PropTypes.arrayOf(PropTypes.shape({\n    Cell: PropTypes.func,\n    props: PropTypes.object\n  })),\n\n  /**\n   * Use this if you are creating an advanced table (selectable, sortable, or resizable rows)\n   */\n  fixedLayout: PropTypes.bool,\n  id: PropTypes.string.isRequired,\n  item: PropTypes.object.isRequired,\n  onToggle: PropTypes.func,\n  rowActions: PropTypes.element,\n  selection: PropTypes.array,\n  tableId: PropTypes.string\n});\n\nexport default DataTableRow;","map":{"version":3,"sources":["../../../../.tmp-es/components/data-table/private/row.jsx"],"names":["DataTableRow","React","Component","DATA_TABLE_ROW","assistiveText","actionsHeader","PropTypes","columnSort","columnSortedAscending","columnSortedDescending","selectAllRows","selectRow","string","canSelectRows","className","columns","Cell","props","object","fixedLayout","id","item","onToggle","rowActions","selection","tableId","find","checked","ariaProps","isSelected","classNames","width","label","Number","handleToggle","column","cellId"],"mappings":"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","sourcesContent":["/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\n// ### React\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\n// ### classNames\nimport classNames from 'classnames';\n\n// ### find\nimport find from 'lodash.find';\n\n// ## Children\nimport Checkbox from '../../checkbox';\nimport Radio from '../../radio';\n\n// ## Constants\nimport {\n\tDATA_TABLE_ROW,\n\tDATA_TABLE_ROW_ACTIONS,\n\tDATA_TABLE_CELL,\n} from '../../../utilities/constants';\n\n/**\n * Used internally, provides row rendering to the DataTable.\n */\nclass DataTableRow extends React.Component {\n\t// ### Display Name\n\t// Always use the canonical component name as the React display name.\n\tstatic displayName = DATA_TABLE_ROW;\n\n\t// ### Prop Types\n\tstatic propTypes = {\n\t\tassistiveText: PropTypes.shape({\n\t\t\tactionsHeader: PropTypes.string,\n\t\t\tcolumnSort: PropTypes.string,\n\t\t\tcolumnSortedAscending: PropTypes.string,\n\t\t\tcolumnSortedDescending: PropTypes.string,\n\t\t\tselectAllRows: PropTypes.string,\n\t\t\tselectRow: PropTypes.string,\n\t\t}),\n\t\tcanSelectRows: PropTypes.oneOfType([\n\t\t\tPropTypes.bool,\n\t\t\tPropTypes.oneOf(['checkbox', 'radio']),\n\t\t]),\n\t\tclassName: PropTypes.string,\n\t\tcolumns: PropTypes.arrayOf(\n\t\t\tPropTypes.shape({\n\t\t\t\tCell: PropTypes.func,\n\t\t\t\tprops: PropTypes.object,\n\t\t\t})\n\t\t),\n\t\t/**\n\t\t * Use this if you are creating an advanced table (selectable, sortable, or resizable rows)\n\t\t */\n\t\tfixedLayout: PropTypes.bool,\n\t\tid: PropTypes.string.isRequired,\n\t\titem: PropTypes.object.isRequired,\n\t\tonToggle: PropTypes.func,\n\t\trowActions: PropTypes.element,\n\t\tselection: PropTypes.array,\n\t\ttableId: PropTypes.string,\n\t};\n\n\tisSelected = () => !!find(this.props.selection, this.props.item);\n\n\thandleToggle = (e, { checked }) =>\n\t\tthis.props.onToggle(this.props.item, checked, e);\n\n\t// ### Render\n\trender() {\n\t\tconst ariaProps = {};\n\t\tconst isSelected = this.isSelected();\n\n\t\tif (this.props.canSelectRows) {\n\t\t\tariaProps['aria-selected'] = isSelected ? 'true' : 'false';\n\t\t}\n\n\t\t// i18n\n\t\treturn (\n\t\t\t<tr\n\t\t\t\t{...ariaProps}\n\t\t\t\tclassName={classNames(this.props.className, {\n\t\t\t\t\t'slds-hint-parent': this.props.rowActions,\n\t\t\t\t\t'slds-is-selected': this.props.canSelectRows && isSelected,\n\t\t\t\t})}\n\t\t\t>\n\t\t\t\t{this.props.canSelectRows ? (\n\t\t\t\t\t<td\n\t\t\t\t\t\trole={this.props.fixedLayout ? 'gridcell' : null}\n\t\t\t\t\t\tclassName=\"slds-text-align_right\"\n\t\t\t\t\t\tdata-label={this.props.stacked ? 'Select Row' : undefined}\n\t\t\t\t\t\tstyle={{ width: '3.25rem' }}\n\t\t\t\t\t>\n\t\t\t\t\t\t{this.props.canSelectRows === 'radio' ? (\n\t\t\t\t\t\t\t<Radio\n\t\t\t\t\t\t\t\tassistiveText={{\n\t\t\t\t\t\t\t\t\tlabel: `${this.props.assistiveText.selectRow} ${\n\t\t\t\t\t\t\t\t\t\tNumber(this.props.index) + 1\n\t\t\t\t\t\t\t\t\t}`,\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\taria-labelledby={`${this.props.id}-SelectRow-label ${this.props.tableId}-SLDSDataTableHead-column-group-header-row-select`}\n\t\t\t\t\t\t\t\tchecked={isSelected}\n\t\t\t\t\t\t\t\tclassName=\"slds-m-right_x-small\"\n\t\t\t\t\t\t\t\tid={`${this.props.id}-SelectRow`}\n\t\t\t\t\t\t\t\tlabelId={`${this.props.id}-SelectRow-label`}\n\t\t\t\t\t\t\t\tname={`${this.props.tableId}-SelectRow`}\n\t\t\t\t\t\t\t\tonChange={this.handleToggle}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<Checkbox\n\t\t\t\t\t\t\t\tassistiveText={{\n\t\t\t\t\t\t\t\t\tlabel: `${this.props.assistiveText.selectRow} ${\n\t\t\t\t\t\t\t\t\t\tNumber(this.props.index) + 1\n\t\t\t\t\t\t\t\t\t}`,\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\taria-labelledby={`${this.props.id}-SelectRow-label ${this.props.tableId}-SLDSDataTableHead-column-group-header-row-select`}\n\t\t\t\t\t\t\t\tchecked={isSelected}\n\t\t\t\t\t\t\t\tid={`${this.props.id}-SelectRow`}\n\t\t\t\t\t\t\t\tlabelId={`${this.props.id}-SelectRow-label`}\n\t\t\t\t\t\t\t\tname={`SelectRow${this.props.index + 1}`}\n\t\t\t\t\t\t\t\tonChange={this.handleToggle}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</td>\n\t\t\t\t) : null}\n\t\t\t\t{this.props.columns.map((column) => {\n\t\t\t\t\tconst { Cell } = column;\n\t\t\t\t\tconst cellId = `${this.props.id}-${DATA_TABLE_CELL}-${column.props.property}`;\n\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Cell\n\t\t\t\t\t\t\t{...column.props}\n\t\t\t\t\t\t\tclassName={column.props.truncate ? 'slds-truncate' : null}\n\t\t\t\t\t\t\tfixedLayout={this.props.fixedLayout}\n\t\t\t\t\t\t\trowHeader={column.props.primaryColumn}\n\t\t\t\t\t\t\tid={cellId}\n\t\t\t\t\t\t\titem={this.props.item}\n\t\t\t\t\t\t\tkey={cellId}\n\t\t\t\t\t\t\twidth={column.props.width}\n\t\t\t\t\t\t\theaderId={this.props.item.headerId}\n\t\t\t\t\t\t\tcolumns={this.props.columns}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{this.props.item[column.props.property]}\n\t\t\t\t\t\t</Cell>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t\t{this.props.rowActions\n\t\t\t\t\t? React.cloneElement(this.props.rowActions, {\n\t\t\t\t\t\t\tid: `${this.props.id}-${DATA_TABLE_ROW_ACTIONS}`,\n\t\t\t\t\t\t\titem: this.props.item,\n\t\t\t\t\t  })\n\t\t\t\t\t: null}\n\t\t\t</tr>\n\t\t);\n\t}\n}\n\nexport default DataTableRow;\n"]},"metadata":{},"sourceType":"module"}