{"ast":null,"code":"/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport Controls from '../controls';\nimport DetailRow from '../detail-row';\nimport Icon from '../../../icon';\nimport MediaObject from '../../../media-object';\nimport Title from '../title';\nvar displayName = 'PageHeaderRecordHome';\nvar propTypes = {\n  /**\n   * An array of detail blocks (used in \"recordHome\" variant)\n   */\n  details: PropTypes.array,\n\n  /**\n   * The label property can be a string or a React element\n   */\n  label: PropTypes.node,\n\n  /**\n   * The page header icon\n   */\n  icon: PropTypes.element,\n\n  /**\n   * Content to appear on the right hand side of the page header\n   * prop 'contentRight' will be deprecated soon, use 'onRenderActions' instead\n   */\n  onRenderActions: PropTypes.func,\n\n  /**\n   * The title property can be a string or a React element\n   */\n  title: PropTypes.node\n};\n\nvar RecordHome = function RecordHome(props) {\n  var icon; // Backwards compatibility\n\n  if (props.iconName) {\n    icon = /*#__PURE__*/React.createElement(Icon, {\n      category: props.iconCategory,\n      className: \"slds-page-header__icon\",\n      name: props.iconName,\n      position: props.iconPosition,\n      size: props.iconSize,\n      variant: props.iconVariant\n    });\n  } else if (props.icon) {\n    var iconClasses = 'slds-page-header__icon';\n\n    if (props.icon.props) {\n      iconClasses = classnames(props.icon.props.className, iconClasses);\n    }\n\n    icon = /*#__PURE__*/React.cloneElement(props.icon, {\n      className: iconClasses\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"slds-page-header__row\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"slds-page-header__col-title\"\n  }, /*#__PURE__*/React.createElement(MediaObject, {\n    body: /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"slds-page-header__name\"\n    }, /*#__PURE__*/React.createElement(Title, {\n      content: props.title,\n      label: props.label\n    }))),\n    figure: icon\n  })), /*#__PURE__*/React.createElement(Controls, {\n    contentRight: props.contentRight,\n    onRenderActions: props.onRenderActions,\n    type: \"actions\"\n  })), props.details ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"slds-page-header__row slds-page-header__row_gutters\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"slds-page-header__col-details\"\n  }, /*#__PURE__*/React.createElement(DetailRow, {\n    details: props.details\n  }))) : null);\n};\n\nRecordHome.displayName = displayName;\nRecordHome.propTypes = propTypes;\nexport default RecordHome;","map":{"version":3,"sources":["../../../../../.tmp-es/components/page-header/private/record-home/index.jsx"],"names":["displayName","propTypes","details","PropTypes","label","icon","onRenderActions","title","node","RecordHome","props","iconVariant","iconClasses","classnames","className"],"mappings":"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","sourcesContent":["/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nimport Controls from '../controls';\nimport DetailRow from '../detail-row';\nimport Icon from '../../../icon';\nimport MediaObject from '../../../media-object';\nimport Title from '../title';\n\nconst displayName = 'PageHeaderRecordHome';\nconst propTypes = {\n\t/**\n\t * An array of detail blocks (used in \"recordHome\" variant)\n\t */\n\tdetails: PropTypes.array,\n\t/**\n\t * The label property can be a string or a React element\n\t */\n\tlabel: PropTypes.node,\n\t/**\n\t * The page header icon\n\t */\n\ticon: PropTypes.element,\n\t/**\n\t * Content to appear on the right hand side of the page header\n\t * prop 'contentRight' will be deprecated soon, use 'onRenderActions' instead\n\t */\n\tonRenderActions: PropTypes.func,\n\t/**\n\t * The title property can be a string or a React element\n\t */\n\ttitle: PropTypes.node,\n};\n\nconst RecordHome = (props) => {\n\tlet icon;\n\n\t// Backwards compatibility\n\tif (props.iconName) {\n\t\ticon = (\n\t\t\t<Icon\n\t\t\t\tcategory={props.iconCategory}\n\t\t\t\tclassName=\"slds-page-header__icon\"\n\t\t\t\tname={props.iconName}\n\t\t\t\tposition={props.iconPosition}\n\t\t\t\tsize={props.iconSize}\n\t\t\t\tvariant={props.iconVariant}\n\t\t\t/>\n\t\t);\n\t} else if (props.icon) {\n\t\tlet iconClasses = 'slds-page-header__icon';\n\n\t\tif (props.icon.props) {\n\t\t\ticonClasses = classnames(props.icon.props.className, iconClasses);\n\t\t}\n\n\t\ticon = React.cloneElement(props.icon, { className: iconClasses });\n\t}\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<div className=\"slds-page-header__row\">\n\t\t\t\t<div className=\"slds-page-header__col-title\">\n\t\t\t\t\t<MediaObject\n\t\t\t\t\t\tbody={\n\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t<div className=\"slds-page-header__name\">\n\t\t\t\t\t\t\t\t\t<Title content={props.title} label={props.label} />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t}\n\t\t\t\t\t\tfigure={icon}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<Controls\n\t\t\t\t\tcontentRight={props.contentRight}\n\t\t\t\t\tonRenderActions={props.onRenderActions}\n\t\t\t\t\ttype=\"actions\"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t{props.details ? (\n\t\t\t\t<div className=\"slds-page-header__row slds-page-header__row_gutters\">\n\t\t\t\t\t<div className=\"slds-page-header__col-details\">\n\t\t\t\t\t\t<DetailRow details={props.details} />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t) : null}\n\t\t</React.Fragment>\n\t);\n};\n\nRecordHome.displayName = displayName;\nRecordHome.propTypes = propTypes;\n\nexport default RecordHome;\n"]},"metadata":{},"sourceType":"module"}