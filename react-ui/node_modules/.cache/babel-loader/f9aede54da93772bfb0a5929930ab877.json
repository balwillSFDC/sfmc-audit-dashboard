{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n/* eslint-disable react/jsx-curly-brace-presence */\n\n/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n// Implements the [Radio Group design pattern](https://lightningdesignsystem.com/components/radio-group/) in React.\n// Based on SLDS v2.5.0\n\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport shortid from 'shortid';\nimport assign from 'lodash.assign';\nimport { RADIO_GROUP } from '../../utilities/constants';\nvar propTypes = {\n  /**\n   * **Assistive text for accessibility**\n   * * `label`: This label appears in the legend.\n   * * `required`: Text to help identify the group as required\n   */\n  assistiveText: PropTypes.shape({\n    label: PropTypes.string,\n    required: PropTypes.string\n  }),\n\n  /**\n   * Children are expected to be Radio components.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Custom CSS classes added to the node.\n   */\n  className: PropTypes.oneOfType([PropTypes.array, PropTypes.object, PropTypes.string]),\n\n  /**\n   * **Text labels for internationalization**\n   * This object is merged with the default props object on every render.\n   * * `error`: Message to display when any of Checkboxes are in an error state.\n   * * `label`: This label appears above the radio group.\n   */\n  labels: PropTypes.shape({\n    error: PropTypes.string,\n    label: PropTypes.string\n  }),\n\n  /**\n   * This event fires when the radio selection changes.\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * Disable all radio inputs.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Adds an indicator that this field is required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The name of this radio group.\n   */\n  name: PropTypes.string,\n\n  /**\n   * The ID of the error message, for linking to radio inputs with aria-describedby.\n   */\n  errorId: PropTypes.string,\n\n  /**\n   * Variants of radio groups such as Radio Button Group\n   */\n  variant: PropTypes.oneOf(['base', 'button-group'])\n};\nvar defaultProps = {\n  assistiveText: {\n    required: 'Required'\n  },\n  labels: {},\n  variant: 'base'\n};\n/**\n * A styled select list that can have a single entry checked at any one time.\n * The RadioGroup component wraps [Radio](/components/radios) components, which should be used as children.\n */\n\nvar RadioGroup = /*#__PURE__*/function (_React$Component) {\n  _inherits(RadioGroup, _React$Component);\n\n  var _super = _createSuper(RadioGroup);\n\n  function RadioGroup(props) {\n    var _this;\n\n    _classCallCheck(this, RadioGroup);\n\n    _this = _super.call(this, props);\n    _this.generatedName = shortid.generate();\n    _this.generatedErrorId = shortid.generate();\n    return _this;\n  }\n\n  _createClass(RadioGroup, [{\n    key: \"getErrorId\",\n    value: function getErrorId() {\n      if (this.hasError()) {\n        return this.props.errorId || this.generatedErrorId;\n      }\n\n      return undefined;\n    }\n  }, {\n    key: \"getName\",\n    value: function getName() {\n      return this.props.name || this.generatedName;\n    }\n  }, {\n    key: \"hasError\",\n    value: function hasError() {\n      return !!this.labels.error;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this; // Merge objects of strings with their default object\n\n\n      this.labels = this.props.labels ? assign({}, defaultProps.labels, this.props.labels) : defaultProps.labels;\n\n      var assistiveText = _objectSpread(_objectSpread({}, defaultProps.assistiveText), this.props.assistiveText);\n\n      var children = React.Children.map(this.props.children, function (child) {\n        return /*#__PURE__*/React.cloneElement(child, {\n          name: _this2.getName(),\n          onChange: _this2.props.onChange,\n          'aria-describedby': _this2.getErrorId(),\n          disabled: _this2.props.disabled\n        });\n      });\n      return /*#__PURE__*/React.createElement(\"fieldset\", {\n        className: classNames('slds-form-element', {\n          'slds-has-error': this.labels.error\n        })\n      }, /*#__PURE__*/React.createElement(\"legend\", {\n        className: classNames('slds-form-element__legend', 'slds-form-element__label', assistiveText.label ? 'slds-assistive-text' : '')\n      }, this.props.required ? /*#__PURE__*/React.createElement(\"abbr\", {\n        className: \"slds-required\",\n        title: \"required\"\n      }, '*', /*#__PURE__*/React.createElement(\"div\", {\n        className: \"slds-assistive-text\"\n      }, assistiveText.required, ' ')) : null, assistiveText.label ? assistiveText.label : this.labels.label), /*#__PURE__*/React.createElement(\"div\", {\n        className: classNames('slds-form-element__control', this.props.className)\n      }, this.props.variant === 'button-group' ? /*#__PURE__*/React.createElement(\"div\", {\n        style: this.props.style,\n        className: \"slds-radio_button-group\"\n      }, children) : children, this.labels.error ? /*#__PURE__*/React.createElement(\"div\", {\n        id: this.getErrorId(),\n        className: \"slds-form-element__help\"\n      }, this.labels.error) : null));\n    }\n  }]);\n\n  return RadioGroup;\n}(React.Component);\n\nRadioGroup.displayName = RADIO_GROUP;\nRadioGroup.propTypes = propTypes;\nRadioGroup.defaultProps = defaultProps;\nexport default RadioGroup;","map":{"version":3,"sources":["../../../.tmp-es/components/radio-group/index.jsx"],"names":["propTypes","assistiveText","label","PropTypes","required","string","children","className","labels","error","onChange","disabled","name","errorId","variant","defaultProps","RadioGroup","React","Component","shortid","assign","classNames"],"mappings":"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","sourcesContent":["/* eslint-disable react/jsx-curly-brace-presence */\n/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\n// Implements the [Radio Group design pattern](https://lightningdesignsystem.com/components/radio-group/) in React.\n// Based on SLDS v2.5.0\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport shortid from 'shortid';\nimport assign from 'lodash.assign';\n\nimport { RADIO_GROUP } from '../../utilities/constants';\n\nconst propTypes = {\n\t/**\n\t * **Assistive text for accessibility**\n\t * * `label`: This label appears in the legend.\n\t * * `required`: Text to help identify the group as required\n\t */\n\tassistiveText: PropTypes.shape({\n\t\tlabel: PropTypes.string,\n\t\trequired: PropTypes.string,\n\t}),\n\t/**\n\t * Children are expected to be Radio components.\n\t */\n\tchildren: PropTypes.node.isRequired,\n\t/**\n\t * Custom CSS classes added to the node.\n\t */\n\tclassName: PropTypes.oneOfType([\n\t\tPropTypes.array,\n\t\tPropTypes.object,\n\t\tPropTypes.string,\n\t]),\n\t/**\n\t * **Text labels for internationalization**\n\t * This object is merged with the default props object on every render.\n\t * * `error`: Message to display when any of Checkboxes are in an error state.\n\t * * `label`: This label appears above the radio group.\n\t */\n\tlabels: PropTypes.shape({\n\t\terror: PropTypes.string,\n\t\tlabel: PropTypes.string,\n\t}),\n\t/**\n\t * This event fires when the radio selection changes.\n\t */\n\tonChange: PropTypes.func,\n\t/**\n\t * Disable all radio inputs.\n\t */\n\tdisabled: PropTypes.bool,\n\t/**\n\t * Adds an indicator that this field is required.\n\t */\n\trequired: PropTypes.bool,\n\t/**\n\t * The name of this radio group.\n\t */\n\tname: PropTypes.string,\n\t/**\n\t * The ID of the error message, for linking to radio inputs with aria-describedby.\n\t */\n\terrorId: PropTypes.string,\n\t/**\n\t * Variants of radio groups such as Radio Button Group\n\t */\n\tvariant: PropTypes.oneOf(['base', 'button-group']),\n};\n\nconst defaultProps = {\n\tassistiveText: { required: 'Required' },\n\tlabels: {},\n\tvariant: 'base',\n};\n\n/**\n * A styled select list that can have a single entry checked at any one time.\n * The RadioGroup component wraps [Radio](/components/radios) components, which should be used as children.\n */\nclass RadioGroup extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.generatedName = shortid.generate();\n\t\tthis.generatedErrorId = shortid.generate();\n\t}\n\n\tgetErrorId() {\n\t\tif (this.hasError()) {\n\t\t\treturn this.props.errorId || this.generatedErrorId;\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tgetName() {\n\t\treturn this.props.name || this.generatedName;\n\t}\n\n\thasError() {\n\t\treturn !!this.labels.error;\n\t}\n\n\trender() {\n\t\t// Merge objects of strings with their default object\n\t\tthis.labels = this.props.labels\n\t\t\t? assign({}, defaultProps.labels, this.props.labels)\n\t\t\t: defaultProps.labels;\n\n\t\tconst assistiveText = {\n\t\t\t...defaultProps.assistiveText,\n\t\t\t...this.props.assistiveText,\n\t\t};\n\t\tconst children = React.Children.map(this.props.children, (child) =>\n\t\t\tReact.cloneElement(child, {\n\t\t\t\tname: this.getName(),\n\t\t\t\tonChange: this.props.onChange,\n\t\t\t\t'aria-describedby': this.getErrorId(),\n\t\t\t\tdisabled: this.props.disabled,\n\t\t\t})\n\t\t);\n\n\t\treturn (\n\t\t\t<fieldset\n\t\t\t\tclassName={classNames('slds-form-element', {\n\t\t\t\t\t'slds-has-error': this.labels.error,\n\t\t\t\t})}\n\t\t\t>\n\t\t\t\t<legend\n\t\t\t\t\tclassName={classNames(\n\t\t\t\t\t\t'slds-form-element__legend',\n\t\t\t\t\t\t'slds-form-element__label',\n\t\t\t\t\t\tassistiveText.label ? 'slds-assistive-text' : ''\n\t\t\t\t\t)}\n\t\t\t\t>\n\t\t\t\t\t{this.props.required ? (\n\t\t\t\t\t\t<abbr className=\"slds-required\" title=\"required\">\n\t\t\t\t\t\t\t{'*'}\n\t\t\t\t\t\t\t<div className=\"slds-assistive-text\">\n\t\t\t\t\t\t\t\t{assistiveText.required}{' '}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</abbr>\n\t\t\t\t\t) : null}\n\t\t\t\t\t{assistiveText.label ? assistiveText.label : this.labels.label}\n\t\t\t\t</legend>\n\t\t\t\t<div\n\t\t\t\t\tclassName={classNames(\n\t\t\t\t\t\t'slds-form-element__control',\n\t\t\t\t\t\tthis.props.className\n\t\t\t\t\t)}\n\t\t\t\t>\n\t\t\t\t\t{this.props.variant === 'button-group' ? (\n\t\t\t\t\t\t<div style={this.props.style} className=\"slds-radio_button-group\">\n\t\t\t\t\t\t\t{children}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t) : (\n\t\t\t\t\t\tchildren\n\t\t\t\t\t)}\n\n\t\t\t\t\t{this.labels.error ? (\n\t\t\t\t\t\t<div id={this.getErrorId()} className=\"slds-form-element__help\">\n\t\t\t\t\t\t\t{this.labels.error}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t) : null}\n\t\t\t\t</div>\n\t\t\t</fieldset>\n\t\t);\n\t}\n}\n\nRadioGroup.displayName = RADIO_GROUP;\nRadioGroup.propTypes = propTypes;\nRadioGroup.defaultProps = defaultProps;\n\nexport default RadioGroup;\n"]},"metadata":{},"sourceType":"module"}