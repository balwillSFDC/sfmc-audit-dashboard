{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nvar propTypes = {\n  /**\n   * Assistive text for percentage\n   */\n  assistiveText: PropTypes.shape({\n    percentage: PropTypes.string\n  }),\n\n  /**\n   * Percentage of progress completion, with range of [0, 100]\n   */\n  value: PropTypes.string.isRequired\n};\n/**\n * ProgressBar renders the blue/gray progress bar and dynamically updates its completion percentage\n */\n\nvar ProgressBar = /*#__PURE__*/function (_React$Component) {\n  _inherits(ProgressBar, _React$Component);\n\n  var _super = _createSuper(ProgressBar);\n\n  function ProgressBar() {\n    _classCallCheck(this, ProgressBar);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(ProgressBar, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: classNames('slds-progress-bar slds-progress-bar_x-small', {\n          'slds-progress-bar_vertical': this.props.orientation === 'vertical'\n        }),\n        \"aria-valuemin\": \"0\",\n        \"aria-valuemax\": \"100\",\n        \"aria-valuenow\": this.props.value,\n        role: \"progressbar\"\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"slds-progress-bar__value\",\n        style: this.props.orientation === 'vertical' ? {\n          height: \"\".concat(this.props.value, \"%\")\n        } : {\n          width: \"\".concat(this.props.value, \"%\")\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"slds-assistive-text\"\n      }, this.props.assistiveText.percentage || \"Progress: \".concat(this.props.value, \"%\"))));\n    }\n  }]);\n\n  return ProgressBar;\n}(React.Component);\n\nProgressBar.displayName = 'ProgressBar';\nProgressBar.propTypes = propTypes;\nexport default ProgressBar;","map":{"version":3,"sources":["../../../../.tmp-es/components/progress-indicator/private/progress-bar.jsx"],"names":["propTypes","assistiveText","percentage","PropTypes","string","value","isRequired","ProgressBar","React","Component","classNames","height","width"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;;AAEA,OAAA,KAAA,MAAA,OAAA;AACA,OAAA,SAAA,MAAA,YAAA;AACA,OAAA,UAAA,MAAA,YAAA;AAEA,IAAMA,SAAS,GAAG;AACjB;AACD;AACA;AACCC,EAAAA,aAAa,EAAE,SAAS,CAAT,KAAA,CAAgB;AAC9BC,IAAAA,UAAU,EAAEC,SAAS,CAACC;AADQ,GAAhB,CAJE;;AAOjB;AACD;AACA;AACCC,EAAAA,KAAK,EAAEF,SAAS,CAATA,MAAAA,CAAiBG;AAVP,CAAlB;AAYA;AACA;AACA;;IACMC,W;;;;;;;;;;;;;6BACI;AACR,aAAA,aACC,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AACC,QAAA,SAAS,EAAEG,UAAU,CAAA,6CAAA,EAAgD;AACpE,wCAA8B,KAAA,KAAA,CAAA,WAAA,KAA2B;AADW,SAAhD,CADtB;AAIC,yBAJD,GAAA;AAKC,yBALD,KAAA;AAMC,yBAAe,KAAA,KAAA,CANhB,KAAA;AAOC,QAAA,IAAI,EAAC;AAPN,OAAA,EAAA,aASC,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AACC,QAAA,SAAS,EADV,0BAAA;AAEC,QAAA,KAAK,EACJ,KAAA,KAAA,CAAA,WAAA,KAAA,UAAA,GACG;AAAEC,UAAAA,MAAM,EAAA,GAAA,MAAA,CAAK,KAAA,KAAA,CAAL,KAAA,EAAA,GAAA;AAAR,SADH,GAEG;AAAEC,UAAAA,KAAK,EAAA,GAAA,MAAA,CAAK,KAAA,KAAA,CAAL,KAAA,EAAA,GAAA;AAAP;AALL,OAAA,EAAA,aAQC,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AAAM,QAAA,SAAS,EAAC;AAAhB,OAAA,EACE,KAAA,KAAA,CAAA,aAAA,CAAA,UAAA,IAAA,aAAA,MAAA,CACa,KAAA,KAAA,CADb,KAAA,EAnBL,GAmBK,CADF,CARD,CATD,CADD;AAyBA;;;;EA3BwBJ,KAAK,CAACC,S;;AA8BhCF,WAAW,CAAXA,WAAAA,GAAAA,aAAAA;AACAA,WAAW,CAAXA,SAAAA,GAAAA,SAAAA;AAEA,eAAA,WAAA","sourcesContent":["/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nconst propTypes = {\n\t/**\n\t * Assistive text for percentage\n\t */\n\tassistiveText: PropTypes.shape({\n\t\tpercentage: PropTypes.string,\n\t}),\n\t/**\n\t * Percentage of progress completion, with range of [0, 100]\n\t */\n\tvalue: PropTypes.string.isRequired,\n};\n/**\n * ProgressBar renders the blue/gray progress bar and dynamically updates its completion percentage\n */\nclass ProgressBar extends React.Component {\n\trender() {\n\t\treturn (\n\t\t\t<div\n\t\t\t\tclassName={classNames('slds-progress-bar slds-progress-bar_x-small', {\n\t\t\t\t\t'slds-progress-bar_vertical': this.props.orientation === 'vertical',\n\t\t\t\t})}\n\t\t\t\taria-valuemin=\"0\"\n\t\t\t\taria-valuemax=\"100\"\n\t\t\t\taria-valuenow={this.props.value}\n\t\t\t\trole=\"progressbar\"\n\t\t\t>\n\t\t\t\t<span\n\t\t\t\t\tclassName=\"slds-progress-bar__value\"\n\t\t\t\t\tstyle={\n\t\t\t\t\t\tthis.props.orientation === 'vertical'\n\t\t\t\t\t\t\t? { height: `${this.props.value}%` }\n\t\t\t\t\t\t\t: { width: `${this.props.value}%` }\n\t\t\t\t\t}\n\t\t\t\t>\n\t\t\t\t\t<span className=\"slds-assistive-text\">\n\t\t\t\t\t\t{this.props.assistiveText.percentage ||\n\t\t\t\t\t\t\t`Progress: ${this.props.value}%`}\n\t\t\t\t\t</span>\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nProgressBar.displayName = 'ProgressBar';\nProgressBar.propTypes = propTypes;\n\nexport default ProgressBar;\n"]},"metadata":{},"sourceType":"module"}