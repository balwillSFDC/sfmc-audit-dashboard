{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n// # Slider Component\n// Implements the [Slider design pattern](https://www.lightningdesignsystem.com/components/slider/) in React.\n// ### React\n\n\nimport React from 'react';\nimport PropTypes from 'prop-types'; // ### isFunction\n\nimport isFunction from 'lodash.isfunction'; // ### classNames\n\nimport classNames from 'classnames'; // ### shortid\n// [npmjs.com/package/shortid](https://www.npmjs.com/package/shortid)\n// shortid is a short, non-sequential, url-friendly, unique id generator\n\nimport shortid from 'shortid';\nimport { SLIDER } from '../../utilities/constants';\nimport getAriaProps from '../../utilities/get-aria-props';\nvar propTypes = {\n  /**\n   * The `aria-describedby` attribute is used to indicate the IDs of the elements that describe the object. It is used to establish a relationship between widgets or groups and text that described them. This is very similar to aria-labelledby: a label describes the essence of an object, while a description provides more information that the user might need.\n   */\n  'aria-describedby': PropTypes.string,\n\n  /**\n   * Assistive text for accessibility**\n   * `disabled`: Read by screen readers to indicate a disabled slider\n   * `label`: Visually hidden label but read out loud by screen readers.\n   */\n  assistiveText: PropTypes.shape({\n    disabled: PropTypes.string,\n    label: PropTypes.string\n  }),\n\n  /**\n   * Class names to be added to the outer container of the Slider.\n   */\n  classNameContainer: PropTypes.oneOfType([PropTypes.array, PropTypes.object, PropTypes.string]),\n\n  /**\n   * This is the initial value of an uncontrolled form element and is present\n   * only to provide compatibility with hybrid framework applications that\n   * are not entirely React. It should only be used in an application without\n   * centralized state (Redux, Flux). \"Controlled components\" with centralized\n   * state is highly recommended. See [Code Overview](https://github.com/salesforce/design-system-react/blob/master/docs/codebase-overview.md#controlled-and-uncontrolled-components) for more information.\n   */\n  defaultValue: PropTypes.number,\n\n  /**\n   * Disables the Slider and prevents clicking it. Only available on the horizontal view.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Message to display when the Slider is in an error state. When this is present, also visually highlights the component as in error.\n   */\n  errorText: PropTypes.string,\n\n  /**\n   * Set the HTML `id` of the slider.\n   */\n  id: PropTypes.string,\n\n  /**\n   * This label appears above the Slider.\n   */\n  label: PropTypes.string,\n\n  /**\n   * Maximum value of a specified range. Defaults to 100.\n   */\n  max: PropTypes.number,\n\n  /**\n   * Minimum value of a specified range. Defaults to 0.\n   */\n  min: PropTypes.number,\n\n  /**\n   * Name of the submitted form parameter.\n   */\n  name: PropTypes.string,\n\n  /**\n   * This event fires whenever the user has modified the data of the control. This callback recieves the following parameters `event, { value: [string] }`.\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * This event fires when the value is committed. This callback recieves the following parameters `event, { value: [string] }`.\n   */\n  onInput: PropTypes.func,\n\n  /**\n   * Size of the slider.\n   */\n  size: PropTypes.oneOf(['x-small', 'small', 'medium', 'large']),\n\n  /**\n   * By default, the granularity is 1 and the value is always an integer. For example, If you need a value between 5 and 10, accurate to two decimal places, you should set the value of step to 0.01\n   */\n  step: PropTypes.number,\n\n  /**\n   * The Slider should be a controlled component, and will always display this value. This should always be used if you are using a Flux/Redux framework.\n   */\n  value: PropTypes.number,\n\n  /**\n   * Modifier that makes the slider vertical\n   */\n  vertical: PropTypes.bool\n};\nvar defaultProps = {\n  assistiveText: {\n    disabled: 'Disabled'\n  },\n  min: 0,\n  max: 100,\n  step: 1\n};\n/**\n * The ability to style sliders with CSS varies across browsers. Using this component ensures sliders look the same everywhere.\n */\n\nvar Slider = /*#__PURE__*/function (_React$Component) {\n  _inherits(Slider, _React$Component);\n\n  var _super = _createSuper(Slider);\n\n  function Slider(props) {\n    var _this;\n\n    _classCallCheck(this, Slider);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"handleChange\", function (event) {\n      if (isFunction(_this.props.onChange)) {\n        _this.props.onChange(event, {\n          value: Number(event.target.value)\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleInput\", function (event) {\n      if (isFunction(_this.props.onInput)) {\n        _this.props.onInput(event, {\n          value: Number(event.target.value)\n        });\n      }\n    });\n\n    _this.generatedId = shortid.generate();\n\n    if (_this.props.errorText) {\n      _this.generatedErrorId = shortid.generate();\n    }\n\n    return _this;\n  }\n\n  _createClass(Slider, [{\n    key: \"getId\",\n    value: function getId() {\n      return this.props.id || this.generatedId;\n    }\n  }, {\n    key: \"getErrorId\",\n    value: function getErrorId() {\n      return this.props['aria-describedby'] || this.generatedErrorId;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var ariaProps = getAriaProps(this.props);\n      ariaProps['aria-describedby'] = this.getErrorId();\n\n      var assistiveText = _objectSpread(_objectSpread({}, defaultProps.assistiveText), this.props.assistiveText);\n\n      var labelText = this.props.label || this.props.assistiveText && this.props.assistiveText.label;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: classNames('slds-form-element', {\n          'slds-has-error': this.props.errorText\n        }, this.props.classNameContainer)\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        className: classNames('slds-form-element__label', {\n          'slds-assistive-text': this.props.assistiveText && !this.props.label\n        }),\n        htmlFor: this.getId()\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"slds-slider-label\"\n      }, labelText ? /*#__PURE__*/React.createElement(\"span\", {\n        className: \"slds-slider-label__label\"\n      }, labelText) : null, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"slds-slider-label__range\"\n      }, this.props.min, ' - ', this.props.max), this.props.disabled ? /*#__PURE__*/React.createElement(\"span\", {\n        className: \"slds-assistive-text\"\n      }, ' ', assistiveText.disabled) : null)), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"slds-form-element__control\"\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: classNames('slds-slider', {\n          'slds-slider_vertical': this.props.vertical,\n          'slds-size_x-small': this.props.size === 'x-small',\n          'slds-size_small': this.props.size === 'small',\n          'slds-size_medium': this.props.size === 'medium',\n          'slds-size_large': this.props.size === 'large'\n        })\n      }, /*#__PURE__*/React.createElement(\"input\", _extends({\n        type: \"range\",\n        id: this.getId(),\n        name: this.props.name,\n        className: \"slds-slider__range\",\n        min: this.props.min,\n        max: this.props.max,\n        step: this.props.step,\n        disabled: this.props.disabled,\n        onChange: this.handleChange,\n        onInput: this.handleInput\n      }, ariaProps, this.props.value !== undefined ? {\n        value: this.props.value\n      } : {\n        defaultValue: this.props.defaultValue\n      })), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"slds-slider__value\",\n        \"aria-hidden\": \"true\"\n      }, this.props.value || this.props.defaultValue || '0')), this.props.errorText ? /*#__PURE__*/React.createElement(\"div\", {\n        id: this.getErrorId(),\n        className: \"slds-form-element__help\"\n      }, this.props.errorText) : null));\n    }\n  }]);\n\n  return Slider;\n}(React.Component);\n\n_defineProperty(Slider, \"displayName\", SLIDER);\n\n_defineProperty(Slider, \"propTypes\", propTypes);\n\n_defineProperty(Slider, \"defaultProps\", defaultProps);\n\nexport default Slider;","map":{"version":3,"sources":["../../../.tmp-es/components/slider/index.jsx"],"names":["propTypes","PropTypes","assistiveText","disabled","label","string","classNameContainer","defaultValue","errorText","id","max","min","name","onChange","onInput","size","step","value","vertical","bool","defaultProps","Slider","React","Component","SLIDER","shortid","isFunction","Number","event","ariaProps","getAriaProps","labelText","classNames","handleInput"],"mappings":"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","sourcesContent":["/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\n// # Slider Component\n\n// Implements the [Slider design pattern](https://www.lightningdesignsystem.com/components/slider/) in React.\n\n// ### React\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\n// ### isFunction\nimport isFunction from 'lodash.isfunction';\n\n// ### classNames\nimport classNames from 'classnames';\n\n// ### shortid\n// [npmjs.com/package/shortid](https://www.npmjs.com/package/shortid)\n// shortid is a short, non-sequential, url-friendly, unique id generator\nimport shortid from 'shortid';\n\nimport { SLIDER } from '../../utilities/constants';\n\nimport getAriaProps from '../../utilities/get-aria-props';\n\nconst propTypes = {\n\t/**\n\t * The `aria-describedby` attribute is used to indicate the IDs of the elements that describe the object. It is used to establish a relationship between widgets or groups and text that described them. This is very similar to aria-labelledby: a label describes the essence of an object, while a description provides more information that the user might need.\n\t */\n\t'aria-describedby': PropTypes.string,\n\t/**\n\t * Assistive text for accessibility**\n\t * `disabled`: Read by screen readers to indicate a disabled slider\n\t * `label`: Visually hidden label but read out loud by screen readers.\n\t */\n\tassistiveText: PropTypes.shape({\n\t\tdisabled: PropTypes.string,\n\t\tlabel: PropTypes.string,\n\t}),\n\t/**\n\t * Class names to be added to the outer container of the Slider.\n\t */\n\tclassNameContainer: PropTypes.oneOfType([\n\t\tPropTypes.array,\n\t\tPropTypes.object,\n\t\tPropTypes.string,\n\t]),\n\t/**\n\t * This is the initial value of an uncontrolled form element and is present\n\t * only to provide compatibility with hybrid framework applications that\n\t * are not entirely React. It should only be used in an application without\n\t * centralized state (Redux, Flux). \"Controlled components\" with centralized\n\t * state is highly recommended. See [Code Overview](https://github.com/salesforce/design-system-react/blob/master/docs/codebase-overview.md#controlled-and-uncontrolled-components) for more information.\n\t */\n\tdefaultValue: PropTypes.number,\n\t/**\n\t * Disables the Slider and prevents clicking it. Only available on the horizontal view.\n\t */\n\tdisabled: PropTypes.bool,\n\t/**\n\t * Message to display when the Slider is in an error state. When this is present, also visually highlights the component as in error.\n\t */\n\terrorText: PropTypes.string,\n\t/**\n\t * Set the HTML `id` of the slider.\n\t */\n\tid: PropTypes.string,\n\t/**\n\t * This label appears above the Slider.\n\t */\n\tlabel: PropTypes.string,\n\t/**\n\t * Maximum value of a specified range. Defaults to 100.\n\t */\n\tmax: PropTypes.number,\n\t/**\n\t * Minimum value of a specified range. Defaults to 0.\n\t */\n\tmin: PropTypes.number,\n\t/**\n\t * Name of the submitted form parameter.\n\t */\n\tname: PropTypes.string,\n\t/**\n\t * This event fires whenever the user has modified the data of the control. This callback recieves the following parameters `event, { value: [string] }`.\n\t */\n\tonChange: PropTypes.func,\n\t/**\n\t * This event fires when the value is committed. This callback recieves the following parameters `event, { value: [string] }`.\n\t */\n\tonInput: PropTypes.func,\n\t/**\n\t * Size of the slider.\n\t */\n\tsize: PropTypes.oneOf(['x-small', 'small', 'medium', 'large']),\n\t/**\n\t * By default, the granularity is 1 and the value is always an integer. For example, If you need a value between 5 and 10, accurate to two decimal places, you should set the value of step to 0.01\n\t */\n\tstep: PropTypes.number,\n\t/**\n\t * The Slider should be a controlled component, and will always display this value. This should always be used if you are using a Flux/Redux framework.\n\t */\n\tvalue: PropTypes.number,\n\t/**\n\t * Modifier that makes the slider vertical\n\t */\n\tvertical: PropTypes.bool,\n};\n\nconst defaultProps = {\n\tassistiveText: { disabled: 'Disabled' },\n\tmin: 0,\n\tmax: 100,\n\tstep: 1,\n};\n\n/**\n * The ability to style sliders with CSS varies across browsers. Using this component ensures sliders look the same everywhere.\n */\nclass Slider extends React.Component {\n\tstatic displayName = SLIDER;\n\n\tstatic propTypes = propTypes;\n\n\tstatic defaultProps = defaultProps;\n\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.generatedId = shortid.generate();\n\n\t\tif (this.props.errorText) {\n\t\t\tthis.generatedErrorId = shortid.generate();\n\t\t}\n\t}\n\n\tgetId() {\n\t\treturn this.props.id || this.generatedId;\n\t}\n\n\tgetErrorId() {\n\t\treturn this.props['aria-describedby'] || this.generatedErrorId;\n\t}\n\n\thandleChange = (event) => {\n\t\tif (isFunction(this.props.onChange)) {\n\t\t\tthis.props.onChange(event, { value: Number(event.target.value) });\n\t\t}\n\t};\n\n\thandleInput = (event) => {\n\t\tif (isFunction(this.props.onInput)) {\n\t\t\tthis.props.onInput(event, { value: Number(event.target.value) });\n\t\t}\n\t};\n\n\trender() {\n\t\tconst ariaProps = getAriaProps(this.props);\n\t\tariaProps['aria-describedby'] = this.getErrorId();\n\n\t\tconst assistiveText = {\n\t\t\t...defaultProps.assistiveText,\n\t\t\t...this.props.assistiveText,\n\t\t};\n\t\tconst labelText =\n\t\t\tthis.props.label ||\n\t\t\t(this.props.assistiveText && this.props.assistiveText.label);\n\n\t\treturn (\n\t\t\t<div\n\t\t\t\tclassName={classNames(\n\t\t\t\t\t'slds-form-element',\n\t\t\t\t\t{\n\t\t\t\t\t\t'slds-has-error': this.props.errorText,\n\t\t\t\t\t},\n\t\t\t\t\tthis.props.classNameContainer\n\t\t\t\t)}\n\t\t\t>\n\t\t\t\t<label\n\t\t\t\t\tclassName={classNames('slds-form-element__label', {\n\t\t\t\t\t\t'slds-assistive-text':\n\t\t\t\t\t\t\tthis.props.assistiveText && !this.props.label,\n\t\t\t\t\t})}\n\t\t\t\t\thtmlFor={this.getId()}\n\t\t\t\t>\n\t\t\t\t\t<span className=\"slds-slider-label\">\n\t\t\t\t\t\t{labelText ? (\n\t\t\t\t\t\t\t<span className=\"slds-slider-label__label\">{labelText}</span>\n\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t<span className=\"slds-slider-label__range\">\n\t\t\t\t\t\t\t{this.props.min}\n\t\t\t\t\t\t\t{' - '}\n\t\t\t\t\t\t\t{this.props.max}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t{this.props.disabled ? (\n\t\t\t\t\t\t\t<span className=\"slds-assistive-text\">\n\t\t\t\t\t\t\t\t{' '}\n\t\t\t\t\t\t\t\t{assistiveText.disabled}\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t) : null}\n\t\t\t\t\t</span>\n\t\t\t\t</label>\n\t\t\t\t<div className=\"slds-form-element__control\">\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName={classNames('slds-slider', {\n\t\t\t\t\t\t\t'slds-slider_vertical': this.props.vertical,\n\t\t\t\t\t\t\t'slds-size_x-small': this.props.size === 'x-small',\n\t\t\t\t\t\t\t'slds-size_small': this.props.size === 'small',\n\t\t\t\t\t\t\t'slds-size_medium': this.props.size === 'medium',\n\t\t\t\t\t\t\t'slds-size_large': this.props.size === 'large',\n\t\t\t\t\t\t})}\n\t\t\t\t\t>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"range\"\n\t\t\t\t\t\t\tid={this.getId()}\n\t\t\t\t\t\t\tname={this.props.name}\n\t\t\t\t\t\t\tclassName=\"slds-slider__range\"\n\t\t\t\t\t\t\tmin={this.props.min}\n\t\t\t\t\t\t\tmax={this.props.max}\n\t\t\t\t\t\t\tstep={this.props.step}\n\t\t\t\t\t\t\tdisabled={this.props.disabled}\n\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t\tonInput={this.handleInput}\n\t\t\t\t\t\t\t{...ariaProps}\n\t\t\t\t\t\t\t/* A form element should not have both value and defaultValue props. */\n\t\t\t\t\t\t\t{...(this.props.value !== undefined\n\t\t\t\t\t\t\t\t? { value: this.props.value }\n\t\t\t\t\t\t\t\t: { defaultValue: this.props.defaultValue })}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<span className=\"slds-slider__value\" aria-hidden=\"true\">\n\t\t\t\t\t\t\t{this.props.value || this.props.defaultValue || '0'}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t{this.props.errorText ? (\n\t\t\t\t\t\t<div id={this.getErrorId()} className=\"slds-form-element__help\">\n\t\t\t\t\t\t\t{this.props.errorText}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t) : null}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Slider;\n"]},"metadata":{},"sourceType":"module"}