{"ast":null,"code":"/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport Controls from '../controls';\nimport Icon from '../../../icon';\nimport Info from '../info';\nimport MediaObject from '../../../media-object';\nimport Title from '../title';\nvar displayName = 'PageHeaderBase';\nvar propTypes = {\n  /**\n   * The page header icon\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The info property can be a string or a React element\n   */\n  info: PropTypes.node,\n\n  /**\n   * Nav content which appears in the upper right hand corner.\n   * prop 'navRight' will be deprecated soon, use 'onRenderControls' instead\n   */\n  onRenderControls: PropTypes.func,\n\n  /**\n   * The title property can be a string or a React element\n   */\n  title: PropTypes.node,\n\n  /**\n   * The type of component\n   */\n  variant: PropTypes.string\n};\n\nvar Base = function Base(props) {\n  var icon; // Backwards compatibility\n\n  if (props.iconName) {\n    icon = /*#__PURE__*/React.createElement(Icon, {\n      category: props.iconCategory,\n      className: \"slds-page-header__icon\",\n      name: props.iconName,\n      position: props.iconPosition,\n      size: props.iconSize,\n      variant: props.iconVariant\n    });\n  } else if (props.icon) {\n    var iconClasses = 'slds-page-header__icon';\n\n    if (props.icon.props) {\n      iconClasses = classnames(props.icon.props.className, iconClasses);\n    }\n\n    icon = /*#__PURE__*/React.cloneElement(props.icon, {\n      className: iconClasses\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"slds-page-header__row\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"slds-page-header__col-title\"\n  }, /*#__PURE__*/React.createElement(MediaObject, {\n    body: /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"slds-page-header__name\"\n    }, /*#__PURE__*/React.createElement(Title, {\n      content: props.title\n    })), /*#__PURE__*/React.createElement(Info, {\n      content: props.info,\n      variant: props.variant\n    })),\n    figure: icon\n  })), /*#__PURE__*/React.createElement(Controls, {\n    className: \"slds-align-middle\",\n    navRight: props.navRight,\n    onRenderControls: props.onRenderControls,\n    type: \"controls\"\n  }));\n};\n\nBase.displayName = displayName;\nBase.propTypes = propTypes;\nexport default Base;","map":{"version":3,"sources":["../../../../../.tmp-es/components/page-header/private/base/index.jsx"],"names":["displayName","propTypes","icon","PropTypes","info","onRenderControls","title","variant","string","Base","props","iconVariant","iconClasses","classnames","className"],"mappings":"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","sourcesContent":["/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nimport Controls from '../controls';\nimport Icon from '../../../icon';\nimport Info from '../info';\nimport MediaObject from '../../../media-object';\nimport Title from '../title';\n\nconst displayName = 'PageHeaderBase';\nconst propTypes = {\n\t/**\n\t * The page header icon\n\t */\n\ticon: PropTypes.node,\n\t/**\n\t * The info property can be a string or a React element\n\t */\n\tinfo: PropTypes.node,\n\t/**\n\t * Nav content which appears in the upper right hand corner.\n\t * prop 'navRight' will be deprecated soon, use 'onRenderControls' instead\n\t */\n\tonRenderControls: PropTypes.func,\n\t/**\n\t * The title property can be a string or a React element\n\t */\n\ttitle: PropTypes.node,\n\t/**\n\t * The type of component\n\t */\n\tvariant: PropTypes.string,\n};\n\nconst Base = (props) => {\n\tlet icon;\n\n\t// Backwards compatibility\n\tif (props.iconName) {\n\t\ticon = (\n\t\t\t<Icon\n\t\t\t\tcategory={props.iconCategory}\n\t\t\t\tclassName=\"slds-page-header__icon\"\n\t\t\t\tname={props.iconName}\n\t\t\t\tposition={props.iconPosition}\n\t\t\t\tsize={props.iconSize}\n\t\t\t\tvariant={props.iconVariant}\n\t\t\t/>\n\t\t);\n\t} else if (props.icon) {\n\t\tlet iconClasses = 'slds-page-header__icon';\n\n\t\tif (props.icon.props) {\n\t\t\ticonClasses = classnames(props.icon.props.className, iconClasses);\n\t\t}\n\n\t\ticon = React.cloneElement(props.icon, { className: iconClasses });\n\t}\n\n\treturn (\n\t\t<div className=\"slds-page-header__row\">\n\t\t\t<div className=\"slds-page-header__col-title\">\n\t\t\t\t<MediaObject\n\t\t\t\t\tbody={\n\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t<div className=\"slds-page-header__name\">\n\t\t\t\t\t\t\t\t<Title content={props.title} />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<Info content={props.info} variant={props.variant} />\n\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t}\n\t\t\t\t\tfigure={icon}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<Controls\n\t\t\t\tclassName=\"slds-align-middle\"\n\t\t\t\tnavRight={props.navRight}\n\t\t\t\tonRenderControls={props.onRenderControls}\n\t\t\t\ttype=\"controls\"\n\t\t\t/>\n\t\t</div>\n\t);\n};\nBase.displayName = displayName;\nBase.propTypes = propTypes;\n\nexport default Base;\n"]},"metadata":{},"sourceType":"module"}