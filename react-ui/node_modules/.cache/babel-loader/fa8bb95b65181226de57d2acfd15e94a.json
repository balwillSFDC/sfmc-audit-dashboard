{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\n\nimport { Component, Children } from 'react';\nimport PropTypes from 'prop-types';\nimport ReactDOM from 'react-dom';\n/*\n * This component mounts its children within a disconnected render tree (portal).\n */\n\nvar documentDefined = typeof document !== 'undefined';\n\nvar Portal = /*#__PURE__*/function (_Component) {\n  _inherits(Portal, _Component);\n\n  var _super = _createSuper(Portal);\n\n  function Portal(props) {\n    var _this;\n\n    _classCallCheck(this, Portal);\n\n    _this = _super.call(this, props);\n    _this.portalNode = null;\n    _this.state = {\n      isOpen: false\n    };\n    return _this;\n  }\n\n  _createClass(Portal, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.renderPortal();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this.renderPortal();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.unmountPortal();\n    }\n  }, {\n    key: \"getChildren\",\n    value: function getChildren() {\n      return Children.only(this.props.children);\n    }\n  }, {\n    key: \"getPortalParentNode\",\n    value: function getPortalParentNode() {\n      var element;\n\n      if (typeof this.props.renderTo === 'string') {\n        element = document.querySelector(this.props.renderTo);\n      } else {\n        element = this.props.renderTo || documentDefined && document.body;\n      }\n\n      return element;\n    }\n  }, {\n    key: \"setupPortalNode\",\n    value: function setupPortalNode() {\n      var parentParentNode = this.getPortalParentNode();\n      this.portalNode = {};\n\n      if (documentDefined) {\n        this.portalNode = document.createElement(this.props.renderTag);\n        this.portalNode.setAttribute('style', 'display: block; height: 0px; width: 0px;');\n        this.portalNode.setAttribute('className', 'design-system-react-portal');\n        parentParentNode.appendChild(this.portalNode);\n        this.portalNodeInstance = this.props.onMount ? this.props.onMount(undefined, {\n          portal: this.portalNode\n        }) : this.portalNode;\n      }\n    }\n  }, {\n    key: \"unmountPortal\",\n    value: function unmountPortal() {\n      if (this.portalNode) {\n        ReactDOM.unmountComponentAtNode(this.portalNode);\n        this.portalNode.parentNode.removeChild(this.portalNode);\n      }\n\n      this.portalNode = null;\n    }\n  }, {\n    key: \"updatePortal\",\n    value: function updatePortal() {\n      var _this2 = this;\n\n      if (this.props.id) {\n        this.portalNode.id = this.props.id;\n      }\n\n      if (this.props.className) {\n        this.portalNode.className = this.props.className;\n      }\n\n      if (this.props.style) {\n        Object.keys(this.props.style).forEach(function (key) {\n          _this2.portalNode.style[key] = _this2.props.style[key];\n        });\n      }\n\n      if (this.props.onUpdate) {\n        this.portalNodeInstance = this.props.onUpdate(this.portalNodeInstance);\n      }\n    }\n  }, {\n    key: \"renderPortal\",\n    value: function renderPortal() {\n      var _this3 = this; // if no portal contents, then unmount\n\n\n      if (!this.getChildren() || !documentDefined) {\n        this.unmountPortal();\n        return;\n      }\n\n      if (!this.portalNode) {\n        this.setupPortalNode();\n      }\n\n      if (this.props.portalMount) {\n        this.props.portalMount({\n          instance: this,\n          reactElement: this.getChildren(),\n          domContainerNode: this.portalNode,\n          updateCallback: function updateCallback() {\n            _this3.updatePortal(); // update after subtree renders\n\n          }\n        });\n      } else {\n        // actual render\n        ReactDOM.unstable_renderSubtreeIntoContainer(this, this.getChildren(), this.portalNode, function () {\n          _this3.updatePortal(); // update after subtree renders\n\n\n          if (_this3.state.isOpen === false) {\n            if (_this3.props.onOpen) {\n              _this3.props.onOpen(undefined, {\n                portal: _this3.getChildren()\n              });\n            }\n\n            _this3.setState({\n              isOpen: true\n            });\n          }\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return null;\n    }\n  }]);\n\n  return Portal;\n}(Component);\n\nPortal.displayName = 'Portal';\nPortal.propTypes = {\n  /*\n   * What tag to use for the portal, defaults to `div`.\n   */\n  renderTag: PropTypes.string,\n\n  /*\n   * What node the portal is rendered to, defaults to `document.body`.\n   */\n  renderTo: PropTypes.any,\n\n  /*\n   * React id prop.\n   */\n  id: PropTypes.string,\n\n  /*\n   * Accepts a _single_ element or component.\n   */\n  children: PropTypes.node,\n\n  /*\n   * ClassName added to .\n   */\n  className: PropTypes.any,\n\n  /*\n   * An object of styles that are applied to the portal.\n   */\n  style: PropTypes.object,\n\n  /*\n   * Triggers when Portal render tree mounts. Pass in an undefined event and `{ portal: [node] }``\n   */\n  onMount: PropTypes.func,\n\n  /*\n   * Triggers when the portal is mounted.\n   */\n  onOpen: PropTypes.func,\n\n  /*\n   * Triggers when Portal re-renders its tree.\n   */\n  onUpdate: PropTypes.func,\n\n  /**\n   * If a dialog is `positione=\"overflowBoundaryElement\"`, it will be rendered in a portal or separate render tree. This `portalMount` callback will be triggered instead of the the default `ReactDOM.unstable_renderSubtreeIntoContainer` and the function will mount the portal itself. Consider the following code that bypasses the internal mount and uses an Enzyme wrapper to mount the React root tree to the DOM.\n   *\n   * ```\n   * <Popover\n   *   isOpen\n   *   portalMount={({ instance, reactElement, domContainerNode }) => {\n   *     portalWrapper = Enzyme.mount(reactElement, { attachTo: domContainerNode });\n   *   }}\n   *   onOpen={() => {\n   *     expect(portalWrapper.find(`#my-heading`)).to.exist;\n   *     done();\n   *   }}\n   * />\n   * ```\n   */\n  portalMount: PropTypes.func\n};\nPortal.defaultProps = {\n  renderTag: 'span',\n  renderTo: null,\n  onMount: function onMount() {\n    return null;\n  },\n  onOpen: function onOpen() {\n    return null;\n  },\n  onUpdate: function onUpdate() {\n    return null;\n  },\n  onUnmount: function onUnmount() {\n    return null;\n  }\n};\nexport default Portal;","map":{"version":3,"sources":["../../../../.tmp-es/components/utilities/dialog/portal.jsx"],"names":["documentDefined","Portal","Component","isOpen","Children","element","document","parentParentNode","portal","portalNode","ReactDOM","Object","instance","reactElement","domContainerNode","updateCallback","renderTag","PropTypes","renderTo","id","children","className","style","onMount","onOpen","onUpdate","portalMount","func","onUnmount"],"mappings":"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","sourcesContent":["/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\nimport { Component, Children } from 'react';\nimport PropTypes from 'prop-types';\nimport ReactDOM from 'react-dom';\n\n/*\n * This component mounts its children within a disconnected render tree (portal).\n */\n\nconst documentDefined = typeof document !== 'undefined';\nclass Portal extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.portalNode = null;\n\t\tthis.state = {\n\t\t\tisOpen: false,\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.renderPortal();\n\t}\n\n\tcomponentDidUpdate() {\n\t\tthis.renderPortal();\n\t}\n\n\tcomponentWillUnmount() {\n\t\tthis.unmountPortal();\n\t}\n\n\tgetChildren() {\n\t\treturn Children.only(this.props.children);\n\t}\n\n\tgetPortalParentNode() {\n\t\tlet element;\n\t\tif (typeof this.props.renderTo === 'string') {\n\t\t\telement = document.querySelector(this.props.renderTo);\n\t\t} else {\n\t\t\telement = this.props.renderTo || (documentDefined && document.body);\n\t\t}\n\t\treturn element;\n\t}\n\n\tsetupPortalNode() {\n\t\tconst parentParentNode = this.getPortalParentNode();\n\t\tthis.portalNode = {};\n\n\t\tif (documentDefined) {\n\t\t\tthis.portalNode = document.createElement(this.props.renderTag);\n\t\t\tthis.portalNode.setAttribute(\n\t\t\t\t'style',\n\t\t\t\t'display: block; height: 0px; width: 0px;'\n\t\t\t);\n\t\t\tthis.portalNode.setAttribute('className', 'design-system-react-portal');\n\t\t\tparentParentNode.appendChild(this.portalNode);\n\t\t\tthis.portalNodeInstance = this.props.onMount\n\t\t\t\t? this.props.onMount(undefined, { portal: this.portalNode })\n\t\t\t\t: this.portalNode;\n\t\t}\n\t}\n\n\tunmountPortal() {\n\t\tif (this.portalNode) {\n\t\t\tReactDOM.unmountComponentAtNode(this.portalNode);\n\t\t\tthis.portalNode.parentNode.removeChild(this.portalNode);\n\t\t}\n\t\tthis.portalNode = null;\n\t}\n\n\tupdatePortal() {\n\t\tif (this.props.id) {\n\t\t\tthis.portalNode.id = this.props.id;\n\t\t}\n\n\t\tif (this.props.className) {\n\t\t\tthis.portalNode.className = this.props.className;\n\t\t}\n\n\t\tif (this.props.style) {\n\t\t\tObject.keys(this.props.style).forEach((key) => {\n\t\t\t\tthis.portalNode.style[key] = this.props.style[key];\n\t\t\t});\n\t\t}\n\n\t\tif (this.props.onUpdate) {\n\t\t\tthis.portalNodeInstance = this.props.onUpdate(this.portalNodeInstance);\n\t\t}\n\t}\n\n\trenderPortal() {\n\t\t// if no portal contents, then unmount\n\t\tif (!this.getChildren() || !documentDefined) {\n\t\t\tthis.unmountPortal();\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this.portalNode) {\n\t\t\tthis.setupPortalNode();\n\t\t}\n\n\t\tif (this.props.portalMount) {\n\t\t\tthis.props.portalMount({\n\t\t\t\tinstance: this,\n\t\t\t\treactElement: this.getChildren(),\n\t\t\t\tdomContainerNode: this.portalNode,\n\t\t\t\tupdateCallback: () => {\n\t\t\t\t\tthis.updatePortal(); // update after subtree renders\n\t\t\t\t},\n\t\t\t});\n\t\t} else {\n\t\t\t// actual render\n\t\t\tReactDOM.unstable_renderSubtreeIntoContainer(\n\t\t\t\tthis,\n\t\t\t\tthis.getChildren(),\n\t\t\t\tthis.portalNode,\n\t\t\t\t() => {\n\t\t\t\t\tthis.updatePortal(); // update after subtree renders\n\n\t\t\t\t\tif (this.state.isOpen === false) {\n\t\t\t\t\t\tif (this.props.onOpen) {\n\t\t\t\t\t\t\tthis.props.onOpen(undefined, { portal: this.getChildren() });\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.setState({ isOpen: true });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\t}\n\n\trender() {\n\t\treturn null;\n\t}\n}\n\nPortal.displayName = 'Portal';\n\nPortal.propTypes = {\n\t/*\n\t * What tag to use for the portal, defaults to `div`.\n\t */\n\trenderTag: PropTypes.string,\n\t/*\n\t * What node the portal is rendered to, defaults to `document.body`.\n\t */\n\trenderTo: PropTypes.any,\n\t/*\n\t * React id prop.\n\t */\n\tid: PropTypes.string,\n\t/*\n\t * Accepts a _single_ element or component.\n\t */\n\tchildren: PropTypes.node,\n\t/*\n\t * ClassName added to .\n\t */\n\tclassName: PropTypes.any,\n\t/*\n\t * An object of styles that are applied to the portal.\n\t */\n\tstyle: PropTypes.object,\n\t/*\n\t * Triggers when Portal render tree mounts. Pass in an undefined event and `{ portal: [node] }``\n\t */\n\tonMount: PropTypes.func,\n\t/*\n\t * Triggers when the portal is mounted.\n\t */\n\tonOpen: PropTypes.func,\n\t/*\n\t * Triggers when Portal re-renders its tree.\n\t */\n\tonUpdate: PropTypes.func,\n\t/**\n\t * If a dialog is `positione=\"overflowBoundaryElement\"`, it will be rendered in a portal or separate render tree. This `portalMount` callback will be triggered instead of the the default `ReactDOM.unstable_renderSubtreeIntoContainer` and the function will mount the portal itself. Consider the following code that bypasses the internal mount and uses an Enzyme wrapper to mount the React root tree to the DOM.\n\t *\n\t * ```\n\t * <Popover\n\t *   isOpen\n\t *   portalMount={({ instance, reactElement, domContainerNode }) => {\n\t *     portalWrapper = Enzyme.mount(reactElement, { attachTo: domContainerNode });\n\t *   }}\n\t *   onOpen={() => {\n\t *     expect(portalWrapper.find(`#my-heading`)).to.exist;\n\t *     done();\n\t *   }}\n\t * />\n\t * ```\n\t */\n\tportalMount: PropTypes.func,\n};\n\nPortal.defaultProps = {\n\trenderTag: 'span',\n\trenderTo: null,\n\tonMount: () => null,\n\tonOpen: () => null,\n\tonUpdate: () => null,\n\tonUnmount: () => null,\n};\n\nexport default Portal;\n"]},"metadata":{},"sourceType":"module"}