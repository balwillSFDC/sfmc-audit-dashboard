{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\n/* eslint-disable jsx-a11y/no-redundant-roles */\n// # Page Header Component\n// Implements the [Page Header design pattern](https://www.lightningdesignsystem.com/components/page-headers) in React.\n// Based on SLDS v2.2.1\n// ## Dependencies\n\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames'; // This component's `checkProps` which issues warnings to developers about properties when in development mode (similar to React's built in development tools)\n\nimport checkProps from './check-props';\nimport componentDoc from './component.json';\nimport Info from './private/info';\nimport Title from './private/title';\nimport DetailRow from './private/detail-row';\nimport DetailBlock from './private/detail-block';\nimport Base from './private/base';\nimport RecordHome from './private/record-home';\nimport ObjectHome from './private/object-home';\nimport RelatedList from './private/related-list'; // ## Constants\n\nimport { PAGE_HEADER } from '../../utilities/constants';\nvar displayName = PAGE_HEADER;\nvar propTypes = {\n  /**\n   * Optional class name\n   */\n  className: PropTypes.oneOfType([PropTypes.array, PropTypes.object, PropTypes.string]),\n\n  /**\n   * An array of detail blocks (used in `recordHome` variant)\n   */\n  details: PropTypes.array,\n\n  /**\n   * The label property can be a string or a React element\n   */\n  label: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n\n  /**\n   * The page header icon. Expects an Icon component\n   */\n  icon: PropTypes.element,\n\n  /**\n   * The info property can be a string or a React element. Can't be used with the `record-home` variant.\n   */\n  info: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n\n  /**\n   * Makes PageHeader joinable with DataTable by adding appropriate classes/styling\n   */\n  joined: PropTypes.bool,\n\n  /**\n   * Used with the `object-home` variant. Accepts a node, typically a Dropdown component\n   */\n  nameSwitcherDropdown: PropTypes.node,\n\n  /**\n   * Actions content to appear on the upper right side of the page header.\n   * Returned content must be either a SLDSPageHeaderControl component or an element/fragment with children that are all SLDSPageHeaderControl components.\n   * Prop 'contentRight' will be deprecated soon, use 'onRenderActions' instead.\n   */\n  onRenderActions: PropTypes.func,\n\n  /**\n   * Controls content to appear on the lower right side of the page header.\n   * Returned content must be either a SLDSPageHeaderControl component or an element/fragment with children that are all SLDSPageHeaderControl components.\n   * Prop 'navRight' will be deprecated soon, use 'onRenderControls' instead.\n   */\n  onRenderControls: PropTypes.func,\n\n  /**\n   * The title property can be a string or a React element\n   */\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n\n  /**\n   * An array of react elements presumably anchor <a> elements.\n   */\n  trail: PropTypes.array,\n\n  /**\n   * The type of component\n   * Note: Extra options are added to make the version backward compatible\n   */\n  variant: PropTypes.oneOf(['base', 'object-home', 'record-home', 'related-list'])\n};\nvar defaultProps = {\n  variant: 'base'\n};\n/**\n * The PageHeader component adds PageHeader, PageHeader.Info, PageHeader.Title, PageHeader.DetailRow, and PageHeader.DetailBlock.\n */\n\nvar PageHeader = /*#__PURE__*/function (_Component) {\n  _inherits(PageHeader, _Component);\n\n  var _super = _createSuper(PageHeader);\n\n  function PageHeader() {\n    _classCallCheck(this, PageHeader);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(PageHeader, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      checkProps(PAGE_HEADER, this.props, componentDoc);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          className = _this$props.className,\n          variant = _this$props.variant;\n      var classes = classnames('slds-page-header', {\n        'slds-page-header_record-home': variant === 'record-home' || variant === 'recordHome',\n        'slds-page-header_related-list': variant === 'related-list' || variant === 'relatedList',\n        'slds-page-header_joined': this.props.joined\n      }, className);\n      var Variant;\n\n      switch (variant) {\n        case 'object-home':\n        case 'objectHome':\n          // For backward compatibility\n          Variant = ObjectHome;\n          break;\n\n        case 'record-home':\n        case 'recordHome':\n          // For backward compatibility\n          Variant = RecordHome;\n          break;\n\n        case 'related-list':\n        case 'relatedList':\n          // For backward compatibility\n          Variant = RelatedList;\n          break;\n\n        default:\n          Variant = Base;\n      }\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: classes\n      }, /*#__PURE__*/React.createElement(Variant, this.props));\n    }\n  }]);\n\n  return PageHeader;\n}(Component);\n\nPageHeader.displayName = displayName;\nPageHeader.propTypes = propTypes;\nPageHeader.defaultProps = defaultProps;\nexport default PageHeader; // NOTE: these are private components and are prone to breaking changes.\n// Do not use these in your app! These exports are for legacy use only.\n\nexport { Info, Title, DetailRow, DetailBlock };","map":{"version":3,"sources":["../../../.tmp-es/components/page-header/index.jsx"],"names":["displayName","propTypes","className","PropTypes","details","label","icon","info","joined","nameSwitcherDropdown","onRenderActions","onRenderControls","title","trail","variant","defaultProps","PageHeader","Component","checkProps","classes","classnames","Variant"],"mappings":"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","sourcesContent":["/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\n/* eslint-disable jsx-a11y/no-redundant-roles */\n\n// # Page Header Component\n\n// Implements the [Page Header design pattern](https://www.lightningdesignsystem.com/components/page-headers) in React.\n// Based on SLDS v2.2.1\n\n// ## Dependencies\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\n// This component's `checkProps` which issues warnings to developers about properties when in development mode (similar to React's built in development tools)\nimport checkProps from './check-props';\nimport componentDoc from './component.json';\n\nimport Info from './private/info';\nimport Title from './private/title';\nimport DetailRow from './private/detail-row';\nimport DetailBlock from './private/detail-block';\nimport Base from './private/base';\nimport RecordHome from './private/record-home';\nimport ObjectHome from './private/object-home';\nimport RelatedList from './private/related-list';\n\n// ## Constants\nimport { PAGE_HEADER } from '../../utilities/constants';\n\nconst displayName = PAGE_HEADER;\nconst propTypes = {\n\t/**\n\t * Optional class name\n\t */\n\tclassName: PropTypes.oneOfType([\n\t\tPropTypes.array,\n\t\tPropTypes.object,\n\t\tPropTypes.string,\n\t]),\n\t/**\n\t * An array of detail blocks (used in `recordHome` variant)\n\t */\n\tdetails: PropTypes.array,\n\t/**\n\t * The label property can be a string or a React element\n\t */\n\tlabel: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n\t/**\n\t * The page header icon. Expects an Icon component\n\t */\n\ticon: PropTypes.element,\n\t/**\n\t * The info property can be a string or a React element. Can't be used with the `record-home` variant.\n\t */\n\tinfo: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n\t/**\n\t * Makes PageHeader joinable with DataTable by adding appropriate classes/styling\n\t */\n\tjoined: PropTypes.bool,\n\t/**\n\t * Used with the `object-home` variant. Accepts a node, typically a Dropdown component\n\t */\n\tnameSwitcherDropdown: PropTypes.node,\n\t/**\n\t * Actions content to appear on the upper right side of the page header.\n\t * Returned content must be either a SLDSPageHeaderControl component or an element/fragment with children that are all SLDSPageHeaderControl components.\n\t * Prop 'contentRight' will be deprecated soon, use 'onRenderActions' instead.\n\t */\n\tonRenderActions: PropTypes.func,\n\t/**\n\t * Controls content to appear on the lower right side of the page header.\n\t * Returned content must be either a SLDSPageHeaderControl component or an element/fragment with children that are all SLDSPageHeaderControl components.\n\t * Prop 'navRight' will be deprecated soon, use 'onRenderControls' instead.\n\t */\n\tonRenderControls: PropTypes.func,\n\t/**\n\t * The title property can be a string or a React element\n\t */\n\ttitle: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n\t/**\n\t * An array of react elements presumably anchor <a> elements.\n\t */\n\ttrail: PropTypes.array,\n\t/**\n\t * The type of component\n\t * Note: Extra options are added to make the version backward compatible\n\t */\n\tvariant: PropTypes.oneOf([\n\t\t'base',\n\t\t'object-home',\n\t\t'record-home',\n\t\t'related-list',\n\t]),\n};\n\nconst defaultProps = {\n\tvariant: 'base',\n};\n\n/**\n * The PageHeader component adds PageHeader, PageHeader.Info, PageHeader.Title, PageHeader.DetailRow, and PageHeader.DetailBlock.\n */\nclass PageHeader extends Component {\n\tcomponentDidMount() {\n\t\tcheckProps(PAGE_HEADER, this.props, componentDoc);\n\t}\n\n\trender() {\n\t\tconst { className, variant } = this.props;\n\t\tconst classes = classnames(\n\t\t\t'slds-page-header',\n\t\t\t{\n\t\t\t\t'slds-page-header_record-home':\n\t\t\t\t\tvariant === 'record-home' || variant === 'recordHome',\n\t\t\t\t'slds-page-header_related-list':\n\t\t\t\t\tvariant === 'related-list' || variant === 'relatedList',\n\t\t\t\t'slds-page-header_joined': this.props.joined,\n\t\t\t},\n\t\t\tclassName\n\t\t);\n\t\tlet Variant;\n\n\t\tswitch (variant) {\n\t\t\tcase 'object-home':\n\t\t\tcase 'objectHome': // For backward compatibility\n\t\t\t\tVariant = ObjectHome;\n\t\t\t\tbreak;\n\t\t\tcase 'record-home':\n\t\t\tcase 'recordHome': // For backward compatibility\n\t\t\t\tVariant = RecordHome;\n\t\t\t\tbreak;\n\t\t\tcase 'related-list':\n\t\t\tcase 'relatedList': // For backward compatibility\n\t\t\t\tVariant = RelatedList;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tVariant = Base;\n\t\t}\n\n\t\treturn (\n\t\t\t<div className={classes}>\n\t\t\t\t<Variant {...this.props} />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nPageHeader.displayName = displayName;\nPageHeader.propTypes = propTypes;\nPageHeader.defaultProps = defaultProps;\n\nexport default PageHeader;\n\n// NOTE: these are private components and are prone to breaking changes.\n// Do not use these in your app! These exports are for legacy use only.\nexport { Info, Title, DetailRow, DetailBlock };\n"]},"metadata":{},"sourceType":"module"}