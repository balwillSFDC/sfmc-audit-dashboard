{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n// Implements the [Button design pattern](https://lightningdesignsystem.com/components/buttons/) in React.\n// Based on SLDS v2.2.1\n\n\nimport React from 'react';\nimport requiredIf from 'react-required-if';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ButtonIcon from '../icon/button-icon';\nimport checkProps from './check-props';\nimport componentDoc from './component.json'; // eslint-disable-next-line import/no-cycle\n\nimport Tooltip from '../tooltip';\nimport getAriaProps from '../../utilities/get-aria-props';\nimport getDataProps from '../../utilities/get-data-props';\nimport getFormProps from '../../utilities/get-form-props';\nimport { BUTTON } from '../../utilities/constants';\nvar defaultProps = {\n  assistiveText: {\n    icon: ''\n  },\n  disabled: false,\n  hint: false,\n  iconSize: 'medium',\n  responsive: false,\n  type: 'button',\n  variant: 'neutral'\n};\n/**\n * The Button component is the Lightning Design System Button component. The Button should be used for label buttons, icon buttons, or buttons that have both labels and icons.\n * Either a <code>label</code> or <code>assistiveText.icon</code> is required; see the Prop Details table below. For buttons that maintain selected/unselected states, use the <a href=\"#/button-stateful\">ButtonStateful</a> component.\n * Although not listed in the prop table, all `aria-*`, `data-*` and `form*` props will be added to the `button` element if passed in.\n */\n\nvar Button = /*#__PURE__*/function (_React$Component) {\n  _inherits(Button, _React$Component);\n\n  var _super = _createSuper(Button);\n\n  function Button(props) {\n    var _this;\n\n    _classCallCheck(this, Button);\n\n    _this = _super.call(this, props); // `checkProps` issues warnings to developers about properties (similar to React's built in development tools)\n\n    _defineProperty(_assertThisInitialized(_this), \"getClassName\", function () {\n      var _classNames;\n\n      var isIcon = _this.props.variant === 'icon';\n      var iconVariant = _this.props.iconVariant;\n      var iconMore = iconVariant === 'more';\n      var iconBorder = iconVariant === 'border';\n      var iconGlobalHeader = iconVariant === 'global-header';\n      var showButtonVariant = _this.props.variant !== 'base' && !iconVariant && !_this.props.inverse && _this.props.variant !== 'link' || iconVariant === 'bare';\n      var plainInverseBtn = _this.props.inverse && !isIcon;\n      var plainInverseIcon = _this.props.inverse && isIcon && !iconMore && !iconBorder;\n      var moreInverseIcon = _this.props.inverse && iconMore;\n      var borderInverseIcon = _this.props.inverse && iconBorder; // After hijacking `iconVariant` to let `Button` know it's in the header, we reset to container style for the actual button CSS.\n\n      if (iconVariant === 'global-header') {\n        iconVariant = 'container';\n      }\n\n      return classNames((_classNames = {\n        'slds-button': _this.props.variant !== 'link'\n      }, _defineProperty(_classNames, \"slds-button_\".concat(_this.props.variant), showButtonVariant), _defineProperty(_classNames, 'slds-button_inverse', plainInverseBtn), _defineProperty(_classNames, 'slds-button_icon-inverse', plainInverseIcon || moreInverseIcon), _defineProperty(_classNames, 'slds-button_icon-border-inverse', borderInverseIcon), _defineProperty(_classNames, \"slds-button_icon-\".concat(iconVariant), iconVariant && !borderInverseIcon), _defineProperty(_classNames, 'slds-global-header__button_icon', iconGlobalHeader), _defineProperty(_classNames, \"slds-button_icon-\".concat(_this.props.iconSize), iconVariant && _this.props.iconSize !== 'medium'), _defineProperty(_classNames, 'slds-button_reset', _this.props.variant === 'link'), _defineProperty(_classNames, 'slds-text-link', _this.props.variant === 'link'), _classNames), _this.props.className);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleClick\", function (event) {\n      if (_this.props.onClick) {\n        _this.props.onClick(event, {});\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderIcon\", function (name) {\n      var iconSize = !_this.props.iconSize || _this.props.iconVariant ? null : _this.props.iconSize;\n      return /*#__PURE__*/React.createElement(ButtonIcon, {\n        category: _this.props.iconCategory || 'utility' // BREAKING CHANGE we will introduce in 1.0. For the moment, set default prop here if none specified.\n        ,\n        className: classNames({\n          'slds-global-header__icon': _this.props.iconVariant === 'global-header'\n        }, _this.props.iconClassName),\n        hint: _this.props.hint,\n        inverse: _this.props.inverse,\n        name: name,\n        path: _this.props.iconPath,\n        position: _this.props.iconPosition,\n        size: iconSize\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderLabel\", function () {\n      var iconOnly = _this.props.iconName || _this.props.iconPath;\n      var assistiveTextIcon = typeof _this.props.assistiveText === 'string' ? _this.props.assistiveText : _objectSpread(_objectSpread({}, defaultProps.assistiveText), _this.props.assistiveText).icon;\n      return iconOnly && assistiveTextIcon ? /*#__PURE__*/React.createElement(\"span\", {\n        className: \"slds-assistive-text\"\n      }, assistiveTextIcon) : _this.props.label;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderButton\", function () {\n      var ariaProps = getAriaProps(_this.props);\n      var dataProps = getDataProps(_this.props);\n      var formProps = getFormProps(_this.props);\n      return (\n        /*#__PURE__*/\n        // eslint-disable-next-line react/button-has-type\n        React.createElement(\"button\", _extends({\n          className: _this.getClassName(),\n          disabled: _this.props.disabled,\n          id: _this.props.id,\n          onBlur: _this.props.onBlur,\n          onClick: _this.handleClick,\n          onFocus: _this.props.onFocus,\n          onKeyDown: _this.props.onKeyDown,\n          onKeyPress: _this.props.onKeyPress,\n          onKeyUp: _this.props.onKeyUp,\n          onMouseDown: _this.props.onMouseDown,\n          onMouseEnter: _this.props.onMouseEnter,\n          onMouseLeave: _this.props.onMouseLeave,\n          onMouseUp: _this.props.onMouseUp,\n          ref: function ref(component) {\n            if (_this.props.buttonRef) {\n              _this.props.buttonRef(component);\n            }\n          },\n          tabIndex: _this.props.tabIndex,\n          title: _this.props.title // eslint-disable-next-line react/button-has-type\n          ,\n          type: _this.props.type || 'button',\n          style: _this.props.style\n        }, ariaProps, dataProps, formProps), _this.props.iconPosition === 'right' ? _this.renderLabel() : null, _this.props.iconName || _this.props.iconPath ? _this.renderIcon(_this.props.iconName) : null, _this.props.iconVariant === 'more' ? /*#__PURE__*/React.createElement(ButtonIcon, {\n          category: \"utility\",\n          name: \"down\",\n          size: \"x-small\",\n          className: _this.props.iconClassName\n        }) : null, _this.props.iconPosition === 'left' || !_this.props.iconPosition ? _this.renderLabel() : null, _this.props.children // eslint-disable-line react/prop-types\n        )\n      );\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderTooltip\", function () {\n      return /*#__PURE__*/React.createElement(Tooltip, {\n        content: _this.props.tooltip\n      }, _this.renderButton);\n    });\n\n    checkProps(BUTTON, props, componentDoc);\n    return _this;\n  }\n\n  _createClass(Button, [{\n    key: \"render\",\n    value: function render() {\n      return this.props.tooltip ? this.renderTooltip() : this.renderButton();\n    }\n  }]);\n\n  return Button;\n}(React.Component);\n\n_defineProperty(Button, \"displayName\", BUTTON);\n\n_defineProperty(Button, \"propTypes\", {\n  /**\n   * **Assistive text for accessibility.**\n   * This object is merged with the default props object on every render.\n   * * `icon`: Text that is visually hidden but read aloud by screenreaders to tell the user what the icon means. If the button has an icon and a visible label, you can omit the <code>assistiveText.icon</code> prop and use the <code>label</code> prop.\n   */\n  assistiveText: PropTypes.shape({\n    icon: PropTypes.string\n  }),\n\n  /**\n   * Callback that passes in the DOM reference of the `<button>` DOM node within this component. Primary use is to allow `focus` to be called. You should still test if the node exists, since rendering is asynchronous. `buttonRef={(component) => { if(component) console.log(component); }}`\n   */\n  buttonRef: PropTypes.func,\n\n  /**\n   * CSS classes to be added to button.\n   */\n  className: PropTypes.oneOfType([PropTypes.array, PropTypes.object, PropTypes.string]),\n\n  /**\n   * Disables the button and adds disabled styling.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Associates an icon button with another element on the page by changes the color of the SVG. Please reference <a href=\"http://www.lightningdesignsystem.com/components/buttons/#hint\">Lightning Design System Buttons > Hint</a>.\n   */\n  hint: PropTypes.bool,\n\n  /**\n   * Name of the icon category. Visit <a href=\"http://www.lightningdesignsystem.com/resources/icons\">Lightning Design System Icons</a> to reference icon categories.\n   */\n  iconCategory: requiredIf(PropTypes.oneOf(['action', 'custom', 'doctype', 'standard', 'utility']), function (props) {\n    return !!props.iconName;\n  }),\n\n  /**\n   * CSS classes to be added to icon.\n   */\n  iconClassName: PropTypes.oneOfType([PropTypes.array, PropTypes.object, PropTypes.string]),\n\n  /**\n   * Name of the icon. Visit <a href=\"http://www.lightningdesignsystem.com/resources/icons\">Lightning Design System Icons</a> to reference icon names.\n   */\n  iconName: PropTypes.string,\n\n  /**\n   * Path to the icon. This will override any global icon settings.\n   */\n  iconPath: PropTypes.string,\n\n  /**\n   * If omitted, icon position is centered.\n   */\n  iconPosition: PropTypes.oneOf(['left', 'right']),\n\n  /**\n   * Determines the size of the icon.\n   */\n  iconSize: PropTypes.oneOf(['x-small', 'small', 'medium', 'large']),\n\n  /**\n   * For icon variants, please reference <a href=\"http://www.lightningdesignsystem.com/components/buttons/#icon\">Lightning Design System Icons</a>.\n   */\n  iconVariant: PropTypes.oneOf(['bare', 'container', 'border', 'border-filled', 'brand', 'more', 'global-header']),\n\n  /**\n   * Id string applied to button node.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If true, button/icon is white. Meant for buttons or utility icons on dark backgrounds.\n   */\n  inverse: PropTypes.bool,\n\n  /**\n   * Visible label on the button. If the button is an icon button with no label, you must use the <code>assistiveText.icon</code> prop.\n   */\n  label: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n\n  /**\n   * Triggered when focus is removed.\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Triggered when the button is clicked.\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * Triggered when component is focused.\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * Triggered when a key is pressed down\n   */\n  onKeyDown: PropTypes.func,\n\n  /**\n   * Triggered when a key is pressed and released\n   */\n  onKeyPress: PropTypes.func,\n\n  /**\n   * Triggered when a key is released\n   */\n  onKeyUp: PropTypes.func,\n\n  /**\n   * Triggered when a mouse button is pressed down\n   */\n  onMouseDown: PropTypes.func,\n\n  /**\n   * Triggered when a mouse arrow hovers\n   */\n  onMouseEnter: PropTypes.func,\n\n  /**\n   * Triggered when a mouse arrow no longer hovers\n   */\n  onMouseLeave: PropTypes.func,\n\n  /**\n   * Triggered when a mouse button is released\n   */\n  onMouseUp: PropTypes.func,\n\n  /**\n   * If true, button scales to 100% width on small form factors.\n   */\n  responsive: PropTypes.bool,\n\n  /**\n   * Write <code>\"-1\"</code> if you don't want the user to tab to the button.\n   */\n  tabIndex: PropTypes.string,\n\n  /**\n   * Button type\n   */\n  type: PropTypes.oneOf(['reset', 'submit', 'button']),\n\n  /**\n   * HTML title attribute\n   */\n  title: PropTypes.string,\n\n  /**\n   * [Deprecated] Tooltip on button. Button should be a child of `Tooltip` instead.\n   */\n  tooltip: PropTypes.node,\n\n  /**\n   * Different types of buttons\n   */\n  variant: PropTypes.oneOf(['base', 'link', 'neutral', 'brand', 'outline-brand', 'destructive', 'success', 'text-destructive', 'icon']),\n\n  /**\n   * Custom styles to be passed to the component\n   */\n  style: PropTypes.object\n});\n\n_defineProperty(Button, \"defaultProps\", defaultProps);\n\nexport default Button;","map":{"version":3,"sources":["../../../.tmp-es/components/button/index.jsx"],"names":["defaultProps","assistiveText","icon","disabled","hint","iconSize","responsive","type","variant","Button","React","Component","BUTTON","PropTypes","string","buttonRef","className","iconCategory","requiredIf","props","iconClassName","iconName","iconPath","iconPosition","iconVariant","id","inverse","label","onBlur","onClick","onFocus","onKeyDown","onKeyPress","onKeyUp","onMouseDown","onMouseEnter","onMouseLeave","onMouseUp","tabIndex","title","tooltip","style","object","checkProps","isIcon","iconMore","iconBorder","iconGlobalHeader","showButtonVariant","plainInverseBtn","plainInverseIcon","moreInverseIcon","borderInverseIcon","classNames","iconOnly","assistiveTextIcon","ariaProps","getAriaProps","dataProps","getDataProps","formProps","getFormProps"],"mappings":"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","sourcesContent":["/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\n// Implements the [Button design pattern](https://lightningdesignsystem.com/components/buttons/) in React.\n// Based on SLDS v2.2.1\n\nimport React from 'react';\nimport requiredIf from 'react-required-if';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ButtonIcon from '../icon/button-icon';\nimport checkProps from './check-props';\nimport componentDoc from './component.json';\n// eslint-disable-next-line import/no-cycle\nimport Tooltip from '../tooltip';\n\nimport getAriaProps from '../../utilities/get-aria-props';\nimport getDataProps from '../../utilities/get-data-props';\nimport getFormProps from '../../utilities/get-form-props';\n\nimport { BUTTON } from '../../utilities/constants';\n\nconst defaultProps = {\n\tassistiveText: { icon: '' },\n\tdisabled: false,\n\thint: false,\n\ticonSize: 'medium',\n\tresponsive: false,\n\ttype: 'button',\n\tvariant: 'neutral',\n};\n\n/**\n * The Button component is the Lightning Design System Button component. The Button should be used for label buttons, icon buttons, or buttons that have both labels and icons.\n * Either a <code>label</code> or <code>assistiveText.icon</code> is required; see the Prop Details table below. For buttons that maintain selected/unselected states, use the <a href=\"#/button-stateful\">ButtonStateful</a> component.\n * Although not listed in the prop table, all `aria-*`, `data-*` and `form*` props will be added to the `button` element if passed in.\n */\nclass Button extends React.Component {\n\tstatic displayName = BUTTON;\n\n\tstatic propTypes = {\n\t\t/**\n\t\t * **Assistive text for accessibility.**\n\t\t * This object is merged with the default props object on every render.\n\t\t * * `icon`: Text that is visually hidden but read aloud by screenreaders to tell the user what the icon means. If the button has an icon and a visible label, you can omit the <code>assistiveText.icon</code> prop and use the <code>label</code> prop.\n\t\t */\n\t\tassistiveText: PropTypes.shape({\n\t\t\ticon: PropTypes.string,\n\t\t}),\n\n\t\t/**\n\t\t * Callback that passes in the DOM reference of the `<button>` DOM node within this component. Primary use is to allow `focus` to be called. You should still test if the node exists, since rendering is asynchronous. `buttonRef={(component) => { if(component) console.log(component); }}`\n\t\t */\n\t\tbuttonRef: PropTypes.func,\n\t\t/**\n\t\t * CSS classes to be added to button.\n\t\t */\n\t\tclassName: PropTypes.oneOfType([\n\t\t\tPropTypes.array,\n\t\t\tPropTypes.object,\n\t\t\tPropTypes.string,\n\t\t]),\n\t\t/**\n\t\t * Disables the button and adds disabled styling.\n\t\t */\n\t\tdisabled: PropTypes.bool,\n\t\t/**\n\t\t * Associates an icon button with another element on the page by changes the color of the SVG. Please reference <a href=\"http://www.lightningdesignsystem.com/components/buttons/#hint\">Lightning Design System Buttons > Hint</a>.\n\t\t */\n\t\thint: PropTypes.bool,\n\t\t/**\n\t\t * Name of the icon category. Visit <a href=\"http://www.lightningdesignsystem.com/resources/icons\">Lightning Design System Icons</a> to reference icon categories.\n\t\t */\n\t\ticonCategory: requiredIf(\n\t\t\tPropTypes.oneOf(['action', 'custom', 'doctype', 'standard', 'utility']),\n\t\t\t(props) => !!props.iconName\n\t\t),\n\t\t/**\n\t\t * CSS classes to be added to icon.\n\t\t */\n\t\ticonClassName: PropTypes.oneOfType([\n\t\t\tPropTypes.array,\n\t\t\tPropTypes.object,\n\t\t\tPropTypes.string,\n\t\t]),\n\t\t/**\n\t\t * Name of the icon. Visit <a href=\"http://www.lightningdesignsystem.com/resources/icons\">Lightning Design System Icons</a> to reference icon names.\n\t\t */\n\t\ticonName: PropTypes.string,\n\t\t/**\n\t\t * Path to the icon. This will override any global icon settings.\n\t\t */\n\t\ticonPath: PropTypes.string,\n\t\t/**\n\t\t * If omitted, icon position is centered.\n\t\t */\n\t\ticonPosition: PropTypes.oneOf(['left', 'right']),\n\t\t/**\n\t\t * Determines the size of the icon.\n\t\t */\n\t\ticonSize: PropTypes.oneOf(['x-small', 'small', 'medium', 'large']),\n\t\t/**\n\t\t * For icon variants, please reference <a href=\"http://www.lightningdesignsystem.com/components/buttons/#icon\">Lightning Design System Icons</a>.\n\t\t */\n\t\ticonVariant: PropTypes.oneOf([\n\t\t\t'bare',\n\t\t\t'container',\n\t\t\t'border',\n\t\t\t'border-filled',\n\t\t\t'brand',\n\t\t\t'more',\n\t\t\t'global-header',\n\t\t]),\n\t\t/**\n\t\t * Id string applied to button node.\n\t\t */\n\t\tid: PropTypes.string,\n\t\t/**\n\t\t * If true, button/icon is white. Meant for buttons or utility icons on dark backgrounds.\n\t\t */\n\t\tinverse: PropTypes.bool,\n\t\t/**\n\t\t * Visible label on the button. If the button is an icon button with no label, you must use the <code>assistiveText.icon</code> prop.\n\t\t */\n\t\tlabel: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n\t\t/**\n\t\t * Triggered when focus is removed.\n\t\t */\n\t\tonBlur: PropTypes.func,\n\t\t/**\n\t\t * Triggered when the button is clicked.\n\t\t */\n\t\tonClick: PropTypes.func,\n\t\t/**\n\t\t * Triggered when component is focused.\n\t\t */\n\t\tonFocus: PropTypes.func,\n\t\t/**\n\t\t * Triggered when a key is pressed down\n\t\t */\n\t\tonKeyDown: PropTypes.func,\n\t\t/**\n\t\t * Triggered when a key is pressed and released\n\t\t */\n\t\tonKeyPress: PropTypes.func,\n\t\t/**\n\t\t * Triggered when a key is released\n\t\t */\n\t\tonKeyUp: PropTypes.func,\n\t\t/**\n\t\t * Triggered when a mouse button is pressed down\n\t\t */\n\t\tonMouseDown: PropTypes.func,\n\t\t/**\n\t\t * Triggered when a mouse arrow hovers\n\t\t */\n\t\tonMouseEnter: PropTypes.func,\n\t\t/**\n\t\t * Triggered when a mouse arrow no longer hovers\n\t\t */\n\t\tonMouseLeave: PropTypes.func,\n\t\t/**\n\t\t * Triggered when a mouse button is released\n\t\t */\n\t\tonMouseUp: PropTypes.func,\n\t\t/**\n\t\t * If true, button scales to 100% width on small form factors.\n\t\t */\n\t\tresponsive: PropTypes.bool,\n\t\t/**\n\t\t * Write <code>\"-1\"</code> if you don't want the user to tab to the button.\n\t\t */\n\t\ttabIndex: PropTypes.string,\n\t\t/**\n\t\t * Button type\n\t\t */\n\t\ttype: PropTypes.oneOf(['reset', 'submit', 'button']),\n\t\t/**\n\t\t * HTML title attribute\n\t\t */\n\t\ttitle: PropTypes.string,\n\t\t/**\n\t\t * [Deprecated] Tooltip on button. Button should be a child of `Tooltip` instead.\n\t\t */\n\t\ttooltip: PropTypes.node,\n\t\t/**\n\t\t * Different types of buttons\n\t\t */\n\t\tvariant: PropTypes.oneOf([\n\t\t\t'base',\n\t\t\t'link',\n\t\t\t'neutral',\n\t\t\t'brand',\n\t\t\t'outline-brand',\n\t\t\t'destructive',\n\t\t\t'success',\n\t\t\t'text-destructive',\n\t\t\t'icon',\n\t\t]),\n\t\t/**\n\t\t * Custom styles to be passed to the component\n\t\t */\n\t\tstyle: PropTypes.object,\n\t};\n\n\tstatic defaultProps = defaultProps;\n\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\t// `checkProps` issues warnings to developers about properties (similar to React's built in development tools)\n\t\tcheckProps(BUTTON, props, componentDoc);\n\t}\n\n\tgetClassName = () => {\n\t\tconst isIcon = this.props.variant === 'icon';\n\n\t\tlet { iconVariant } = this.props;\n\t\tconst iconMore = iconVariant === 'more';\n\t\tconst iconBorder = iconVariant === 'border';\n\t\tconst iconGlobalHeader = iconVariant === 'global-header';\n\n\t\tconst showButtonVariant =\n\t\t\t(this.props.variant !== 'base' &&\n\t\t\t\t!iconVariant &&\n\t\t\t\t!this.props.inverse &&\n\t\t\t\tthis.props.variant !== 'link') ||\n\t\t\ticonVariant === 'bare';\n\t\tconst plainInverseBtn = this.props.inverse && !isIcon;\n\t\tconst plainInverseIcon =\n\t\t\tthis.props.inverse && isIcon && !iconMore && !iconBorder;\n\t\tconst moreInverseIcon = this.props.inverse && iconMore;\n\t\tconst borderInverseIcon = this.props.inverse && iconBorder;\n\n\t\t// After hijacking `iconVariant` to let `Button` know it's in the header, we reset to container style for the actual button CSS.\n\t\tif (iconVariant === 'global-header') {\n\t\t\ticonVariant = 'container';\n\t\t}\n\n\t\treturn classNames(\n\t\t\t{\n\t\t\t\t'slds-button': this.props.variant !== 'link',\n\t\t\t\t[`slds-button_${this.props.variant}`]: showButtonVariant,\n\t\t\t\t'slds-button_inverse': plainInverseBtn,\n\t\t\t\t'slds-button_icon-inverse': plainInverseIcon || moreInverseIcon,\n\t\t\t\t'slds-button_icon-border-inverse': borderInverseIcon,\n\t\t\t\t[`slds-button_icon-${iconVariant}`]: iconVariant && !borderInverseIcon,\n\t\t\t\t'slds-global-header__button_icon': iconGlobalHeader,\n\t\t\t\t// If icon has a container, then we apply the icon size to the container not the svg. Icon size is medium by default, so we don't need to explicitly render it here.\n\t\t\t\t[`slds-button_icon-${this.props.iconSize}`]:\n\t\t\t\t\ticonVariant && this.props.iconSize !== 'medium',\n\t\t\t\t'slds-button_reset': this.props.variant === 'link',\n\t\t\t\t'slds-text-link': this.props.variant === 'link',\n\t\t\t},\n\t\t\tthis.props.className\n\t\t);\n\t};\n\n\thandleClick = (event) => {\n\t\tif (this.props.onClick) {\n\t\t\tthis.props.onClick(event, {});\n\t\t}\n\t};\n\n\trenderIcon = (name) => {\n\t\tconst iconSize =\n\t\t\t!this.props.iconSize || this.props.iconVariant\n\t\t\t\t? null\n\t\t\t\t: this.props.iconSize;\n\t\treturn (\n\t\t\t<ButtonIcon\n\t\t\t\tcategory={this.props.iconCategory || 'utility'} // BREAKING CHANGE we will introduce in 1.0. For the moment, set default prop here if none specified.\n\t\t\t\tclassName={classNames(\n\t\t\t\t\t{\n\t\t\t\t\t\t'slds-global-header__icon':\n\t\t\t\t\t\t\tthis.props.iconVariant === 'global-header',\n\t\t\t\t\t},\n\t\t\t\t\tthis.props.iconClassName\n\t\t\t\t)}\n\t\t\t\thint={this.props.hint}\n\t\t\t\tinverse={this.props.inverse}\n\t\t\t\tname={name}\n\t\t\t\tpath={this.props.iconPath}\n\t\t\t\tposition={this.props.iconPosition}\n\t\t\t\tsize={iconSize}\n\t\t\t/>\n\t\t);\n\t};\n\n\trenderLabel = () => {\n\t\tconst iconOnly = this.props.iconName || this.props.iconPath;\n\t\tconst assistiveTextIcon =\n\t\t\ttypeof this.props.assistiveText === 'string'\n\t\t\t\t? this.props.assistiveText\n\t\t\t\t: {\n\t\t\t\t\t\t...defaultProps.assistiveText,\n\t\t\t\t\t\t...this.props.assistiveText,\n\t\t\t\t  }.icon;\n\n\t\treturn iconOnly && assistiveTextIcon ? (\n\t\t\t<span className=\"slds-assistive-text\">{assistiveTextIcon}</span>\n\t\t) : (\n\t\t\tthis.props.label\n\t\t);\n\t};\n\n\trenderButton = () => {\n\t\tconst ariaProps = getAriaProps(this.props);\n\t\tconst dataProps = getDataProps(this.props);\n\t\tconst formProps = getFormProps(this.props);\n\n\t\treturn (\n\t\t\t// eslint-disable-next-line react/button-has-type\n\t\t\t<button\n\t\t\t\tclassName={this.getClassName()}\n\t\t\t\tdisabled={this.props.disabled}\n\t\t\t\tid={this.props.id}\n\t\t\t\tonBlur={this.props.onBlur}\n\t\t\t\tonClick={this.handleClick}\n\t\t\t\tonFocus={this.props.onFocus}\n\t\t\t\tonKeyDown={this.props.onKeyDown}\n\t\t\t\tonKeyPress={this.props.onKeyPress}\n\t\t\t\tonKeyUp={this.props.onKeyUp}\n\t\t\t\tonMouseDown={this.props.onMouseDown}\n\t\t\t\tonMouseEnter={this.props.onMouseEnter}\n\t\t\t\tonMouseLeave={this.props.onMouseLeave}\n\t\t\t\tonMouseUp={this.props.onMouseUp}\n\t\t\t\tref={(component) => {\n\t\t\t\t\tif (this.props.buttonRef) {\n\t\t\t\t\t\tthis.props.buttonRef(component);\n\t\t\t\t\t}\n\t\t\t\t}}\n\t\t\t\ttabIndex={this.props.tabIndex}\n\t\t\t\ttitle={this.props.title}\n\t\t\t\t// eslint-disable-next-line react/button-has-type\n\t\t\t\ttype={this.props.type || 'button'}\n\t\t\t\tstyle={this.props.style}\n\t\t\t\t{...ariaProps}\n\t\t\t\t{...dataProps}\n\t\t\t\t{...formProps}\n\t\t\t>\n\t\t\t\t{this.props.iconPosition === 'right' ? this.renderLabel() : null}\n\n\t\t\t\t{this.props.iconName || this.props.iconPath\n\t\t\t\t\t? this.renderIcon(this.props.iconName)\n\t\t\t\t\t: null}\n\t\t\t\t{this.props.iconVariant === 'more' ? (\n\t\t\t\t\t<ButtonIcon\n\t\t\t\t\t\tcategory=\"utility\"\n\t\t\t\t\t\tname=\"down\"\n\t\t\t\t\t\tsize=\"x-small\"\n\t\t\t\t\t\tclassName={this.props.iconClassName}\n\t\t\t\t\t/>\n\t\t\t\t) : null}\n\n\t\t\t\t{this.props.iconPosition === 'left' || !this.props.iconPosition\n\t\t\t\t\t? this.renderLabel()\n\t\t\t\t\t: null}\n\t\t\t\t{\n\t\t\t\t\tthis.props.children // eslint-disable-line react/prop-types\n\t\t\t\t}\n\t\t\t</button>\n\t\t);\n\t};\n\n\t// This is present for backwards compatibility and should be removed at a future breaking change release. Please wrap a `Button` in a `PopoverTooltip` to achieve the same result. There will be an extra trigger `div` wrapping the `Button` though.\n\trenderTooltip = () => (\n\t\t<Tooltip content={this.props.tooltip}>{this.renderButton}</Tooltip>\n\t);\n\n\trender() {\n\t\treturn this.props.tooltip ? this.renderTooltip() : this.renderButton();\n\t}\n}\n\nexport default Button;\n"]},"metadata":{},"sourceType":"module"}