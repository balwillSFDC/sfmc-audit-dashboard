{"ast":null,"code":"function ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\n/* eslint-disable jsx-a11y/no-redundant-roles */\n// # Breadcrumbs\n// Implements the [Breadcrumbs design pattern](https://www.lightningdesignsystem.com/components/breadcrumbs) in React.\n// Based on SLDS v2.1.0-rc.2\n// ## Dependencies\n// ### React\n\n\nimport React from 'react';\nimport PropTypes from 'prop-types'; // This component's `checkProps` which issues warnings to developers about properties when in development mode (similar to React's built in development tools)\n\nimport checkProps from './check-props';\nimport componentDoc from './component.json'; // ## Constants\n\nimport { BREADCRUMB } from '../../utilities/constants';\nimport Dropdown from './../menu-dropdown';\nvar propTypes = {\n  /**\n   * **Assistive text for accessibility.**\n   * This object is merged with the default props object on every render.\n   * * `label`: The assistive text for the breadcrumb trail.\n   */\n  assistiveText: PropTypes.shape({\n    label: PropTypes.string\n  }),\n\n  /**\n   * A unique ID is needed in order to support keyboard navigation, ARIA support, and connect the dropdown to the triggering button.\n   */\n  id: PropTypes.string,\n\n  /**\n   * Overflow menu of the type [Dropdown](/components/menu-dropdowns)\n   */\n  overflowDropdownMenu: PropTypes.node,\n\n  /**\n   * Custom styles to be passed to the containing `nav` tag\n   */\n  styleContainer: PropTypes.object,\n\n  /**\n   * An array of anchor elements that define the path to the current record.\n   */\n  trail: PropTypes.array.isRequired\n};\nvar defaultProps = {\n  assistiveText: {\n    label: 'Breadcrumbs'\n  }\n};\n\nvar getBreadcrumbDropdown = function getBreadcrumbDropdown(overflowDropdownMenu, props) {\n  var overflowDropdownMenuProps = _objectSpread(_objectSpread({}, overflowDropdownMenu.props), {}, {\n    id: \"\".concat(props.id, \"-dropdown\"),\n    iconCategory: 'utility',\n    iconName: 'threedots',\n    iconVariant: 'bare',\n    threedots: true\n  });\n\n  return /*#__PURE__*/React.createElement(\"li\", {\n    className: \"slds-breadcrumb__item\"\n  }, /*#__PURE__*/React.createElement(Dropdown, overflowDropdownMenuProps));\n};\n/**\n * Use breadcrumbs to note the path of a record and help the user to navigate back to the parent.Breadcrumb based on SLDS 2.1.0-dev\n */\n\n\nvar Breadcrumb = function Breadcrumb(props) {\n  checkProps(BREADCRUMB, props, componentDoc);\n  var overflowDropdownMenu = props.overflowDropdownMenu,\n      trail = props.trail;\n  var assistiveText = typeof props.assistiveText === 'string' ? props.assistiveText : _objectSpread(_objectSpread({}, defaultProps.assistiveText), props.assistiveText).label;\n  return /*#__PURE__*/React.createElement(\"nav\", {\n    role: \"navigation\",\n    \"aria-label\": assistiveText,\n    style: props.styleContainer\n  }, /*#__PURE__*/React.createElement(\"ol\", {\n    className: \"slds-breadcrumb slds-list_horizontal\"\n  }, overflowDropdownMenu && getBreadcrumbDropdown(overflowDropdownMenu, props), trail.map(function (crumb, index) {\n    return (\n      /*#__PURE__*/\n\n      /* eslint-disable react/no-array-index-key */\n      React.createElement(\"li\", {\n        key: index // There isn't any better reasonable way to identity these\n        ,\n        className: \"slds-breadcrumb__item\"\n      }, crumb)\n    );\n  })));\n};\n\nBreadcrumb.displayName = BREADCRUMB;\nBreadcrumb.propTypes = propTypes;\nBreadcrumb.defaultProps = defaultProps;\nexport default Breadcrumb;","map":{"version":3,"sources":["../../../.tmp-es/components/breadcrumb/index.jsx"],"names":["propTypes","assistiveText","label","PropTypes","string","id","overflowDropdownMenu","styleContainer","trail","isRequired","defaultProps","getBreadcrumbDropdown","overflowDropdownMenuProps","props","iconCategory","iconName","iconVariant","threedots","Breadcrumb","checkProps"],"mappings":"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","sourcesContent":["/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\n/* eslint-disable jsx-a11y/no-redundant-roles */\n\n// # Breadcrumbs\n\n// Implements the [Breadcrumbs design pattern](https://www.lightningdesignsystem.com/components/breadcrumbs) in React.\n// Based on SLDS v2.1.0-rc.2\n\n// ## Dependencies\n\n// ### React\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\n// This component's `checkProps` which issues warnings to developers about properties when in development mode (similar to React's built in development tools)\nimport checkProps from './check-props';\nimport componentDoc from './component.json';\n\n// ## Constants\nimport { BREADCRUMB } from '../../utilities/constants';\nimport Dropdown from './../menu-dropdown';\n\nconst propTypes = {\n\t/**\n\t * **Assistive text for accessibility.**\n\t * This object is merged with the default props object on every render.\n\t * * `label`: The assistive text for the breadcrumb trail.\n\t */\n\tassistiveText: PropTypes.shape({\n\t\tlabel: PropTypes.string,\n\t}),\n\t/**\n\t * A unique ID is needed in order to support keyboard navigation, ARIA support, and connect the dropdown to the triggering button.\n\t */\n\tid: PropTypes.string,\n\t/**\n\t * Overflow menu of the type [Dropdown](/components/menu-dropdowns)\n\t */\n\toverflowDropdownMenu: PropTypes.node,\n\t/**\n\t * Custom styles to be passed to the containing `nav` tag\n\t */\n\tstyleContainer: PropTypes.object,\n\t/**\n\t * An array of anchor elements that define the path to the current record.\n\t */\n\ttrail: PropTypes.array.isRequired,\n};\n\nconst defaultProps = {\n\tassistiveText: {\n\t\tlabel: 'Breadcrumbs',\n\t},\n};\n\nconst getBreadcrumbDropdown = (overflowDropdownMenu, props) => {\n\tconst overflowDropdownMenuProps = {\n\t\t...overflowDropdownMenu.props,\n\t\tid: `${props.id}-dropdown`,\n\t\ticonCategory: 'utility',\n\t\ticonName: 'threedots',\n\t\ticonVariant: 'bare',\n\t\tthreedots: true,\n\t};\n\treturn (\n\t\t<li className=\"slds-breadcrumb__item\">\n\t\t\t<Dropdown {...overflowDropdownMenuProps} />\n\t\t</li>\n\t);\n};\n\n/**\n * Use breadcrumbs to note the path of a record and help the user to navigate back to the parent.Breadcrumb based on SLDS 2.1.0-dev\n */\nconst Breadcrumb = (props) => {\n\tcheckProps(BREADCRUMB, props, componentDoc);\n\n\tconst { overflowDropdownMenu, trail } = props;\n\tconst assistiveText =\n\t\ttypeof props.assistiveText === 'string'\n\t\t\t? props.assistiveText\n\t\t\t: {\n\t\t\t\t\t...defaultProps.assistiveText,\n\t\t\t\t\t...props.assistiveText,\n\t\t\t  }.label;\n\n\treturn (\n\t\t<nav\n\t\t\trole=\"navigation\"\n\t\t\taria-label={assistiveText}\n\t\t\tstyle={props.styleContainer}\n\t\t>\n\t\t\t<ol className=\"slds-breadcrumb slds-list_horizontal\">\n\t\t\t\t{overflowDropdownMenu &&\n\t\t\t\t\tgetBreadcrumbDropdown(overflowDropdownMenu, props)}\n\t\t\t\t{trail.map((crumb, index) => (\n\t\t\t\t\t/* eslint-disable react/no-array-index-key */\n\t\t\t\t\t<li\n\t\t\t\t\t\tkey={index} // There isn't any better reasonable way to identity these\n\t\t\t\t\t\tclassName=\"slds-breadcrumb__item\"\n\t\t\t\t\t>\n\t\t\t\t\t\t{crumb}\n\t\t\t\t\t</li>\n\t\t\t\t))}\n\t\t\t</ol>\n\t\t</nav>\n\t);\n};\n\nBreadcrumb.displayName = BREADCRUMB;\nBreadcrumb.propTypes = propTypes;\nBreadcrumb.defaultProps = defaultProps;\n\nexport default Breadcrumb;\n"]},"metadata":{},"sourceType":"module"}