{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames'; // ### shortid\n// [npmjs.com/package/shortid](https://www.npmjs.com/package/shortid)\n// shortid is a short, non-sequential, url-friendly, unique id generator\n\nimport shortid from 'shortid';\nimport assign from 'lodash.assign'; // This component's `checkProps` which issues warnings to developers about properties\n// when in development mode (similar to React's built in development tools)\n\nimport checkProps from './check-props';\nimport componentDoc from './component.json';\nimport Button from '../button';\nimport ProgressRing from '../progress-ring';\nimport { ICON, SETUP_ASSISTANT_STEP } from '../../utilities/constants';\nvar propTypes = {\n  /**\n   * **Assistive text for accessibility**\n   * This object is merged with the default props object on every render.\n   * * `expandStep`: Button that examples a step\n   * _Tested with snapshot testing._\n   */\n  assistiveText: PropTypes.shape({\n    expandStep: PropTypes.string\n  }),\n\n  /**\n   * CSS class names to be added to the container element. `array`, `object`, or `string` are accepted.\n   */\n  className: PropTypes.oneOfType([PropTypes.array, PropTypes.object, PropTypes.string]),\n\n  /**\n   * Detailed description of the step\n   */\n  description: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n\n  /**\n   * Estimated time for completing the step\n   */\n  estimatedTime: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n\n  /**\n   * Heading for the step\n   */\n  heading: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n\n  /**\n   * HTML id for component.\n   */\n  id: PropTypes.string,\n\n  /**\n   * Index of the step within the step array\n   */\n  index: PropTypes.number,\n\n  /**\n   * Dictates whether the step can be expanded / collapsed\n   */\n  isExpandable: PropTypes.bool,\n\n  /**\n   * If `isExpandable` is true, this prop can be used to control the expanded state. If not provided state will be used instead\n   */\n  isOpen: PropTypes.bool,\n\n  /**\n   * Function that is called to render a step's available action(s). Typically returns a Button, Button of variant \"link,\" or Checkbox of variant \"toggle\"\n   */\n  onRenderAction: PropTypes.func,\n\n  /**\n   * Function that is called to render step content. Typically returns a ProgressIndicator and/or ScopedNotification component\n   */\n  onRenderContent: PropTypes.func,\n\n  /**\n   * Function that is called to render content within the media figure. Expects to be returned an Icon or ProgressRing component\n   */\n  onRenderFigure: PropTypes.func,\n\n  /**\n   * Function to handle requests to expand / collapse the step\n   */\n  onToggleIsOpen: PropTypes.func,\n\n  /**\n   * Percentage of step completed. No progress indicator will be shown for the step unless this is provided\n   */\n  progress: PropTypes.number,\n\n  /**\n   * Display number for the step. Only appears if progress indicator is enabled. Determined automatically by parent if not provided.\n   */\n  stepNumber: PropTypes.number\n};\nvar defaultProps = {\n  assistiveText: {\n    expandStep: 'Expand Step'\n  }\n};\n/**\n * Setup Assistant Step component is used to specify individual items within the Setup Assistant\n * filled with learning and task links along with a recommended sequence that may have progress tracking\n */\n\nvar Step = /*#__PURE__*/function (_React$Component) {\n  _inherits(Step, _React$Component);\n\n  var _super = _createSuper(Step);\n\n  function Step(props) {\n    var _this;\n\n    _classCallCheck(this, Step);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"toggleIsOpen\", function (event) {\n      if (_this.props.onToggleIsOpen) {\n        _this.props.onToggleIsOpen(event, {\n          index: _this.props.index,\n          isOpen: _this.getIsOpen(),\n          step: _this.props\n        });\n      } else {\n        _this.setState({\n          isOpen: !_this.getIsOpen()\n        });\n      }\n    });\n\n    _this.generatedId = shortid.generate();\n    _this.state = {\n      isOpen: props.isOpen || false\n    };\n    checkProps(SETUP_ASSISTANT_STEP, _this.props, componentDoc);\n    return _this;\n  }\n\n  _createClass(Step, [{\n    key: \"getId\",\n    value: function getId() {\n      return this.props.id || this.generatedId;\n    }\n  }, {\n    key: \"getIsOpen\",\n    value: function getIsOpen() {\n      return this.props.isOpen !== undefined ? this.props.isOpen : this.state.isOpen;\n    }\n  }, {\n    key: \"renderMediaContent\",\n    value: function renderMediaContent() {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"slds-setup-assistant__step-summary-content slds-media__body\"\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        className: \"slds-setup-assistant__step-summary-title slds-text-heading_small\"\n      }, this.props.isExpandable ? /*#__PURE__*/React.createElement(Button, {\n        \"aria-controls\": \"\".concat(this.getId(), \"-detail-content\"),\n        className: \"slds-button_reset\",\n        label: this.props.heading,\n        onClick: this.toggleIsOpen,\n        variant: \"base\"\n      }) : this.props.heading), /*#__PURE__*/React.createElement(\"p\", null, this.props.description)), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"slds-media__figure slds-media__figure_reverse\"\n      }, this.props.onRenderAction ? this.props.onRenderAction() : null, this.props.estimatedTime ? /*#__PURE__*/React.createElement(\"p\", {\n        className: classNames('slds-text-align_right', 'slds-text-color_weak', {\n          'slds-p-top_medium': this.props.onRenderAction !== undefined\n        })\n      }, this.props.estimatedTime) : null));\n    }\n  }, {\n    key: \"renderSummary\",\n    value: function renderSummary() {\n      var figure;\n      var progressRingTheme;\n\n      if (this.props.progress > 0 && this.props.progress < 100) {\n        progressRingTheme = 'active';\n      } else if (this.props.progress === 100) {\n        progressRingTheme = 'complete';\n      }\n\n      if (this.props.onRenderFigure) {\n        figure = this.props.onRenderFigure();\n\n        if (figure && figure.type && figure.type.displayName === ICON) {\n          var containerStyle = {\n            position: 'relative',\n            top: this.props.isExpandable ? '5px' : '-3px'\n          };\n\n          if (figure.props.containerStyle) {\n            containerStyle = _objectSpread(_objectSpread({}, containerStyle), figure.props.containerStyle);\n          }\n\n          figure = /*#__PURE__*/React.cloneElement(figure, _objectSpread(_objectSpread({}, figure.props), {}, {\n            containerStyle: containerStyle,\n            size: 'small'\n          }));\n          figure = /*#__PURE__*/React.createElement(\"div\", {\n            className: \"slds-media__figure\"\n          }, figure);\n        }\n      } else if (this.props.progress !== undefined) {\n        figure = /*#__PURE__*/React.createElement(\"div\", {\n          className: \"slds-media__figure\"\n        }, /*#__PURE__*/React.createElement(ProgressRing, {\n          hasIcon: true,\n          icon: this.props.progress === 100 ? null : this.props.stepNumber,\n          flowDirection: \"fill\",\n          size: \"large\",\n          theme: progressRingTheme,\n          value: this.props.progress\n        }));\n      }\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"slds-setup-assistant__step-summary\"\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"slds-media\"\n      }, figure, this.props.isExpandable || this.props.progress !== undefined ? /*#__PURE__*/React.createElement(\"div\", {\n        className: \"slds-media__body slds-m-top_x-small\"\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"slds-media\"\n      }, this.renderMediaContent())) : this.renderMediaContent()));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var assistiveText = assign({}, defaultProps.assistiveText, this.props.assistiveText);\n      return /*#__PURE__*/React.createElement(\"li\", {\n        className: classNames('slds-setup-assistant__item', this.props.className),\n        id: this.getId()\n      }, /*#__PURE__*/React.createElement(\"article\", {\n        className: \"slds-setup-assistant__step\"\n      }, this.props.isExpandable ? /*#__PURE__*/React.createElement(\"div\", {\n        className: classNames('slds-summary-detail', {\n          'slds-is-open': this.getIsOpen()\n        })\n      }, /*#__PURE__*/React.createElement(Button, {\n        assistiveText: {\n          icon: assistiveText.expandStep\n        },\n        \"aria-controls\": \"\".concat(this.getId(), \"-detail-content\"),\n        className: \"slds-m-right_x-small slds-m-top_x-small\",\n        iconCategory: \"utility\",\n        iconClassName: \"slds-summary-detail__action-icon\",\n        iconName: \"switch\",\n        onClick: this.toggleIsOpen,\n        variant: \"icon\"\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"slds-container_fluid\"\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"slds-summary-detail__title\"\n      }, this.renderSummary()), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"slds-summary-detail__content\",\n        id: \"\".concat(this.getId(), \"-detail-content\")\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"slds-setup-assistant__step-detail\"\n      }, this.props.onRenderContent ? this.props.onRenderContent() : null)))) : this.renderSummary()));\n    }\n  }]);\n\n  return Step;\n}(React.Component);\n\nStep.displayName = SETUP_ASSISTANT_STEP;\nStep.propTypes = propTypes;\nStep.defaultProps = defaultProps;\nexport default Step;","map":{"version":3,"sources":["../../../.tmp-es/components/setup-assistant/step.jsx"],"names":["propTypes","assistiveText","expandStep","PropTypes","string","className","description","estimatedTime","heading","id","index","isExpandable","isOpen","onRenderAction","onRenderContent","onRenderFigure","onToggleIsOpen","progress","stepNumber","number","defaultProps","Step","React","Component","shortid","props","checkProps","step","classNames","undefined","progressRingTheme","figure","containerStyle","position","top","size","assign","icon"],"mappings":"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","sourcesContent":["/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\n// ### shortid\n// [npmjs.com/package/shortid](https://www.npmjs.com/package/shortid)\n// shortid is a short, non-sequential, url-friendly, unique id generator\nimport shortid from 'shortid';\nimport assign from 'lodash.assign';\n\n// This component's `checkProps` which issues warnings to developers about properties\n// when in development mode (similar to React's built in development tools)\nimport checkProps from './check-props';\nimport componentDoc from './component.json';\n\nimport Button from '../button';\nimport ProgressRing from '../progress-ring';\n\nimport { ICON, SETUP_ASSISTANT_STEP } from '../../utilities/constants';\n\nconst propTypes = {\n\t/**\n\t * **Assistive text for accessibility**\n\t * This object is merged with the default props object on every render.\n\t * * `expandStep`: Button that examples a step\n\t * _Tested with snapshot testing._\n\t */\n\tassistiveText: PropTypes.shape({\n\t\texpandStep: PropTypes.string,\n\t}),\n\t/**\n\t * CSS class names to be added to the container element. `array`, `object`, or `string` are accepted.\n\t */\n\tclassName: PropTypes.oneOfType([\n\t\tPropTypes.array,\n\t\tPropTypes.object,\n\t\tPropTypes.string,\n\t]),\n\t/**\n\t * Detailed description of the step\n\t */\n\tdescription: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n\t/**\n\t * Estimated time for completing the step\n\t */\n\testimatedTime: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n\t/**\n\t * Heading for the step\n\t */\n\theading: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n\t/**\n\t * HTML id for component.\n\t */\n\tid: PropTypes.string,\n\t/**\n\t * Index of the step within the step array\n\t */\n\tindex: PropTypes.number,\n\t/**\n\t * Dictates whether the step can be expanded / collapsed\n\t */\n\tisExpandable: PropTypes.bool,\n\t/**\n\t * If `isExpandable` is true, this prop can be used to control the expanded state. If not provided state will be used instead\n\t */\n\tisOpen: PropTypes.bool,\n\t/**\n\t * Function that is called to render a step's available action(s). Typically returns a Button, Button of variant \"link,\" or Checkbox of variant \"toggle\"\n\t */\n\tonRenderAction: PropTypes.func,\n\t/**\n\t * Function that is called to render step content. Typically returns a ProgressIndicator and/or ScopedNotification component\n\t */\n\tonRenderContent: PropTypes.func,\n\t/**\n\t * Function that is called to render content within the media figure. Expects to be returned an Icon or ProgressRing component\n\t */\n\tonRenderFigure: PropTypes.func,\n\t/**\n\t * Function to handle requests to expand / collapse the step\n\t */\n\tonToggleIsOpen: PropTypes.func,\n\t/**\n\t * Percentage of step completed. No progress indicator will be shown for the step unless this is provided\n\t */\n\tprogress: PropTypes.number,\n\t/**\n\t * Display number for the step. Only appears if progress indicator is enabled. Determined automatically by parent if not provided.\n\t */\n\tstepNumber: PropTypes.number,\n};\n\nconst defaultProps = {\n\tassistiveText: { expandStep: 'Expand Step' },\n};\n\n/**\n * Setup Assistant Step component is used to specify individual items within the Setup Assistant\n * filled with learning and task links along with a recommended sequence that may have progress tracking\n */\nclass Step extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.generatedId = shortid.generate();\n\t\tthis.state = {\n\t\t\tisOpen: props.isOpen || false,\n\t\t};\n\t\tcheckProps(SETUP_ASSISTANT_STEP, this.props, componentDoc);\n\t}\n\n\tgetId() {\n\t\treturn this.props.id || this.generatedId;\n\t}\n\n\tgetIsOpen() {\n\t\treturn this.props.isOpen !== undefined\n\t\t\t? this.props.isOpen\n\t\t\t: this.state.isOpen;\n\t}\n\n\ttoggleIsOpen = (event) => {\n\t\tif (this.props.onToggleIsOpen) {\n\t\t\tthis.props.onToggleIsOpen(event, {\n\t\t\t\tindex: this.props.index,\n\t\t\t\tisOpen: this.getIsOpen(),\n\t\t\t\tstep: this.props,\n\t\t\t});\n\t\t} else {\n\t\t\tthis.setState({ isOpen: !this.getIsOpen() });\n\t\t}\n\t};\n\n\trenderMediaContent() {\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<div className=\"slds-setup-assistant__step-summary-content slds-media__body\">\n\t\t\t\t\t<h3 className=\"slds-setup-assistant__step-summary-title slds-text-heading_small\">\n\t\t\t\t\t\t{this.props.isExpandable ? (\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\taria-controls={`${this.getId()}-detail-content`}\n\t\t\t\t\t\t\t\tclassName=\"slds-button_reset\"\n\t\t\t\t\t\t\t\tlabel={this.props.heading}\n\t\t\t\t\t\t\t\tonClick={this.toggleIsOpen}\n\t\t\t\t\t\t\t\tvariant=\"base\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\tthis.props.heading\n\t\t\t\t\t\t)}\n\t\t\t\t\t</h3>\n\t\t\t\t\t<p>{this.props.description}</p>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"slds-media__figure slds-media__figure_reverse\">\n\t\t\t\t\t{this.props.onRenderAction ? this.props.onRenderAction() : null}\n\t\t\t\t\t{this.props.estimatedTime ? (\n\t\t\t\t\t\t<p\n\t\t\t\t\t\t\tclassName={classNames(\n\t\t\t\t\t\t\t\t'slds-text-align_right',\n\t\t\t\t\t\t\t\t'slds-text-color_weak',\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t'slds-p-top_medium': this.props.onRenderAction !== undefined,\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{this.props.estimatedTime}\n\t\t\t\t\t\t</p>\n\t\t\t\t\t) : null}\n\t\t\t\t</div>\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n\n\trenderSummary() {\n\t\tlet figure;\n\t\tlet progressRingTheme;\n\n\t\tif (this.props.progress > 0 && this.props.progress < 100) {\n\t\t\tprogressRingTheme = 'active';\n\t\t} else if (this.props.progress === 100) {\n\t\t\tprogressRingTheme = 'complete';\n\t\t}\n\n\t\tif (this.props.onRenderFigure) {\n\t\t\tfigure = this.props.onRenderFigure();\n\n\t\t\tif (figure && figure.type && figure.type.displayName === ICON) {\n\t\t\t\tlet containerStyle = {\n\t\t\t\t\tposition: 'relative',\n\t\t\t\t\ttop: this.props.isExpandable ? '5px' : '-3px',\n\t\t\t\t};\n\n\t\t\t\tif (figure.props.containerStyle) {\n\t\t\t\t\tcontainerStyle = {\n\t\t\t\t\t\t...containerStyle,\n\t\t\t\t\t\t...figure.props.containerStyle,\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\tfigure = React.cloneElement(figure, {\n\t\t\t\t\t...figure.props,\n\t\t\t\t\tcontainerStyle,\n\t\t\t\t\tsize: 'small',\n\t\t\t\t});\n\t\t\t\tfigure = <div className=\"slds-media__figure\">{figure}</div>;\n\t\t\t}\n\t\t} else if (this.props.progress !== undefined) {\n\t\t\tfigure = (\n\t\t\t\t<div className=\"slds-media__figure\">\n\t\t\t\t\t<ProgressRing\n\t\t\t\t\t\thasIcon\n\t\t\t\t\t\ticon={this.props.progress === 100 ? null : this.props.stepNumber}\n\t\t\t\t\t\tflowDirection=\"fill\"\n\t\t\t\t\t\tsize=\"large\"\n\t\t\t\t\t\ttheme={progressRingTheme}\n\t\t\t\t\t\tvalue={this.props.progress}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\n\t\treturn (\n\t\t\t<div className=\"slds-setup-assistant__step-summary\">\n\t\t\t\t<div className=\"slds-media\">\n\t\t\t\t\t{figure}\n\t\t\t\t\t{this.props.isExpandable || this.props.progress !== undefined ? (\n\t\t\t\t\t\t<div className=\"slds-media__body slds-m-top_x-small\">\n\t\t\t\t\t\t\t<div className=\"slds-media\">{this.renderMediaContent()}</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t) : (\n\t\t\t\t\t\tthis.renderMediaContent()\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n\n\trender() {\n\t\tconst assistiveText = assign(\n\t\t\t{},\n\t\t\tdefaultProps.assistiveText,\n\t\t\tthis.props.assistiveText\n\t\t);\n\t\treturn (\n\t\t\t<li\n\t\t\t\tclassName={classNames(\n\t\t\t\t\t'slds-setup-assistant__item',\n\t\t\t\t\tthis.props.className\n\t\t\t\t)}\n\t\t\t\tid={this.getId()}\n\t\t\t>\n\t\t\t\t<article className=\"slds-setup-assistant__step\">\n\t\t\t\t\t{this.props.isExpandable ? (\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tclassName={classNames('slds-summary-detail', {\n\t\t\t\t\t\t\t\t'slds-is-open': this.getIsOpen(),\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tassistiveText={{ icon: assistiveText.expandStep }}\n\t\t\t\t\t\t\t\taria-controls={`${this.getId()}-detail-content`}\n\t\t\t\t\t\t\t\tclassName=\"slds-m-right_x-small slds-m-top_x-small\"\n\t\t\t\t\t\t\t\ticonCategory=\"utility\"\n\t\t\t\t\t\t\t\ticonClassName=\"slds-summary-detail__action-icon\"\n\t\t\t\t\t\t\t\ticonName=\"switch\"\n\t\t\t\t\t\t\t\tonClick={this.toggleIsOpen}\n\t\t\t\t\t\t\t\tvariant=\"icon\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<div className=\"slds-container_fluid\">\n\t\t\t\t\t\t\t\t<div className=\"slds-summary-detail__title\">\n\t\t\t\t\t\t\t\t\t{this.renderSummary()}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\tclassName=\"slds-summary-detail__content\"\n\t\t\t\t\t\t\t\t\tid={`${this.getId()}-detail-content`}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<div className=\"slds-setup-assistant__step-detail\">\n\t\t\t\t\t\t\t\t\t\t{this.props.onRenderContent\n\t\t\t\t\t\t\t\t\t\t\t? this.props.onRenderContent()\n\t\t\t\t\t\t\t\t\t\t\t: null}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t) : (\n\t\t\t\t\t\tthis.renderSummary()\n\t\t\t\t\t)}\n\t\t\t\t</article>\n\t\t\t</li>\n\t\t);\n\t}\n}\n\nStep.displayName = SETUP_ASSISTANT_STEP;\nStep.propTypes = propTypes;\nStep.defaultProps = defaultProps;\n\nexport default Step;\n"]},"metadata":{},"sourceType":"module"}