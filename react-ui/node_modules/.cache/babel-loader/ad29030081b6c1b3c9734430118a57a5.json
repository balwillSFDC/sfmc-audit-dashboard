{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n// # Pill Component\n// Implements the [Pill design pattern](https://lightningdesignsystem.com/components/pills/) in React.\n\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { PILL } from '../../utilities/constants';\nimport UtilityIcon from '../utilities/utility-icon';\nimport KEYS from '../../utilities/key-code';\nimport EventUtil from '../../utilities/event';\nvar propTypes = {\n  /**\n   * **Assistive text for accessibility**\n   * This object is merged with the default props object on every render.\n   * * `remove`: This is a visually hidden label for the close button.\n   * _Tested with snapshot testing._\n   */\n  assistiveText: PropTypes.shape({\n    remove: PropTypes.string\n  }),\n\n  /**\n   * SLDSAvatar component to show on the left of the pill.\n   * _Tested with Mocha framework._\n   */\n  avatar: PropTypes.element,\n\n  /**\n   * Applies the bare style to the component.\n   * _Tested with Mocha framework._\n   */\n  bare: PropTypes.bool,\n\n  /**\n   * This is a way to specify custom contents for the pill in the case a simple text label is not enough.\n   * _Tested with Mocha framework._\n   */\n  children: PropTypes.node,\n\n  /**\n   * CSS classes to be added to tag with `.slds-pill`. Uses `classNames` [API](https://github.com/JedWatson/classnames).\n   * _Tested with Mocha framework._\n   */\n  className: PropTypes.oneOfType([PropTypes.array, PropTypes.object, PropTypes.string]),\n\n  /**\n   * Applies the error style to the component.\n   * _Tested with Mocha framework._\n   */\n  hasError: PropTypes.bool,\n\n  /**\n   * An href to use if the pill is shown as a link.\n   * _Tested with Mocha framework._\n   */\n  href: PropTypes.string,\n\n  /**\n   * SLDSIcon component to show on the left of the pill.\n   * _Tested with Mocha framework._\n   */\n  icon: PropTypes.element,\n\n  /**\n   * **Text labels for internationalization**\n   * This object is merged with the default props object on every render.\n   * * `label`: Pill's label.\n   * * `title`: Pill's title.\n   * * `removeTitle`: A title to use for the remove icon.\n   *\n   * _Tested with snapshot testing._\n   */\n  labels: PropTypes.shape({\n    label: PropTypes.string,\n    title: PropTypes.string,\n    removeTitle: PropTypes.string\n  }),\n\n  /**\n   * `onBlur` callback executes when the component loses focus.\n   * _Tested with Mocha framework._\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * `onClick` callback executes when a user clicks on the pill or presses the Enter key.\n   * _Tested with Mocha framework._\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * `onFocus` callback executes when the component receives focus.\n   * _Tested with Mocha framework._\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * `onKeyDown` callback executes when a user presses a key.\n   * _Tested with Mocha framework._\n   */\n  onKeyDown: PropTypes.func,\n\n  /**\n   * `onRemove` callback executes when a user clicks on the pill's remove icon or presses the delete or the backspace keys.\n   * _Tested with Mocha framework._\n   */\n  onRemove: PropTypes.func,\n\n  /**\n   * A variant of a pill\n   * _Tested with Mocha framework._\n   */\n  variant: PropTypes.oneOf(['link', 'option'])\n};\n/**\n * A pill displays a label that can contain links and can be removed from view. Use `PillContainer` for a list of pills in a container that resembles an `input` form field. A pill is useful for displaying read-only text that can be added and removed on demand.\n */\n\nvar Pill = /*#__PURE__*/function (_React$Component) {\n  _inherits(Pill, _React$Component);\n\n  var _super = _createSuper(Pill);\n\n  function Pill() {\n    var _this;\n\n    _classCallCheck(this, Pill);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"getHref\", function () {\n      return typeof _this.props.href === 'string' ? _this.props.href : '#';\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"blur\", function () {\n      _this.root.blur();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"focus\", function () {\n      _this.root.focus();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleKeyDown\", function (event) {\n      if (typeof _this.props.onKeyDown === 'function') {\n        var _this$props$onKeyDown;\n\n        for (var _len2 = arguments.length, rest = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n          rest[_key2 - 1] = arguments[_key2];\n        } // Make a callback to onKeyDown.\n\n\n        (_this$props$onKeyDown = _this.props.onKeyDown).call.apply(_this$props$onKeyDown, [null, event].concat(rest)); // Cancel further handling if the default handling for the event was prevented.\n\n\n        if (event.defaultPrevented) {\n          return;\n        }\n      }\n\n      switch (event.keyCode) {\n        case KEYS.ENTER:\n          if (typeof _this.props.onClick === 'function') {\n            EventUtil.trap(event);\n\n            _this.props.onClick();\n          }\n\n          break;\n\n        case KEYS.BACKSPACE:\n        case KEYS.DELETE:\n          if (typeof _this.props.onRemove === 'function') {\n            EventUtil.trap(event);\n\n            _this.props.onRemove();\n          }\n\n          break;\n\n        default:\n          break;\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleRef\", function (root) {\n      // Keeping the top-most element to support focus() and blur()\n      _this.root = root;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleOnClick\", function (event) {\n      if (_this.getHref() === '#') {\n        event.preventDefault();\n      }\n\n      if (_this.props.onClick) {\n        _this.props.onClick(event);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"restProps\", function () {\n      var _this$props = _this.props,\n          bare = _this$props.bare,\n          hasError = _this$props.hasError,\n          variant = _this$props.variant,\n          className = _this$props.className,\n          onClick = _this$props.onClick,\n          onRemove = _this$props.onRemove,\n          labels = _this$props.labels,\n          assistiveText = _this$props.assistiveText,\n          children = _this$props.children,\n          href = _this$props.href,\n          icon = _this$props.icon,\n          avatar = _this$props.avatar,\n          onKeyDown = _this$props.onKeyDown,\n          other = _objectWithoutProperties(_this$props, [\"bare\", \"hasError\", \"variant\", \"className\", \"onClick\", \"onRemove\", \"labels\", \"assistiveText\", \"children\", \"href\", \"icon\", \"avatar\", \"onKeyDown\"]);\n\n      return other;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderIcon\", function () {\n      var icon = _this.props.icon || _this.props.avatar;\n\n      if (icon) {\n        return /*#__PURE__*/React.createElement(\"span\", {\n          className: \"slds-pill__icon_container\"\n        }, icon);\n      }\n\n      return null;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderLabel\", function () {\n      if (_this.props.labels.label) {\n        if (_this.props.variant === 'link') {\n          return /*#__PURE__*/React.createElement(\"a\", {\n            href: _this.getHref(),\n            className: \"slds-pill__action\",\n            title: _this.props.labels.title || _this.props.labels.label,\n            onClick: _this.handleOnClick\n          }, /*#__PURE__*/React.createElement(\"span\", {\n            className: \"slds-pill__label\"\n          }, _this.props.labels.label));\n        }\n\n        return /*#__PURE__*/React.createElement(\"span\", {\n          className: \"slds-pill__label\",\n          title: _this.props.labels.title || _this.props.labels.label\n        }, _this.props.labels.label);\n      }\n\n      return _this.props.children;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderRemoveIcon\", function () {\n      if (typeof _this.props.onRemove === 'function') {\n        return /*#__PURE__*/React.createElement(\"span\", {\n          // eslint-disable-line jsx-a11y/interactive-supports-focus\n          className: \"slds-icon_container slds-pill__remove\",\n          title: _this.props.labels.removeTitle,\n          role: \"button\",\n          onClick: _this.props.onRemove\n        }, /*#__PURE__*/React.createElement(UtilityIcon, {\n          style: {\n            cursor: 'pointer'\n          } // remove when fixed by SLDS CSS\n          ,\n          category: \"utility\",\n          className: \"slds-icon slds-icon_x-small slds-icon-text-default\",\n          name: \"close\"\n        }), /*#__PURE__*/React.createElement(\"span\", {\n          className: \"slds-assistive-text\"\n        }, _this.props.assistiveText.remove || _this.props.labels.removeTitle));\n      }\n\n      return null;\n    });\n\n    return _this;\n  }\n\n  _createClass(Pill, [{\n    key: \"render\",\n    value: function render() {\n      var role;\n\n      switch (this.props.variant) {\n        case 'link':\n          role = 'button';\n          break;\n\n        case 'option':\n          role = 'option';\n          break;\n\n        default:\n      }\n\n      return (\n        /*#__PURE__*/\n\n        /* eslint-disable jsx-a11y/no-static-element-interactions */\n        React.createElement(\"span\", _extends({}, this.restProps(), {\n          role: role,\n          className: classNames('slds-pill', {\n            'slds-pill_link': this.props.variant === 'link',\n            'slds-has-error': this.props.hasError,\n            'slds-pill_bare': this.props.bare\n          }, this.props.className),\n          onClick: !this.props.labels.label || this.props.variant !== 'link' ? this.props.onClick : null,\n          onKeyDown: typeof this.props.onRemove === 'function' ? this.handleKeyDown : null,\n          ref: this.handleRef\n        }), this.renderIcon(), this.renderLabel(), this.renderRemoveIcon())\n      );\n    }\n  }]);\n\n  return Pill;\n}(React.Component);\n\nPill.displayName = PILL;\nPill.defaultProps = {\n  variant: 'link',\n  labels: {},\n  assistiveText: {}\n};\nPill.propTypes = propTypes;\nexport default Pill;","map":{"version":3,"sources":["../../../.tmp-es/components/pill/index.jsx"],"names":["propTypes","assistiveText","remove","PropTypes","string","avatar","bare","children","className","hasError","href","icon","labels","label","title","removeTitle","onBlur","onClick","onFocus","onKeyDown","onRemove","variant","Pill","React","Component","rest","event","KEYS","EventUtil","other","handleOnClick","cursor","role","classNames","handleRef"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;AAEA;AACA;;;AAEA,OAAA,KAAA,MAAA,OAAA;AACA,OAAA,SAAA,MAAA,YAAA;AACA,OAAA,UAAA,MAAA,YAAA;AACA,SAAA,IAAA,QAAA,2BAAA;AACA,OAAA,WAAA,MAAA,2BAAA;AACA,OAAA,IAAA,MAAA,0BAAA;AACA,OAAA,SAAA,MAAA,uBAAA;AAEA,IAAMA,SAAS,GAAG;AACjB;AACD;AACA;AACA;AACA;AACA;AACCC,EAAAA,aAAa,EAAE,SAAS,CAAT,KAAA,CAAgB;AAC9BC,IAAAA,MAAM,EAAEC,SAAS,CAACC;AADY,GAAhB,CAPE;;AAUjB;AACD;AACA;AACA;AACCC,EAAAA,MAAM,EAAEF,SAAS,CAdA,OAAA;;AAejB;AACD;AACA;AACA;AACCG,EAAAA,IAAI,EAAEH,SAAS,CAnBE,IAAA;;AAoBjB;AACD;AACA;AACA;AACCI,EAAAA,QAAQ,EAAEJ,SAAS,CAxBF,IAAA;;AAyBjB;AACD;AACA;AACA;AACCK,EAAAA,SAAS,EAAEL,SAAS,CAATA,SAAAA,CAAoB,CAC9BA,SAAS,CADqB,KAAA,EAE9BA,SAAS,CAFqB,MAAA,EAG9BA,SAAS,CAhCO,MA6Bc,CAApBA,CA7BM;;AAkCjB;AACD;AACA;AACA;AACCM,EAAAA,QAAQ,EAAEN,SAAS,CAtCF,IAAA;;AAuCjB;AACD;AACA;AACA;AACCO,EAAAA,IAAI,EAAEP,SAAS,CA3CE,MAAA;;AA4CjB;AACD;AACA;AACA;AACCQ,EAAAA,IAAI,EAAER,SAAS,CAhDE,OAAA;;AAiDjB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACCS,EAAAA,MAAM,EAAE,SAAS,CAAT,KAAA,CAAgB;AACvBC,IAAAA,KAAK,EAAEV,SAAS,CADO,MAAA;AAEvBW,IAAAA,KAAK,EAAEX,SAAS,CAFO,MAAA;AAGvBY,IAAAA,WAAW,EAAEZ,SAAS,CAACC;AAHA,GAAhB,CA1DS;;AA+DjB;AACD;AACA;AACA;AACCY,EAAAA,MAAM,EAAEb,SAAS,CAnEA,IAAA;;AAoEjB;AACD;AACA;AACA;AACCc,EAAAA,OAAO,EAAEd,SAAS,CAxED,IAAA;;AAyEjB;AACD;AACA;AACA;AACCe,EAAAA,OAAO,EAAEf,SAAS,CA7ED,IAAA;;AA8EjB;AACD;AACA;AACA;AACCgB,EAAAA,SAAS,EAAEhB,SAAS,CAlFH,IAAA;;AAmFjB;AACD;AACA;AACA;AACCiB,EAAAA,QAAQ,EAAEjB,SAAS,CAvFF,IAAA;;AAwFjB;AACD;AACA;AACA;AACCkB,EAAAA,OAAO,EAAElB,SAAS,CAATA,KAAAA,CAAgB,CAAA,MAAA,EAAhBA,QAAgB,CAAhBA;AA5FQ,CAAlB;AA+FA;AACA;AACA;;IACMmB,I;;;;;;;;;;;;;;;;8DACK,YAAA;AAAA,aAAO,OAAO,KAAA,CAAA,KAAA,CAAP,IAAA,KAAA,QAAA,GAAsC,KAAA,CAAA,KAAA,CAAtC,IAAA,GAAP,GAAA;;;2DAKH,YAAM;AACZ,MAAA,KAAA,CAAA,IAAA,CAAA,IAAA;;;4DAMO,YAAM;AACb,MAAA,KAAA,CAAA,IAAA,CAAA,KAAA;;;oEAIe,UAAA,KAAA,EAAoB;AACnC,UAAI,OAAO,KAAA,CAAA,KAAA,CAAP,SAAA,KAAJ,UAAA,EAAgD;AAAA,YAAA,qBAAA;;AAAA,aAAA,IAAA,KAAA,GAAA,SAAA,CAAA,MAAA,EADtBG,IACsB,GAAA,IAAA,KAAA,CAAA,KAAA,GAAA,CAAA,GAAA,KAAA,GAAA,CAAA,GAAA,CAAA,CAAA,EAAA,KAAA,GAAA,CAAA,EAAA,KAAA,GAAA,KAAA,EAAA,KAAA,EAAA,EAAA;AADtBA,UAAAA,IACsB,CAAA,KAAA,GAAA,CAAA,CADtBA,GACsB,SAAA,CAAA,KAAA,CADtBA;AACsB,SAAA,CAC/C;;;AACA,SAAA,qBAAA,GAAA,KAAA,CAAA,KAAA,CAAA,SAAA,EAAA,IAAA,CAAA,KAAA,CAAA,qBAAA,EAAA,CAAA,IAAA,EAAA,KAAA,EAAA,MAAA,CAF+C,IAE/C,CAAA,EAF+C,CAG/C;;;AACA,YAAIC,KAAK,CAAT,gBAAA,EAA4B;AAC3B;AACA;AACD;;AAED,cAAQA,KAAK,CAAb,OAAA;AACC,aAAKC,IAAI,CAAT,KAAA;AACC,cAAI,OAAO,KAAA,CAAA,KAAA,CAAP,OAAA,KAAJ,UAAA,EAA8C;AAC7CC,YAAAA,SAAS,CAATA,IAAAA,CAAAA,KAAAA;;AACA,YAAA,KAAA,CAAA,KAAA,CAAA,OAAA;AACA;;AACD;;AAED,aAAKD,IAAI,CAAT,SAAA;AACA,aAAKA,IAAI,CAAT,MAAA;AACC,cAAI,OAAO,KAAA,CAAA,KAAA,CAAP,QAAA,KAAJ,UAAA,EAA+C;AAC9CC,YAAAA,SAAS,CAATA,IAAAA,CAAAA,KAAAA;;AACA,YAAA,KAAA,CAAA,KAAA,CAAA,QAAA;AACA;;AACD;;AAED;AACC;AAjBF;;;gEAqBW,UAAA,IAAA,EAAU;AACrB;AACA,MAAA,KAAA,CAAA,IAAA,GAAA,IAAA;;;oEAGe,UAAA,KAAA,EAAW;AAC1B,UAAI,KAAA,CAAA,OAAA,OAAJ,GAAA,EAA4B;AAC3BF,QAAAA,KAAK,CAALA,cAAAA;AACA;;AAED,UAAI,KAAA,CAAA,KAAA,CAAJ,OAAA,EAAwB;AACvB,QAAA,KAAA,CAAA,KAAA,CAAA,OAAA,CAAA,KAAA;AACA;;;gEAMU,YAAM;AAAA,UAAA,WAAA,GAgBb,KAAA,CAhBa,KAAA;AAAA,UAEhBpB,IAFgB,GAAA,WAAA,CAAA,IAAA;AAAA,UAGhBG,QAHgB,GAAA,WAAA,CAAA,QAAA;AAAA,UAIhBY,OAJgB,GAAA,WAAA,CAAA,OAAA;AAAA,UAKhBb,SALgB,GAAA,WAAA,CAAA,SAAA;AAAA,UAMhBS,OANgB,GAAA,WAAA,CAAA,OAAA;AAAA,UAOhBG,QAPgB,GAAA,WAAA,CAAA,QAAA;AAAA,UAQhBR,MARgB,GAAA,WAAA,CAAA,MAAA;AAAA,UAShBX,aATgB,GAAA,WAAA,CAAA,aAAA;AAAA,UAUhBM,QAVgB,GAAA,WAAA,CAAA,QAAA;AAAA,UAWhBG,IAXgB,GAAA,WAAA,CAAA,IAAA;AAAA,UAYhBC,IAZgB,GAAA,WAAA,CAAA,IAAA;AAAA,UAahBN,MAbgB,GAAA,WAAA,CAAA,MAAA;AAAA,UAchBc,SAdgB,GAAA,WAAA,CAAA,SAAA;AAAA,UAebU,KAfa,GAAA,wBAAA,CAAA,WAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,SAAA,EAAA,WAAA,EAAA,SAAA,EAAA,UAAA,EAAA,QAAA,EAAA,eAAA,EAAA,UAAA,EAAA,MAAA,EAAA,MAAA,EAAA,QAAA,EAAA,WAAA,CAAA,CAAA;;AAiBjB,aAAA,KAAA;;;iEAGY,YAAM;AAClB,UAAMlB,IAAI,GAAG,KAAA,CAAA,KAAA,CAAA,IAAA,IAAmB,KAAA,CAAA,KAAA,CAAhC,MAAA;;AACA,UAAA,IAAA,EAAU;AACT,eAAA,aAAO,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AAAM,UAAA,SAAS,EAAC;AAAhB,SAAA,EAAP,IAAO,CAAP;AACA;;AACD,aAAA,IAAA;;;kEAGa,YAAM;AACnB,UAAI,KAAA,CAAA,KAAA,CAAA,MAAA,CAAJ,KAAA,EAA6B;AAC5B,YAAI,KAAA,CAAA,KAAA,CAAA,OAAA,KAAJ,MAAA,EAAmC;AAClC,iBAAA,aACC,KAAA,CAAA,aAAA,CAAA,GAAA,EAAA;AACC,YAAA,IAAI,EAAE,KAAA,CADP,OACO,EADP;AAEC,YAAA,SAAS,EAFV,mBAAA;AAGC,YAAA,KAAK,EAAE,KAAA,CAAA,KAAA,CAAA,MAAA,CAAA,KAAA,IAA2B,KAAA,CAAA,KAAA,CAAA,MAAA,CAHnC,KAAA;AAIC,YAAA,OAAO,EAAE,KAAA,CAAKmB;AAJf,WAAA,EAAA,aAMC,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AAAM,YAAA,SAAS,EAAC;AAAhB,WAAA,EAAoC,KAAA,CAAA,KAAA,CAAA,MAAA,CAPtC,KAOE,CAND,CADD;AAUA;;AACD,eAAA,aACC,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AACC,UAAA,SAAS,EADV,kBAAA;AAEC,UAAA,KAAK,EAAE,KAAA,CAAA,KAAA,CAAA,MAAA,CAAA,KAAA,IAA2B,KAAA,CAAA,KAAA,CAAA,MAAA,CAAkBjB;AAFrD,SAAA,EAIE,KAAA,CAAA,KAAA,CAAA,MAAA,CALH,KACC,CADD;AAQA;;AACD,aAAO,KAAA,CAAA,KAAA,CAAP,QAAA;;;uEAGkB,YAAM;AACxB,UAAI,OAAO,KAAA,CAAA,KAAA,CAAP,QAAA,KAAJ,UAAA,EAA+C;AAC9C,eAAA,aACC,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AAAM;AACL,UAAA,SAAS,EADV,uCAAA;AAEC,UAAA,KAAK,EAAE,KAAA,CAAA,KAAA,CAAA,MAAA,CAFR,WAAA;AAGC,UAAA,IAAI,EAHL,QAAA;AAIC,UAAA,OAAO,EAAE,KAAA,CAAA,KAAA,CAAWO;AAJrB,SAAA,EAAA,aAMC,KAAA,CAAA,aAAA,CAAA,WAAA,EAAA;AACC,UAAA,KAAK,EAAE;AAAEW,YAAAA,MAAM,EAAE;AAAV,WADR,CAC+B;AAD/B;AAEC,UAAA,QAAQ,EAFT,SAAA;AAGC,UAAA,SAAS,EAHV,oDAAA;AAIC,UAAA,IAAI,EAAC;AAJN,SAAA,CAND,EAAA,aAYC,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AAAM,UAAA,SAAS,EAAC;AAAhB,SAAA,EACE,KAAA,CAAA,KAAA,CAAA,aAAA,CAAA,MAAA,IAAmC,KAAA,CAAA,KAAA,CAAA,MAAA,CAdvC,WAaE,CAZD,CADD;AAkBA;;AAED,aAAA,IAAA;;;;;;;;6BAGQ;AACR,UAAA,IAAA;;AACA,cAAQ,KAAA,KAAA,CAAR,OAAA;AACC,aAAA,MAAA;AACCC,UAAAA,IAAI,GAAJA,QAAAA;AACA;;AACD,aAAA,QAAA;AACCA,UAAAA,IAAI,GAAJA,QAAAA;AACA;;AACD;AAPD;;AAUA;AAAA;;AACC;AACA,QAAA,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA,QAAA,CAAA,EAAA,EACK,KADL,SACK,EADL,EAAA;AAEC,UAAA,IAAI,EAFL,IAAA;AAGC,UAAA,SAAS,EAAEC,UAAU,CAAA,WAAA,EAEpB;AACC,8BAAkB,KAAA,KAAA,CAAA,OAAA,KADnB,MAAA;AAEC,8BAAkB,KAAA,KAAA,CAFnB,QAAA;AAGC,8BAAkB,KAAA,KAAA,CAAW3B;AAH9B,WAFoB,EAOpB,KAAA,KAAA,CAVF,SAGsB,CAHtB;AAYC,UAAA,OAAO,EACN,CAAC,KAAA,KAAA,CAAA,MAAA,CAAD,KAAA,IAA4B,KAAA,KAAA,CAAA,OAAA,KAA5B,MAAA,GACG,KAAA,KAAA,CADH,OAAA,GAbF,IAAA;AAiBC,UAAA,SAAS,EACR,OAAO,KAAA,KAAA,CAAP,QAAA,KAAA,UAAA,GAA4C,KAA5C,aAAA,GAlBF,IAAA;AAoBC,UAAA,GAAG,EAAE,KAAK4B;AApBX,SAAA,CAAA,EAsBE,KAtBF,UAsBE,EAtBF,EAuBE,KAvBF,WAuBE,EAvBF,EAwBE,KAxBF,gBAwBE,EAxBF;AAFD;AA6BA;;;;EA3LiBX,KAAK,CAACC,S;;AA8LzBF,IAAI,CAAJA,WAAAA,GAAAA,IAAAA;AAEAA,IAAI,CAAJA,YAAAA,GAAoB;AACnBD,EAAAA,OAAO,EADY,MAAA;AAEnBT,EAAAA,MAAM,EAFa,EAAA;AAGnBX,EAAAA,aAAa,EAAE;AAHI,CAApBqB;AAMAA,IAAI,CAAJA,SAAAA,GAAAA,SAAAA;AAEA,eAAA,IAAA","sourcesContent":["/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\n// # Pill Component\n// Implements the [Pill design pattern](https://lightningdesignsystem.com/components/pills/) in React.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { PILL } from '../../utilities/constants';\nimport UtilityIcon from '../utilities/utility-icon';\nimport KEYS from '../../utilities/key-code';\nimport EventUtil from '../../utilities/event';\n\nconst propTypes = {\n\t/**\n\t * **Assistive text for accessibility**\n\t * This object is merged with the default props object on every render.\n\t * * `remove`: This is a visually hidden label for the close button.\n\t * _Tested with snapshot testing._\n\t */\n\tassistiveText: PropTypes.shape({\n\t\tremove: PropTypes.string,\n\t}),\n\t/**\n\t * SLDSAvatar component to show on the left of the pill.\n\t * _Tested with Mocha framework._\n\t */\n\tavatar: PropTypes.element,\n\t/**\n\t * Applies the bare style to the component.\n\t * _Tested with Mocha framework._\n\t */\n\tbare: PropTypes.bool,\n\t/**\n\t * This is a way to specify custom contents for the pill in the case a simple text label is not enough.\n\t * _Tested with Mocha framework._\n\t */\n\tchildren: PropTypes.node,\n\t/**\n\t * CSS classes to be added to tag with `.slds-pill`. Uses `classNames` [API](https://github.com/JedWatson/classnames).\n\t * _Tested with Mocha framework._\n\t */\n\tclassName: PropTypes.oneOfType([\n\t\tPropTypes.array,\n\t\tPropTypes.object,\n\t\tPropTypes.string,\n\t]),\n\t/**\n\t * Applies the error style to the component.\n\t * _Tested with Mocha framework._\n\t */\n\thasError: PropTypes.bool,\n\t/**\n\t * An href to use if the pill is shown as a link.\n\t * _Tested with Mocha framework._\n\t */\n\thref: PropTypes.string,\n\t/**\n\t * SLDSIcon component to show on the left of the pill.\n\t * _Tested with Mocha framework._\n\t */\n\ticon: PropTypes.element,\n\t/**\n\t * **Text labels for internationalization**\n\t * This object is merged with the default props object on every render.\n\t * * `label`: Pill's label.\n\t * * `title`: Pill's title.\n\t * * `removeTitle`: A title to use for the remove icon.\n\t *\n\t * _Tested with snapshot testing._\n\t */\n\tlabels: PropTypes.shape({\n\t\tlabel: PropTypes.string,\n\t\ttitle: PropTypes.string,\n\t\tremoveTitle: PropTypes.string,\n\t}),\n\t/**\n\t * `onBlur` callback executes when the component loses focus.\n\t * _Tested with Mocha framework._\n\t */\n\tonBlur: PropTypes.func,\n\t/**\n\t * `onClick` callback executes when a user clicks on the pill or presses the Enter key.\n\t * _Tested with Mocha framework._\n\t */\n\tonClick: PropTypes.func,\n\t/**\n\t * `onFocus` callback executes when the component receives focus.\n\t * _Tested with Mocha framework._\n\t */\n\tonFocus: PropTypes.func,\n\t/**\n\t * `onKeyDown` callback executes when a user presses a key.\n\t * _Tested with Mocha framework._\n\t */\n\tonKeyDown: PropTypes.func,\n\t/**\n\t * `onRemove` callback executes when a user clicks on the pill's remove icon or presses the delete or the backspace keys.\n\t * _Tested with Mocha framework._\n\t */\n\tonRemove: PropTypes.func,\n\t/**\n\t * A variant of a pill\n\t * _Tested with Mocha framework._\n\t */\n\tvariant: PropTypes.oneOf(['link', 'option']),\n};\n\n/**\n * A pill displays a label that can contain links and can be removed from view. Use `PillContainer` for a list of pills in a container that resembles an `input` form field. A pill is useful for displaying read-only text that can be added and removed on demand.\n */\nclass Pill extends React.Component {\n\tgetHref = () => (typeof this.props.href === 'string' ? this.props.href : '#');\n\n\t/**\n\t * Removes focus from the component.\n\t */\n\tblur = () => {\n\t\tthis.root.blur();\n\t};\n\n\t/**\n\t * Give focus to the Pill component.\n\t */\n\tfocus = () => {\n\t\tthis.root.focus();\n\t};\n\n\t// eslint-disable-next-line fp/no-rest-parameters\n\thandleKeyDown = (event, ...rest) => {\n\t\tif (typeof this.props.onKeyDown === 'function') {\n\t\t\t// Make a callback to onKeyDown.\n\t\t\tthis.props.onKeyDown.call(null, event, ...rest);\n\t\t\t// Cancel further handling if the default handling for the event was prevented.\n\t\t\tif (event.defaultPrevented) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tswitch (event.keyCode) {\n\t\t\tcase KEYS.ENTER:\n\t\t\t\tif (typeof this.props.onClick === 'function') {\n\t\t\t\t\tEventUtil.trap(event);\n\t\t\t\t\tthis.props.onClick();\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase KEYS.BACKSPACE:\n\t\t\tcase KEYS.DELETE:\n\t\t\t\tif (typeof this.props.onRemove === 'function') {\n\t\t\t\t\tEventUtil.trap(event);\n\t\t\t\t\tthis.props.onRemove();\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t};\n\n\thandleRef = (root) => {\n\t\t// Keeping the top-most element to support focus() and blur()\n\t\tthis.root = root;\n\t};\n\n\thandleOnClick = (event) => {\n\t\tif (this.getHref() === '#') {\n\t\t\tevent.preventDefault();\n\t\t}\n\n\t\tif (this.props.onClick) {\n\t\t\tthis.props.onClick(event);\n\t\t}\n\t};\n\n\t/**\n\t * Extracts a set of custom properties. A custom property is a property, which is not described in propTypes of a component.\n\t */\n\trestProps = () => {\n\t\tconst {\n\t\t\tbare,\n\t\t\thasError,\n\t\t\tvariant,\n\t\t\tclassName,\n\t\t\tonClick,\n\t\t\tonRemove,\n\t\t\tlabels,\n\t\t\tassistiveText,\n\t\t\tchildren,\n\t\t\thref,\n\t\t\ticon,\n\t\t\tavatar,\n\t\t\tonKeyDown,\n\t\t\t...other\n\t\t} = this.props;\n\t\treturn other;\n\t};\n\n\trenderIcon = () => {\n\t\tconst icon = this.props.icon || this.props.avatar;\n\t\tif (icon) {\n\t\t\treturn <span className=\"slds-pill__icon_container\">{icon}</span>;\n\t\t}\n\t\treturn null;\n\t};\n\n\trenderLabel = () => {\n\t\tif (this.props.labels.label) {\n\t\t\tif (this.props.variant === 'link') {\n\t\t\t\treturn (\n\t\t\t\t\t<a\n\t\t\t\t\t\thref={this.getHref()}\n\t\t\t\t\t\tclassName=\"slds-pill__action\"\n\t\t\t\t\t\ttitle={this.props.labels.title || this.props.labels.label}\n\t\t\t\t\t\tonClick={this.handleOnClick}\n\t\t\t\t\t>\n\t\t\t\t\t\t<span className=\"slds-pill__label\">{this.props.labels.label}</span>\n\t\t\t\t\t</a>\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn (\n\t\t\t\t<span\n\t\t\t\t\tclassName=\"slds-pill__label\"\n\t\t\t\t\ttitle={this.props.labels.title || this.props.labels.label}\n\t\t\t\t>\n\t\t\t\t\t{this.props.labels.label}\n\t\t\t\t</span>\n\t\t\t);\n\t\t}\n\t\treturn this.props.children;\n\t};\n\n\trenderRemoveIcon = () => {\n\t\tif (typeof this.props.onRemove === 'function') {\n\t\t\treturn (\n\t\t\t\t<span // eslint-disable-line jsx-a11y/interactive-supports-focus\n\t\t\t\t\tclassName=\"slds-icon_container slds-pill__remove\"\n\t\t\t\t\ttitle={this.props.labels.removeTitle}\n\t\t\t\t\trole=\"button\"\n\t\t\t\t\tonClick={this.props.onRemove}\n\t\t\t\t>\n\t\t\t\t\t<UtilityIcon\n\t\t\t\t\t\tstyle={{ cursor: 'pointer' }} // remove when fixed by SLDS CSS\n\t\t\t\t\t\tcategory=\"utility\"\n\t\t\t\t\t\tclassName=\"slds-icon slds-icon_x-small slds-icon-text-default\"\n\t\t\t\t\t\tname=\"close\"\n\t\t\t\t\t/>\n\t\t\t\t\t<span className=\"slds-assistive-text\">\n\t\t\t\t\t\t{this.props.assistiveText.remove || this.props.labels.removeTitle}\n\t\t\t\t\t</span>\n\t\t\t\t</span>\n\t\t\t);\n\t\t}\n\n\t\treturn null;\n\t};\n\n\trender() {\n\t\tlet role;\n\t\tswitch (this.props.variant) {\n\t\t\tcase 'link':\n\t\t\t\trole = 'button';\n\t\t\t\tbreak;\n\t\t\tcase 'option':\n\t\t\t\trole = 'option';\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t}\n\n\t\treturn (\n\t\t\t/* eslint-disable jsx-a11y/no-static-element-interactions */\n\t\t\t<span\n\t\t\t\t{...this.restProps()}\n\t\t\t\trole={role}\n\t\t\t\tclassName={classNames(\n\t\t\t\t\t'slds-pill',\n\t\t\t\t\t{\n\t\t\t\t\t\t'slds-pill_link': this.props.variant === 'link',\n\t\t\t\t\t\t'slds-has-error': this.props.hasError,\n\t\t\t\t\t\t'slds-pill_bare': this.props.bare,\n\t\t\t\t\t},\n\t\t\t\t\tthis.props.className\n\t\t\t\t)}\n\t\t\t\tonClick={\n\t\t\t\t\t!this.props.labels.label || this.props.variant !== 'link'\n\t\t\t\t\t\t? this.props.onClick\n\t\t\t\t\t\t: null\n\t\t\t\t}\n\t\t\t\tonKeyDown={\n\t\t\t\t\ttypeof this.props.onRemove === 'function' ? this.handleKeyDown : null\n\t\t\t\t}\n\t\t\t\tref={this.handleRef}\n\t\t\t>\n\t\t\t\t{this.renderIcon()}\n\t\t\t\t{this.renderLabel()}\n\t\t\t\t{this.renderRemoveIcon()}\n\t\t\t</span>\n\t\t);\n\t}\n}\n\nPill.displayName = PILL;\n\nPill.defaultProps = {\n\tvariant: 'link',\n\tlabels: {},\n\tassistiveText: {},\n};\n\nPill.propTypes = propTypes;\n\nexport default Pill;\n"]},"metadata":{},"sourceType":"module"}