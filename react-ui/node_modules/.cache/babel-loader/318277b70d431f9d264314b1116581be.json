{"ast":null,"code":"/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\nimport escapeRegExp from 'lodash.escaperegexp'; // Determines the focusedIndex of a menu item following keyboard letter presses\n\nvar keyLetterMenuItemSelect = function keyLetterMenuItemSelect(_ref) {\n  var key = _ref.key,\n      keyBuffer = _ref.keyBuffer,\n      keyCode = _ref.keyCode,\n      options = _ref.options;\n  var ch = key || String.fromCharCode(keyCode);\n\n  if (/^[ -~]$/.test(ch)) {\n    ch = ch.toLowerCase();\n  } else {\n    ch = null;\n  }\n\n  var pattern = keyBuffer(ch);\n  var consecutive = 0;\n  var focusedIndex; // Support for navigating to the next option of the same letter with repeated presses of the same key\n\n  if (pattern.length > 1 && new RegExp(\"^[\".concat(escapeRegExp(ch), \"]+$\")).test(pattern)) {\n    consecutive = pattern.length;\n  }\n\n  options.forEach(function (item, index) {\n    var itemLabel = String(item.label).toLowerCase();\n\n    if (focusedIndex === undefined && itemLabel.substr(0, pattern.length) === pattern || consecutive > 0 && itemLabel.substr(0, 1) === ch) {\n      consecutive -= 1;\n      focusedIndex = index;\n    }\n  });\n  return focusedIndex;\n};\n\nexport default keyLetterMenuItemSelect;","map":{"version":3,"sources":["../../.tmp-es/utilities/key-letter-menu-item-select.js"],"names":["keyLetterMenuItemSelect","key","keyBuffer","keyCode","options","ch","String","pattern","consecutive","escapeRegExp","itemLabel","item","focusedIndex"],"mappings":"AAAA;;AACA;AACA,OAAA,YAAA,MAAA,qBAAA,C,CAEA;;AACA,IAAMA,uBAAuB,GAAG,SAA1BA,uBAA0B,CAAA,IAAA,EAA0C;AAAA,MAAvCC,GAAuC,GAAA,IAAA,CAAvCA,GAAuC;AAAA,MAAlCC,SAAkC,GAAA,IAAA,CAAlCA,SAAkC;AAAA,MAAvBC,OAAuB,GAAA,IAAA,CAAvBA,OAAuB;AAAA,MAAdC,OAAc,GAAA,IAAA,CAAdA,OAAc;AACzE,MAAIC,EAAE,GAAGJ,GAAG,IAAIK,MAAM,CAANA,YAAAA,CAAhB,OAAgBA,CAAhB;;AAEA,MAAI,UAAA,IAAA,CAAJ,EAAI,CAAJ,EAAwB;AACvBD,IAAAA,EAAE,GAAGA,EAAE,CAAPA,WAAKA,EAALA;AADD,GAAA,MAEO;AACNA,IAAAA,EAAE,GAAFA,IAAAA;AACA;;AAED,MAAME,OAAO,GAAGL,SAAS,CAAzB,EAAyB,CAAzB;AACA,MAAIM,WAAW,GAAf,CAAA;AACA,MAXyE,YAWzE,CAXyE,CAazE;;AACA,MACCD,OAAO,CAAPA,MAAAA,GAAAA,CAAAA,IACA,IAAA,MAAA,CAAA,KAAA,MAAA,CAAgBE,YAAY,CAA5B,EAA4B,CAA5B,EAAA,KAAA,CAAA,EAAA,IAAA,CAFD,OAEC,CAFD,EAGE;AACDD,IAAAA,WAAW,GAAGD,OAAO,CAArBC,MAAAA;AACA;;AAEDJ,EAAAA,OAAO,CAAPA,OAAAA,CAAgB,UAAA,IAAA,EAAA,KAAA,EAAiB;AAChC,QAAMM,SAAS,GAAGJ,MAAM,CAACK,IAAI,CAAXL,KAAM,CAANA,CAAlB,WAAkBA,EAAlB;;AAEA,QACEM,YAAY,KAAZA,SAAAA,IACAF,SAAS,CAATA,MAAAA,CAAAA,CAAAA,EAAoBH,OAAO,CAA3BG,MAAAA,MADD,OAACE,IAEAJ,WAAW,GAAXA,CAAAA,IAAmBE,SAAS,CAATA,MAAAA,CAAAA,CAAAA,EAAAA,CAAAA,MAHrB,EAAA,EAIE;AACDF,MAAAA,WAAW,IAAXA,CAAAA;AACAI,MAAAA,YAAY,GAAZA,KAAAA;AACA;AAVFR,GAAAA;AAaA,SAAA,YAAA;AAlCD,CAAA;;AAqCA,eAAA,uBAAA","sourcesContent":["/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\nimport escapeRegExp from 'lodash.escaperegexp';\n\n// Determines the focusedIndex of a menu item following keyboard letter presses\nconst keyLetterMenuItemSelect = ({ key, keyBuffer, keyCode, options }) => {\n\tlet ch = key || String.fromCharCode(keyCode);\n\n\tif (/^[ -~]$/.test(ch)) {\n\t\tch = ch.toLowerCase();\n\t} else {\n\t\tch = null;\n\t}\n\n\tconst pattern = keyBuffer(ch);\n\tlet consecutive = 0;\n\tlet focusedIndex;\n\n\t// Support for navigating to the next option of the same letter with repeated presses of the same key\n\tif (\n\t\tpattern.length > 1 &&\n\t\tnew RegExp(`^[${escapeRegExp(ch)}]+$`).test(pattern)\n\t) {\n\t\tconsecutive = pattern.length;\n\t}\n\n\toptions.forEach((item, index) => {\n\t\tconst itemLabel = String(item.label).toLowerCase();\n\n\t\tif (\n\t\t\t(focusedIndex === undefined &&\n\t\t\t\titemLabel.substr(0, pattern.length) === pattern) ||\n\t\t\t(consecutive > 0 && itemLabel.substr(0, 1) === ch)\n\t\t) {\n\t\t\tconsecutive -= 1;\n\t\t\tfocusedIndex = index;\n\t\t}\n\t});\n\n\treturn focusedIndex;\n};\n\nexport default keyLetterMenuItemSelect;\n"]},"metadata":{},"sourceType":"module"}