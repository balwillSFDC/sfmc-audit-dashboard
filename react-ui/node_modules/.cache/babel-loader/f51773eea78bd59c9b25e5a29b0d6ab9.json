{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n// Implements the [Scoped Notification design pattern](https://lightningdesignsystem.com/components/scoped-notifications/) in React.\n// Based on SLDS v2.4.5\n\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Icon from '../icon';\nimport componentDoc from './component.json';\nimport checkProps from './check-props';\nimport { SCOPED_NOTIFICATION } from '../../utilities/constants';\nvar propTypes = {\n  /**\n   * **Assistive text for accessibility.**\n   * * `icon`: The assistive text for the icon. Is overridden by `label` assistive text passed directly to an `Icon` component via the `icon` prop\n   */\n  assistiveText: PropTypes.shape({\n    icon: PropTypes.string\n  }),\n\n  /**\n   * CSS classes to be added to tag with `.slds-scoped-notification`. Uses `classNames` [API](https://github.com/JedWatson/classnames).\n   */\n  className: PropTypes.oneOfType([PropTypes.array, PropTypes.object, PropTypes.string]),\n\n  /**\n   *  The icon to be displayed in the scoped notification. Accepts an `Icon` component\n   */\n  icon: PropTypes.node,\n\n  /**\n   *  Theme for the scoped notification\n   */\n  theme: PropTypes.oneOf(['dark', 'light'])\n};\nvar defaultProps = {};\n/**\n * A Scoped Notification Component serve advisory information for the user that is not important enough to justify an alert.\n */\n\nvar ScopedNotification = /*#__PURE__*/function (_React$Component) {\n  _inherits(ScopedNotification, _React$Component);\n\n  var _super = _createSuper(ScopedNotification);\n\n  function ScopedNotification(props) {\n    var _this;\n\n    _classCallCheck(this, ScopedNotification);\n\n    _this = _super.call(this, props);\n    checkProps(SCOPED_NOTIFICATION, props, componentDoc);\n    return _this;\n  }\n\n  _createClass(ScopedNotification, [{\n    key: \"render\",\n    value: function render() {\n      var icon;\n\n      if (this.props.icon) {\n        var iconAssistiveText = {};\n\n        if (this.props.assistiveText && this.props.assistiveText.icon) {\n          iconAssistiveText.label = this.props.assistiveText.icon;\n        }\n\n        if (this.props.icon.props.assistiveText) {\n          iconAssistiveText = _objectSpread(_objectSpread({}, iconAssistiveText), this.props.icon.props.assistiveText);\n        }\n\n        icon = /*#__PURE__*/React.cloneElement(this.props.icon, _objectSpread(_objectSpread({}, this.props.icon.props), {}, {\n          assistiveText: iconAssistiveText\n        }));\n      } else {\n        icon = /*#__PURE__*/React.createElement(Icon, {\n          assistiveText: {\n            label: this.props.assistiveText && this.props.assistiveText.icon || 'Info'\n          },\n          category: \"utility\",\n          name: this.props.iconName || 'info',\n          colorVariant: this.props.theme === 'dark' ? 'base' : undefined,\n          size: \"small\"\n        });\n      }\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: classNames(\"slds-scoped-notification\", \"slds-media\", \"slds-media_center\", {\n          'slds-scoped-notification_light': this.props.theme === 'light',\n          'slds-scoped-notification_dark': this.props.theme === 'dark'\n        }, this.props.className),\n        role: \"status\"\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"slds-media__figure\"\n      }, icon), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"slds-media__body\"\n      }, this.props.children));\n    }\n  }]);\n\n  return ScopedNotification;\n}(React.Component);\n\nScopedNotification.displayName = SCOPED_NOTIFICATION;\nScopedNotification.propTypes = propTypes;\nScopedNotification.defaultProps = defaultProps;\nexport default ScopedNotification;","map":{"version":3,"sources":["../../../.tmp-es/components/scoped-notification/index.jsx"],"names":["propTypes","assistiveText","icon","PropTypes","string","className","theme","defaultProps","ScopedNotification","React","Component","checkProps","iconAssistiveText","label","classNames"],"mappings":"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","sourcesContent":["/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\n// Implements the [Scoped Notification design pattern](https://lightningdesignsystem.com/components/scoped-notifications/) in React.\n// Based on SLDS v2.4.5\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport Icon from '../icon';\n\nimport componentDoc from './component.json';\nimport checkProps from './check-props';\n\nimport { SCOPED_NOTIFICATION } from '../../utilities/constants';\n\nconst propTypes = {\n\t/**\n\t * **Assistive text for accessibility.**\n\t * * `icon`: The assistive text for the icon. Is overridden by `label` assistive text passed directly to an `Icon` component via the `icon` prop\n\t */\n\tassistiveText: PropTypes.shape({\n\t\ticon: PropTypes.string,\n\t}),\n\t/**\n\t * CSS classes to be added to tag with `.slds-scoped-notification`. Uses `classNames` [API](https://github.com/JedWatson/classnames).\n\t */\n\tclassName: PropTypes.oneOfType([\n\t\tPropTypes.array,\n\t\tPropTypes.object,\n\t\tPropTypes.string,\n\t]),\n\t/**\n\t *  The icon to be displayed in the scoped notification. Accepts an `Icon` component\n\t */\n\ticon: PropTypes.node,\n\t/**\n\t *  Theme for the scoped notification\n\t */\n\ttheme: PropTypes.oneOf(['dark', 'light']),\n};\n\nconst defaultProps = {};\n\n/**\n * A Scoped Notification Component serve advisory information for the user that is not important enough to justify an alert.\n */\nclass ScopedNotification extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tcheckProps(SCOPED_NOTIFICATION, props, componentDoc);\n\t}\n\n\trender() {\n\t\tlet icon;\n\n\t\tif (this.props.icon) {\n\t\t\tlet iconAssistiveText = {};\n\n\t\t\tif (this.props.assistiveText && this.props.assistiveText.icon) {\n\t\t\t\ticonAssistiveText.label = this.props.assistiveText.icon;\n\t\t\t}\n\n\t\t\tif (this.props.icon.props.assistiveText) {\n\t\t\t\ticonAssistiveText = {\n\t\t\t\t\t...iconAssistiveText,\n\t\t\t\t\t...this.props.icon.props.assistiveText,\n\t\t\t\t};\n\t\t\t}\n\n\t\t\ticon = React.cloneElement(this.props.icon, {\n\t\t\t\t...this.props.icon.props,\n\t\t\t\tassistiveText: iconAssistiveText,\n\t\t\t});\n\t\t} else {\n\t\t\ticon = (\n\t\t\t\t<Icon\n\t\t\t\t\tassistiveText={{\n\t\t\t\t\t\tlabel:\n\t\t\t\t\t\t\t(this.props.assistiveText && this.props.assistiveText.icon) ||\n\t\t\t\t\t\t\t'Info',\n\t\t\t\t\t}}\n\t\t\t\t\tcategory=\"utility\"\n\t\t\t\t\tname={this.props.iconName || 'info'}\n\t\t\t\t\tcolorVariant={this.props.theme === 'dark' ? 'base' : undefined}\n\t\t\t\t\tsize=\"small\"\n\t\t\t\t/>\n\t\t\t);\n\t\t}\n\n\t\treturn (\n\t\t\t<div\n\t\t\t\tclassName={classNames(\n\t\t\t\t\t`slds-scoped-notification`,\n\t\t\t\t\t`slds-media`,\n\t\t\t\t\t`slds-media_center`,\n\t\t\t\t\t{\n\t\t\t\t\t\t'slds-scoped-notification_light': this.props.theme === 'light',\n\t\t\t\t\t\t'slds-scoped-notification_dark': this.props.theme === 'dark',\n\t\t\t\t\t},\n\t\t\t\t\tthis.props.className\n\t\t\t\t)}\n\t\t\t\trole=\"status\"\n\t\t\t>\n\t\t\t\t<div className=\"slds-media__figure\">{icon}</div>\n\t\t\t\t<div className=\"slds-media__body\">{this.props.children}</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nScopedNotification.displayName = SCOPED_NOTIFICATION;\nScopedNotification.propTypes = propTypes;\nScopedNotification.defaultProps = defaultProps;\n\nexport default ScopedNotification;\n"]},"metadata":{},"sourceType":"module"}