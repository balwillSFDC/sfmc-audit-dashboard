{"ast":null,"code":"function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n// # Tree Branch Component\n// Implements the [Tree design pattern](https://www.lightningdesignsystem.com/components/tree/) in React.\n// ## Dependencies\n\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport findIndex from 'lodash.findindex';\nimport isFunction from 'lodash.isfunction';\nimport classNames from 'classnames'; // Child components\n\nimport Button from '../../button';\nimport Highlighter from '../../utilities/highlighter';\nimport EventUtil from '../../../utilities/event';\nimport KEYS from '../../../utilities/key-code';\nimport mapKeyEventCallbacks from '../../../utilities/key-callbacks';\nvar propTypes = {\n  /**\n   * HTML `id` of primary element that has `.slds-tree` on it. This component has a wrapping container element outside of `.slds-tree`.\n   */\n  htmlId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n\n  /**\n   * The text of the tree item.\n   */\n  label: PropTypes.oneOfType([PropTypes.node, PropTypes.string]),\n\n  /**\n   * The number of nestings. Determines the ARIA level and style alignment.\n   */\n  level: PropTypes.number.isRequired,\n\n  /**\n   * The current node that is being rendered.\n   */\n  node: PropTypes.object.isRequired,\n\n  /**\n   * This function triggers when the expand or collapse icon is clicked or due to keyboard navigation.\n   */\n  onExpand: PropTypes.func.isRequired,\n\n  /**\n   * Function that will run whenever an item or branch is clicked.\n   */\n  onSelect: PropTypes.func,\n\n  /**\n   * Highlights term if found in node label\n   */\n  searchTerm: PropTypes.string,\n\n  /**\n   * Location of node (zero index). First node is `0`. It's first child is `0-0`. This can be used to modify your nodes without searching for the node. This index is only valid if the `nodes` prop is the same as at the time of the event.\n   */\n  treeIndex: PropTypes.string,\n\n  /**\n   * Flattened tree structure.\n   */\n  flattenedNodes: PropTypes.arrayOf(PropTypes.object),\n\n  /**\n   * Tree indexes of nodes that are currently selected.\n   */\n  selectedNodeIndexes: PropTypes.arrayOf(PropTypes.string),\n\n  /**\n   * Tree index of the node that is currently focused.\n   */\n  focusedNodeIndex: PropTypes.string,\n\n  /**\n   * Callback for when a node is blurred.\n   */\n  onNodeBlur: PropTypes.func,\n\n  /**\n   * Sets focus on render.\n   */\n  treeHasFocus: PropTypes.bool,\n\n  /**\n   * This node's parent.\n   */\n  parent: PropTypes.object\n};\n\nvar handleExpand = function handleExpand(event, props) {\n  EventUtil.trap(event);\n\n  if (isFunction(props.onExpand)) {\n    props.onExpand({\n      event: event,\n      data: {\n        node: props.node,\n        expand: !props.node.expanded,\n        treeIndex: props.treeIndex\n      }\n    });\n  }\n};\n\nvar handleSelect = function handleSelect(_ref) {\n  var event = _ref.event,\n      props = _ref.props,\n      fromFocus = _ref.fromFocus;\n  EventUtil.trap(event);\n\n  if (isFunction(props.onSelect)) {\n    props.onSelect({\n      event: event,\n      data: {\n        node: props.node,\n        select: !props.node.selected,\n        treeIndex: props.treeIndex\n      },\n      fromFocus: fromFocus\n    });\n  }\n};\n\nvar findNextNode = function findNextNode(flattenedNodes, node) {\n  var nodes = flattenedNodes.map(function (flattenedNode) {\n    return flattenedNode.node;\n  });\n  var index = findIndex(nodes, {\n    id: node.id\n  });\n  return flattenedNodes[(index + 1) % flattenedNodes.length];\n};\n\nvar findPreviousNode = function findPreviousNode(flattenedNodes, node) {\n  var nodes = flattenedNodes.map(function (flattenedNode) {\n    return flattenedNode.node;\n  });\n  var index = findIndex(nodes, {\n    id: node.id\n  }) - 1;\n\n  if (index < 0) {\n    index += flattenedNodes.length;\n  }\n\n  return flattenedNodes[index];\n};\n\nvar handleKeyDownDown = function handleKeyDownDown(event, props) {\n  if (props.focusedNodeIndex === props.treeIndex) {\n    // Select the next visible node\n    var flattenedNode = findNextNode(props.flattenedNodes, props.node);\n    props.onSelect({\n      event: event,\n      data: {\n        node: flattenedNode.node,\n        select: true,\n        treeIndex: flattenedNode.treeIndex\n      },\n      clearSelectedNodes: true\n    });\n  }\n};\n\nvar handleKeyDownUp = function handleKeyDownUp(event, props) {\n  if (props.focusedNodeIndex === props.treeIndex) {\n    // Go to the previous visible node\n    var flattenedNode = findPreviousNode(props.flattenedNodes, props.node);\n    props.onSelect({\n      event: event,\n      data: {\n        node: flattenedNode.node,\n        select: true,\n        treeIndex: flattenedNode.treeIndex\n      },\n      clearSelectedNodes: true\n    });\n  }\n};\n\nvar handleKeyDownRight = function handleKeyDownRight(event, props) {\n  if (props.node.expanded) {\n    if (props.getNodes(props.node) && props.getNodes(props.node).length > 0) {\n      handleKeyDownDown(event, props);\n    }\n  } else {\n    handleExpand(event, props);\n  }\n};\n\nvar handleKeyDownLeft = function handleKeyDownLeft(event, props) {\n  if (props.node.expanded) {\n    handleExpand(event, props);\n  } else {\n    var nodes = props.flattenedNodes.map(function (flattenedNode) {\n      return flattenedNode.node;\n    });\n    var index = findIndex(nodes, {\n      id: props.parent.id\n    });\n\n    if (index !== -1) {\n      props.onExpand({\n        event: event,\n        data: {\n          node: props.parent,\n          select: true,\n          expand: !props.parent.expanded,\n          treeIndex: props.flattenedNodes[index].treeIndex\n        }\n      });\n    }\n  }\n};\n\nvar handleKeyDownEnter = function handleKeyDownEnter(event, props) {\n  handleSelect({\n    event: event,\n    props: props\n  });\n};\n\nvar handleKeyDown = function handleKeyDown(event, props) {\n  var _callbacks;\n\n  mapKeyEventCallbacks(event, {\n    callbacks: (_callbacks = {}, _defineProperty(_callbacks, KEYS.DOWN, {\n      callback: function callback(evt) {\n        return handleKeyDownDown(evt, props);\n      }\n    }), _defineProperty(_callbacks, KEYS.UP, {\n      callback: function callback(evt) {\n        return handleKeyDownUp(evt, props);\n      }\n    }), _defineProperty(_callbacks, KEYS.RIGHT, {\n      callback: function callback(evt) {\n        return handleKeyDownRight(evt, props);\n      }\n    }), _defineProperty(_callbacks, KEYS.LEFT, {\n      callback: function callback(evt) {\n        return handleKeyDownLeft(evt, props);\n      }\n    }), _defineProperty(_callbacks, KEYS.ENTER, {\n      callback: function callback(evt) {\n        return handleKeyDownEnter(evt, props);\n      }\n    }), _callbacks)\n  });\n};\n\nvar handleFocus = function handleFocus(event, props) {\n  if (!props.treeHasFocus && !props.focusedNodeIndex && event.target === event.currentTarget) {\n    // did it happen by mouse?\n    handleSelect({\n      event: event,\n      props: props,\n      fromFocus: true\n    });\n  }\n};\n\nvar getTabIndex = function getTabIndex(props) {\n  var initialFocus = props.selectedNodeIndexes.length === 0 && props.treeIndex === props.flattenedNodes[0].treeIndex;\n  return props.treeIndex === props.focusedNodeIndex || initialFocus ? 0 : -1;\n}; // Most of these props come from the nodes array, not from the Tree props\n\n\nvar RenderBranch = function RenderBranch(children, props) {\n  var isExpanded = props.node.expanded;\n  var isSelected = props.node.selected;\n  var isFocused = props.treeIndex === props.focusedNodeIndex;\n  var isLoading = props.node.loading;\n  var loader = /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'block',\n      paddingLeft: \"\".concat(1.5 * props.level + 1.5, \"rem\"),\n      marginTop: '.5rem'\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      borderRadius: '15rem',\n      display: 'block',\n      marginBottom: '.75rem',\n      height: '.5rem',\n      backgroundColor: 'rgb(224, 229, 238)',\n      width: '40%'\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      borderRadius: '15rem',\n      display: 'block',\n      marginBottom: '.75rem',\n      height: '.5rem',\n      backgroundColor: 'rgb(224, 229, 238)',\n      width: '80%'\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      borderRadius: '15rem',\n      display: 'block',\n      marginBottom: '.75rem',\n      height: '.5rem',\n      backgroundColor: 'rgb(224, 229, 238)',\n      width: '60%'\n    }\n  }));\n  var label = props.node.assistiveText || (typeof props.node.label === 'string' ? props.node.label : null);\n  return /*#__PURE__*/React.createElement(\"li\", {\n    id: props.htmlId,\n    role: \"treeitem\",\n    \"aria-level\": props.level,\n    \"aria-expanded\": isExpanded ? 'true' : 'false',\n    \"aria-label\": props.node.nodes && props.node.nodes.length > 0 ? label : null,\n    tabIndex: getTabIndex(props),\n    onKeyDown: function onKeyDown(event) {\n      return handleKeyDown(event, props);\n    },\n    onFocus: function onFocus(event) {\n      return handleFocus(event, props);\n    },\n    onBlur: props.onNodeBlur,\n    ref: function ref(component) {\n      if (props.treeHasFocus && component && isFocused) {\n        component.focus();\n      }\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classNames('slds-tree__item', {\n      'slds-is-selected': isSelected\n    }),\n    onClick: function onClick(event) {\n      handleSelect({\n        event: event,\n        props: props\n      });\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    \"aria-hidden\": true,\n    assistiveText: {\n      icon: 'Expand Tree Branch'\n    },\n    iconCategory: \"utility\",\n    iconName: \"chevronright\",\n    iconSize: \"small\",\n    variant: \"icon\",\n    className: \"slds-m-right_small\",\n    role: \"presentation\",\n    \"aria-controls\": props.htmlId,\n    onClick: function onClick(event) {\n      handleExpand(event, props);\n    },\n    tabIndex: \"-1\"\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"slds-size_1-of-1\",\n    id: \"\".concat(props.htmlId, \"__label\")\n  }, /*#__PURE__*/React.createElement(Highlighter, {\n    search: props.searchTerm,\n    className: \"slds-tree__item-label slds-truncate\"\n  }, props.label))), isLoading ? loader : null, /*#__PURE__*/React.createElement(\"ul\", {\n    className: classNames({\n      'slds-is-expanded': isExpanded,\n      'slds-is-collapsed': !isExpanded\n    }),\n    role: \"group\",\n    \"aria-labelledby\": \"\".concat(props.htmlId, \"__label\")\n  }, isExpanded && !isLoading ? children : null));\n};\n\nRenderBranch.displayName = 'Branch';\nRenderBranch.propTypes = propTypes;\nexport default RenderBranch;","map":{"version":3,"sources":["../../../../.tmp-es/components/tree/private/render-branch.jsx"],"names":["propTypes","htmlId","PropTypes","label","level","node","onExpand","onSelect","searchTerm","treeIndex","flattenedNodes","selectedNodeIndexes","focusedNodeIndex","onNodeBlur","treeHasFocus","parent","object","handleExpand","EventUtil","isFunction","props","event","data","expand","handleSelect","fromFocus","select","findNextNode","nodes","flattenedNode","index","findIndex","id","findPreviousNode","handleKeyDownDown","clearSelectedNodes","handleKeyDownUp","handleKeyDownRight","handleKeyDownLeft","handleKeyDownEnter","handleKeyDown","mapKeyEventCallbacks","callbacks","KEYS","callback","handleFocus","getTabIndex","initialFocus","RenderBranch","isExpanded","isSelected","isFocused","isLoading","loader","display","paddingLeft","marginTop","borderRadius","marginBottom","height","backgroundColor","width","component","classNames","icon"],"mappings":"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","sourcesContent":["/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\n// # Tree Branch Component\n\n// Implements the [Tree design pattern](https://www.lightningdesignsystem.com/components/tree/) in React.\n\n// ## Dependencies\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport findIndex from 'lodash.findindex';\nimport isFunction from 'lodash.isfunction';\nimport classNames from 'classnames';\n\n// Child components\nimport Button from '../../button';\nimport Highlighter from '../../utilities/highlighter';\n\nimport EventUtil from '../../../utilities/event';\nimport KEYS from '../../../utilities/key-code';\nimport mapKeyEventCallbacks from '../../../utilities/key-callbacks';\n\nconst propTypes = {\n\t/**\n\t * HTML `id` of primary element that has `.slds-tree` on it. This component has a wrapping container element outside of `.slds-tree`.\n\t */\n\thtmlId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n\t/**\n\t * The text of the tree item.\n\t */\n\tlabel: PropTypes.oneOfType([PropTypes.node, PropTypes.string]),\n\t/**\n\t * The number of nestings. Determines the ARIA level and style alignment.\n\t */\n\tlevel: PropTypes.number.isRequired,\n\t/**\n\t * The current node that is being rendered.\n\t */\n\tnode: PropTypes.object.isRequired,\n\t/**\n\t * This function triggers when the expand or collapse icon is clicked or due to keyboard navigation.\n\t */\n\tonExpand: PropTypes.func.isRequired,\n\t/**\n\t * Function that will run whenever an item or branch is clicked.\n\t */\n\tonSelect: PropTypes.func,\n\t/**\n\t * Highlights term if found in node label\n\t */\n\tsearchTerm: PropTypes.string,\n\t/**\n\t * Location of node (zero index). First node is `0`. It's first child is `0-0`. This can be used to modify your nodes without searching for the node. This index is only valid if the `nodes` prop is the same as at the time of the event.\n\t */\n\ttreeIndex: PropTypes.string,\n\t/**\n\t * Flattened tree structure.\n\t */\n\tflattenedNodes: PropTypes.arrayOf(PropTypes.object),\n\t/**\n\t * Tree indexes of nodes that are currently selected.\n\t */\n\tselectedNodeIndexes: PropTypes.arrayOf(PropTypes.string),\n\t/**\n\t * Tree index of the node that is currently focused.\n\t */\n\tfocusedNodeIndex: PropTypes.string,\n\t/**\n\t * Callback for when a node is blurred.\n\t */\n\tonNodeBlur: PropTypes.func,\n\t/**\n\t * Sets focus on render.\n\t */\n\ttreeHasFocus: PropTypes.bool,\n\t/**\n\t * This node's parent.\n\t */\n\tparent: PropTypes.object,\n};\n\nconst handleExpand = (event, props) => {\n\tEventUtil.trap(event);\n\tif (isFunction(props.onExpand)) {\n\t\tprops.onExpand({\n\t\t\tevent,\n\t\t\tdata: {\n\t\t\t\tnode: props.node,\n\t\t\t\texpand: !props.node.expanded,\n\t\t\t\ttreeIndex: props.treeIndex,\n\t\t\t},\n\t\t});\n\t}\n};\n\nconst handleSelect = ({ event, props, fromFocus }) => {\n\tEventUtil.trap(event);\n\tif (isFunction(props.onSelect)) {\n\t\tprops.onSelect({\n\t\t\tevent,\n\t\t\tdata: {\n\t\t\t\tnode: props.node,\n\t\t\t\tselect: !props.node.selected,\n\t\t\t\ttreeIndex: props.treeIndex,\n\t\t\t},\n\t\t\tfromFocus,\n\t\t});\n\t}\n};\n\nconst findNextNode = (flattenedNodes, node) => {\n\tconst nodes = flattenedNodes.map((flattenedNode) => flattenedNode.node);\n\tconst index = findIndex(nodes, { id: node.id });\n\treturn flattenedNodes[(index + 1) % flattenedNodes.length];\n};\n\nconst findPreviousNode = (flattenedNodes, node) => {\n\tconst nodes = flattenedNodes.map((flattenedNode) => flattenedNode.node);\n\tlet index = findIndex(nodes, { id: node.id }) - 1;\n\tif (index < 0) {\n\t\tindex += flattenedNodes.length;\n\t}\n\treturn flattenedNodes[index];\n};\n\nconst handleKeyDownDown = (event, props) => {\n\tif (props.focusedNodeIndex === props.treeIndex) {\n\t\t// Select the next visible node\n\t\tconst flattenedNode = findNextNode(props.flattenedNodes, props.node);\n\t\tprops.onSelect({\n\t\t\tevent,\n\t\t\tdata: {\n\t\t\t\tnode: flattenedNode.node,\n\t\t\t\tselect: true,\n\t\t\t\ttreeIndex: flattenedNode.treeIndex,\n\t\t\t},\n\t\t\tclearSelectedNodes: true,\n\t\t});\n\t}\n};\n\nconst handleKeyDownUp = (event, props) => {\n\tif (props.focusedNodeIndex === props.treeIndex) {\n\t\t// Go to the previous visible node\n\t\tconst flattenedNode = findPreviousNode(props.flattenedNodes, props.node);\n\t\tprops.onSelect({\n\t\t\tevent,\n\t\t\tdata: {\n\t\t\t\tnode: flattenedNode.node,\n\t\t\t\tselect: true,\n\t\t\t\ttreeIndex: flattenedNode.treeIndex,\n\t\t\t},\n\t\t\tclearSelectedNodes: true,\n\t\t});\n\t}\n};\n\nconst handleKeyDownRight = (event, props) => {\n\tif (props.node.expanded) {\n\t\tif (props.getNodes(props.node) && props.getNodes(props.node).length > 0) {\n\t\t\thandleKeyDownDown(event, props);\n\t\t}\n\t} else {\n\t\thandleExpand(event, props);\n\t}\n};\n\nconst handleKeyDownLeft = (event, props) => {\n\tif (props.node.expanded) {\n\t\thandleExpand(event, props);\n\t} else {\n\t\tconst nodes = props.flattenedNodes.map(\n\t\t\t(flattenedNode) => flattenedNode.node\n\t\t);\n\t\tconst index = findIndex(nodes, { id: props.parent.id });\n\t\tif (index !== -1) {\n\t\t\tprops.onExpand({\n\t\t\t\tevent,\n\t\t\t\tdata: {\n\t\t\t\t\tnode: props.parent,\n\t\t\t\t\tselect: true,\n\t\t\t\t\texpand: !props.parent.expanded,\n\t\t\t\t\ttreeIndex: props.flattenedNodes[index].treeIndex,\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\t}\n};\n\nconst handleKeyDownEnter = (event, props) => {\n\thandleSelect({ event, props });\n};\n\nconst handleKeyDown = (event, props) => {\n\tmapKeyEventCallbacks(event, {\n\t\tcallbacks: {\n\t\t\t[KEYS.DOWN]: { callback: (evt) => handleKeyDownDown(evt, props) },\n\t\t\t[KEYS.UP]: { callback: (evt) => handleKeyDownUp(evt, props) },\n\t\t\t[KEYS.RIGHT]: { callback: (evt) => handleKeyDownRight(evt, props) },\n\t\t\t[KEYS.LEFT]: { callback: (evt) => handleKeyDownLeft(evt, props) },\n\t\t\t[KEYS.ENTER]: { callback: (evt) => handleKeyDownEnter(evt, props) },\n\t\t},\n\t});\n};\n\nconst handleFocus = (event, props) => {\n\tif (\n\t\t!props.treeHasFocus &&\n\t\t!props.focusedNodeIndex &&\n\t\tevent.target === event.currentTarget\n\t) {\n\t\t// did it happen by mouse?\n\t\thandleSelect({ event, props, fromFocus: true });\n\t}\n};\n\nconst getTabIndex = (props) => {\n\tconst initialFocus =\n\t\tprops.selectedNodeIndexes.length === 0 &&\n\t\tprops.treeIndex === props.flattenedNodes[0].treeIndex;\n\treturn props.treeIndex === props.focusedNodeIndex || initialFocus ? 0 : -1;\n};\n\n// Most of these props come from the nodes array, not from the Tree props\nconst RenderBranch = (children, props) => {\n\tconst isExpanded = props.node.expanded;\n\tconst isSelected = props.node.selected;\n\tconst isFocused = props.treeIndex === props.focusedNodeIndex;\n\tconst isLoading = props.node.loading;\n\n\tconst loader = (\n\t\t<div\n\t\t\tstyle={{\n\t\t\t\tdisplay: 'block',\n\t\t\t\tpaddingLeft: `${1.5 * props.level + 1.5}rem`,\n\t\t\t\tmarginTop: '.5rem',\n\t\t\t}}\n\t\t>\n\t\t\t<div\n\t\t\t\tstyle={{\n\t\t\t\t\tborderRadius: '15rem',\n\t\t\t\t\tdisplay: 'block',\n\t\t\t\t\tmarginBottom: '.75rem',\n\t\t\t\t\theight: '.5rem',\n\t\t\t\t\tbackgroundColor: 'rgb(224, 229, 238)',\n\t\t\t\t\twidth: '40%',\n\t\t\t\t}}\n\t\t\t/>\n\t\t\t<div\n\t\t\t\tstyle={{\n\t\t\t\t\tborderRadius: '15rem',\n\t\t\t\t\tdisplay: 'block',\n\t\t\t\t\tmarginBottom: '.75rem',\n\t\t\t\t\theight: '.5rem',\n\t\t\t\t\tbackgroundColor: 'rgb(224, 229, 238)',\n\t\t\t\t\twidth: '80%',\n\t\t\t\t}}\n\t\t\t/>\n\t\t\t<div\n\t\t\t\tstyle={{\n\t\t\t\t\tborderRadius: '15rem',\n\t\t\t\t\tdisplay: 'block',\n\t\t\t\t\tmarginBottom: '.75rem',\n\t\t\t\t\theight: '.5rem',\n\t\t\t\t\tbackgroundColor: 'rgb(224, 229, 238)',\n\t\t\t\t\twidth: '60%',\n\t\t\t\t}}\n\t\t\t/>\n\t\t</div>\n\t);\n\n\tconst label =\n\t\tprops.node.assistiveText ||\n\t\t(typeof props.node.label === 'string' ? props.node.label : null);\n\treturn (\n\t\t<li\n\t\t\tid={props.htmlId}\n\t\t\trole=\"treeitem\"\n\t\t\taria-level={props.level}\n\t\t\taria-expanded={isExpanded ? 'true' : 'false'}\n\t\t\taria-label={\n\t\t\t\tprops.node.nodes && props.node.nodes.length > 0 ? label : null\n\t\t\t}\n\t\t\ttabIndex={getTabIndex(props)}\n\t\t\tonKeyDown={(event) => handleKeyDown(event, props)}\n\t\t\tonFocus={(event) => handleFocus(event, props)}\n\t\t\tonBlur={props.onNodeBlur}\n\t\t\tref={(component) => {\n\t\t\t\tif (props.treeHasFocus && component && isFocused) {\n\t\t\t\t\tcomponent.focus();\n\t\t\t\t}\n\t\t\t}}\n\t\t>\n\t\t\t{/* eslint-disable jsx-a11y/no-static-element-interactions */}\n\t\t\t<div\n\t\t\t\tclassName={classNames('slds-tree__item', {\n\t\t\t\t\t'slds-is-selected': isSelected,\n\t\t\t\t})}\n\t\t\t\tonClick={(event) => {\n\t\t\t\t\thandleSelect({ event, props });\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{/* eslint-enable jsx-a11y/no-static-element-interactions */}\n\t\t\t\t<Button\n\t\t\t\t\taria-hidden\n\t\t\t\t\tassistiveText={{ icon: 'Expand Tree Branch' }}\n\t\t\t\t\ticonCategory=\"utility\"\n\t\t\t\t\ticonName=\"chevronright\"\n\t\t\t\t\ticonSize=\"small\"\n\t\t\t\t\tvariant=\"icon\"\n\t\t\t\t\tclassName=\"slds-m-right_small\"\n\t\t\t\t\trole=\"presentation\"\n\t\t\t\t\taria-controls={props.htmlId}\n\t\t\t\t\tonClick={(event) => {\n\t\t\t\t\t\thandleExpand(event, props);\n\t\t\t\t\t}}\n\t\t\t\t\ttabIndex=\"-1\"\n\t\t\t\t/>\n\t\t\t\t<span className=\"slds-size_1-of-1\" id={`${props.htmlId}__label`}>\n\t\t\t\t\t<Highlighter\n\t\t\t\t\t\tsearch={props.searchTerm}\n\t\t\t\t\t\tclassName=\"slds-tree__item-label slds-truncate\"\n\t\t\t\t\t>\n\t\t\t\t\t\t{props.label}\n\t\t\t\t\t</Highlighter>\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t\t{isLoading ? loader : null}\n\t\t\t<ul\n\t\t\t\tclassName={classNames({\n\t\t\t\t\t'slds-is-expanded': isExpanded,\n\t\t\t\t\t'slds-is-collapsed': !isExpanded,\n\t\t\t\t})}\n\t\t\t\trole=\"group\"\n\t\t\t\taria-labelledby={`${props.htmlId}__label`}\n\t\t\t>\n\t\t\t\t{isExpanded && !isLoading ? children : null}\n\t\t\t</ul>\n\t\t</li>\n\t);\n};\n\nRenderBranch.displayName = 'Branch';\nRenderBranch.propTypes = propTypes;\n\nexport default RenderBranch;\n"]},"metadata":{},"sourceType":"module"}