{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n// Implements the [Badge design pattern](https://latest-216.lightningdesignsystem.com/components/badges/) in React.\n// ## Dependencies\n// ### React\n\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames'; // ### shortid\n// [npmjs.com/package/shortid](https://www.npmjs.com/package/shortid)\n// shortid is a short, non-sequential, url-friendly, unique id generator\n\nimport shortid from 'shortid'; // ## Constants\n\nimport { BADGE } from '../../utilities/constants';\n/**\n * Badges are labels which hold small amounts of information.\n */\n\nvar Badge = /*#__PURE__*/function (_React$Component) {\n  _inherits(Badge, _React$Component);\n\n  var _super = _createSuper(Badge);\n\n  function Badge(props) {\n    var _this;\n\n    _classCallCheck(this, Badge);\n\n    _this = _super.call(this, props);\n    _this.generatedId = shortid.generate();\n    return _this;\n  }\n  /**\n   * Get the Badge's HTML id. Generate a new one if no ID present.\n   */\n\n\n  _createClass(Badge, [{\n    key: \"getId\",\n    value: function getId() {\n      return this.props.id || this.generatedId;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var icon = this.props.icon && /*#__PURE__*/React.createElement(\"span\", {\n        className: classNames('slds-badge__icon', \"slds-badge__icon_\".concat(this.props.iconAlignment)),\n        style: this.props.style\n      }, this.props.icon);\n      return /*#__PURE__*/React.createElement(\"span\", {\n        id: this.getId(),\n        className: classNames('slds-badge', {\n          'slds-badge_inverse': this.props.color === 'inverse',\n          'slds-badge_lightest': this.props.color === 'light',\n          'slds-theme_success': this.props.color === 'success',\n          'slds-theme_warning': this.props.color === 'warning',\n          'slds-theme_error': this.props.color === 'error'\n        }, this.props.className)\n      }, this.props.iconAlignment === 'left' ? /*#__PURE__*/React.createElement(React.Fragment, null, icon, this.props.content) : /*#__PURE__*/React.createElement(React.Fragment, null, this.props.content, icon));\n    }\n  }]);\n\n  return Badge;\n}(React.Component);\n\nBadge.displayName = BADGE;\nBadge.propTypes = {\n  /**\n   * CSS classes that are applied to the component\n   */\n  className: PropTypes.oneOfType([PropTypes.array, PropTypes.object, PropTypes.string]),\n\n  /**\n   * Id of component, if desired. If not provided an id is automatically generated\n   */\n  id: PropTypes.string,\n\n  /**\n   * Custom styles to be passed to the component\n   */\n  style: PropTypes.object,\n\n  /**\n   * Color variant for the badge component\n   */\n  color: PropTypes.oneOf(['default', 'inverse', 'light', 'success', 'warning', 'error']),\n\n  /**\n   * Icon alignment for the badge component\n   */\n  iconAlignment: PropTypes.oneOf(['left', 'right']),\n\n  /**\n   *  Content to be placed inside the badge component\n   */\n  content: PropTypes.oneOfType([PropTypes.string, PropTypes.node])\n};\nBadge.defaultProps = {\n  iconAlignment: 'left',\n  color: 'default'\n};\nexport default Badge;","map":{"version":3,"sources":["../../../.tmp-es/components/badge/index.jsx"],"names":["Badge","React","Component","shortid","icon","classNames","style","className","PropTypes","id","color","iconAlignment","content"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;AAEA;AAEA;AAEA;;;AACA,OAAA,KAAA,MAAA,OAAA;AACA,OAAA,SAAA,MAAA,YAAA;AACA,OAAA,UAAA,MAAA,YAAA,C,CAEA;AACA;AACA;;AACA,OAAA,OAAA,MAAA,SAAA,C,CAEA;;AACA,SAAA,KAAA,QAAA,2BAAA;AAEA;AACA;AACA;;IACMA,K;;;;;AACL,WAAA,KAAA,CAAA,KAAA,EAAmB;AAAA,QAAA,KAAA;;AAAA,IAAA,eAAA,CAAA,IAAA,EAAA,KAAA,CAAA;;AAClB,IAAA,KAAA,GAAA,MAAA,CAAA,IAAA,CAAA,IAAA,EAAA,KAAA,CAAA;AACA,IAAA,KAAA,CAAA,WAAA,GAAmBG,OAAO,CAA1B,QAAmBA,EAAnB;AAFkB,WAAA,KAAA;AAGlB;AAED;AACD;AACA;;;;;4BACS;AACP,aAAO,KAAA,KAAA,CAAA,EAAA,IAAiB,KAAxB,WAAA;AACA;;;6BAEQ;AACR,UAAMC,IAAI,GAAG,KAAA,KAAA,CAAA,IAAA,IAAA,aACZ,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AACC,QAAA,SAAS,EAAEC,UAAU,CAAA,kBAAA,EAAA,oBAAA,MAAA,CAEA,KAAA,KAAA,CAHtB,aACsB,CAAA,CADtB;AAKC,QAAA,KAAK,EAAE,KAAA,KAAA,CAAWC;AALnB,OAAA,EAOE,KAAA,KAAA,CARH,IACC,CADD;AAYA,aAAA,aACC,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AACC,QAAA,EAAE,EAAE,KADL,KACK,EADL;AAEC,QAAA,SAAS,EAAED,UAAU,CAAA,YAAA,EAEpB;AACC,gCAAsB,KAAA,KAAA,CAAA,KAAA,KADvB,SAAA;AAEC,iCAAuB,KAAA,KAAA,CAAA,KAAA,KAFxB,OAAA;AAGC,gCAAsB,KAAA,KAAA,CAAA,KAAA,KAHvB,SAAA;AAIC,gCAAsB,KAAA,KAAA,CAAA,KAAA,KAJvB,SAAA;AAKC,8BAAoB,KAAA,KAAA,CAAA,KAAA,KAAqB;AAL1C,SAFoB,EASpB,KAAA,KAAA,CAToB,SAAA;AAFtB,OAAA,EAcE,KAAA,KAAA,CAAA,aAAA,KAAA,MAAA,GAAA,aACA,KAAA,CAAA,aAAA,CAAC,KAAD,CAAA,QAAA,EAAA,IAAA,EAAA,IAAA,EAEE,KAAA,KAAA,CAHF,OACA,CADA,GAAA,aAMA,KAAA,CAAA,aAAA,CAAC,KAAD,CAAA,QAAA,EAAA,IAAA,EACE,KAAA,KAAA,CADF,OAAA,EArBH,IAqBG,CApBF,CADD;AA4BA;;;;EAtDkBJ,KAAK,CAACC,S;;AAyD1BF,KAAK,CAALA,WAAAA,GAAAA,KAAAA;AAEAA,KAAK,CAALA,SAAAA,GAAkB;AACjB;AACD;AACA;AACCO,EAAAA,SAAS,EAAEC,SAAS,CAATA,SAAAA,CAAoB,CAC9BA,SAAS,CADqB,KAAA,EAE9BA,SAAS,CAFqB,MAAA,EAG9BA,SAAS,CAPO,MAIc,CAApBA,CAJM;;AAUjB;AACD;AACA;AACCC,EAAAA,EAAE,EAAED,SAAS,CAbI,MAAA;;AAejB;AACD;AACA;AACCF,EAAAA,KAAK,EAAEE,SAAS,CAlBC,MAAA;;AAoBjB;AACD;AACA;AACCE,EAAAA,KAAK,EAAEF,SAAS,CAATA,KAAAA,CAAgB,CAAA,SAAA,EAAA,SAAA,EAAA,OAAA,EAAA,SAAA,EAAA,SAAA,EAvBN,OAuBM,CAAhBA,CAvBU;;AAgCjB;AACD;AACA;AACCG,EAAAA,aAAa,EAAEH,SAAS,CAATA,KAAAA,CAAgB,CAAA,MAAA,EAnCd,OAmCc,CAAhBA,CAnCE;;AAqCjB;AACD;AACA;AACCI,EAAAA,OAAO,EAAEJ,SAAS,CAATA,SAAAA,CAAoB,CAACA,SAAS,CAAV,MAAA,EAAmBA,SAAS,CAAhDA,IAAoB,CAApBA;AAxCQ,CAAlBR;AA2CAA,KAAK,CAALA,YAAAA,GAAqB;AACpBW,EAAAA,aAAa,EADO,MAAA;AAEpBD,EAAAA,KAAK,EAAE;AAFa,CAArBV;AAKA,eAAA,KAAA","sourcesContent":["/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\n// Implements the [Badge design pattern](https://latest-216.lightningdesignsystem.com/components/badges/) in React.\n\n// ## Dependencies\n\n// ### React\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\n// ### shortid\n// [npmjs.com/package/shortid](https://www.npmjs.com/package/shortid)\n// shortid is a short, non-sequential, url-friendly, unique id generator\nimport shortid from 'shortid';\n\n// ## Constants\nimport { BADGE } from '../../utilities/constants';\n\n/**\n * Badges are labels which hold small amounts of information.\n */\nclass Badge extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.generatedId = shortid.generate();\n\t}\n\n\t/**\n\t * Get the Badge's HTML id. Generate a new one if no ID present.\n\t */\n\tgetId() {\n\t\treturn this.props.id || this.generatedId;\n\t}\n\n\trender() {\n\t\tconst icon = this.props.icon && (\n\t\t\t<span\n\t\t\t\tclassName={classNames(\n\t\t\t\t\t'slds-badge__icon',\n\t\t\t\t\t`slds-badge__icon_${this.props.iconAlignment}`\n\t\t\t\t)}\n\t\t\t\tstyle={this.props.style}\n\t\t\t>\n\t\t\t\t{this.props.icon}\n\t\t\t</span>\n\t\t);\n\n\t\treturn (\n\t\t\t<span\n\t\t\t\tid={this.getId()}\n\t\t\t\tclassName={classNames(\n\t\t\t\t\t'slds-badge',\n\t\t\t\t\t{\n\t\t\t\t\t\t'slds-badge_inverse': this.props.color === 'inverse',\n\t\t\t\t\t\t'slds-badge_lightest': this.props.color === 'light',\n\t\t\t\t\t\t'slds-theme_success': this.props.color === 'success',\n\t\t\t\t\t\t'slds-theme_warning': this.props.color === 'warning',\n\t\t\t\t\t\t'slds-theme_error': this.props.color === 'error',\n\t\t\t\t\t},\n\t\t\t\t\tthis.props.className\n\t\t\t\t)}\n\t\t\t>\n\t\t\t\t{this.props.iconAlignment === 'left' ? (\n\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t{icon}\n\t\t\t\t\t\t{this.props.content}\n\t\t\t\t\t</React.Fragment>\n\t\t\t\t) : (\n\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t{this.props.content}\n\t\t\t\t\t\t{icon}\n\t\t\t\t\t</React.Fragment>\n\t\t\t\t)}\n\t\t\t</span>\n\t\t);\n\t}\n}\n\nBadge.displayName = BADGE;\n\nBadge.propTypes = {\n\t/**\n\t * CSS classes that are applied to the component\n\t */\n\tclassName: PropTypes.oneOfType([\n\t\tPropTypes.array,\n\t\tPropTypes.object,\n\t\tPropTypes.string,\n\t]),\n\n\t/**\n\t * Id of component, if desired. If not provided an id is automatically generated\n\t */\n\tid: PropTypes.string,\n\n\t/**\n\t * Custom styles to be passed to the component\n\t */\n\tstyle: PropTypes.object,\n\n\t/**\n\t * Color variant for the badge component\n\t */\n\tcolor: PropTypes.oneOf([\n\t\t'default',\n\t\t'inverse',\n\t\t'light',\n\t\t'success',\n\t\t'warning',\n\t\t'error',\n\t]),\n\n\t/**\n\t * Icon alignment for the badge component\n\t */\n\ticonAlignment: PropTypes.oneOf(['left', 'right']),\n\n\t/**\n\t *  Content to be placed inside the badge component\n\t */\n\tcontent: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n};\n\nBadge.defaultProps = {\n\ticonAlignment: 'left',\n\tcolor: 'default',\n};\n\nexport default Badge;\n"]},"metadata":{},"sourceType":"module"}