{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n// # Filter\n// Implements part of the [Panel design pattern](https://www.lightningdesignsystem.com/components/panels) in React.\n// Based on SLDS v2.2.0-rc.1\n// ## Dependencies\n// ### React\n\n\nimport React from 'react';\nimport PropTypes from 'prop-types'; // ### assign\n\nimport assign from 'lodash.assign'; // ### classNames\n\nimport classNames from 'classnames'; // ### shortid\n// [npmjs.com/package/shortid](https://www.npmjs.com/package/shortid)\n// shortid is a short, non-sequential, url-friendly, unique id generator\n\nimport shortid from 'shortid';\nimport Button from '../button';\nimport Popover from '../popover'; // ## Constants\n\nimport { FILTER } from '../../utilities/constants';\n/**\n * A Filter is a popover with custom trigger. It can be used by [Panel Filtering](/components/panels/). Menus within a Filter Popover will need to not have \"portal mounts\" and be inline.\n */\n\nvar Filter = /*#__PURE__*/function (_React$Component) {\n  _inherits(Filter, _React$Component);\n\n  var _super = _createSuper(Filter);\n\n  function Filter(props) {\n    var _this;\n\n    _classCallCheck(this, Filter);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      popoverIsOpen: _this.props.popover ? _this.props.popover.props.isOpen : false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getId\", function () {\n      return _this.props.id || _this.generatedId;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getCustomPopoverProps\", function (_ref) {\n      var assistiveText = _ref.assistiveText;\n      /*\n       * Generate the popover props based on passed in popover props. Using the default behavior if not provided by passed in popover\n       */\n\n      var popoverBody = /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(\"h4\", {\n        className: \"slds-assistive-text\",\n        id: \"\".concat(_this.getId(), \"-popover-heading\")\n      }, assistiveText.editFilterHeading), _this.props.children, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"slds-m-top_small slds-text-align_right\"\n      }, /*#__PURE__*/React.createElement(Button, {\n        className: \"slds-col_bump-left\",\n        label: \"Done\",\n        onClick: _this.handleChange\n      })));\n      var defaultPopoverProps = {\n        ariaLabelledby: \"\".concat(_this.getId(), \"-popover-heading\"),\n        align: _this.props.align,\n        body: popoverBody,\n        heading: '',\n        id: _this.getId(),\n        isOpen: _this.state.popoverIsOpen,\n        // MAGIC NUMBERS - REMOVE/REDESIGN WHEN DESIGN FOR RIGHT-ALIGNED FILTERS ARE ADDED TO SLDS\n        offset: _this.props.align === 'right' ? '0px -35px' : undefined,\n        onClose: _this.handleClose,\n        onRequestClose: _this.handleClose,\n        position: 'overflowBoundaryElement',\n        triggerClassName: 'slds-grow'\n      };\n      /* Mixin passed popover's props if there is any to override the default popover props */\n\n      var popoverProps = assign(defaultPopoverProps, _this.props.popover ? _this.props.popover.props : {}); // eslint-disable-next-line fp/no-delete\n\n      delete popoverProps.children;\n      return popoverProps;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleFilterClick\", function () {\n      _this.setState({\n        popoverIsOpen: true\n      });\n\n      if (_this.props.onClick) {\n        _this.props.onClick();\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleClose\", function () {\n      _this.setState({\n        popoverIsOpen: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleChange\", function (event) {\n      _this.setState({\n        popoverIsOpen: false\n      });\n\n      if (_this.props.onChange) {\n        _this.props.onChange(event, {\n          id: _this.getId()\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleRemove\", function (event) {\n      if (_this.props.onRemove) {\n        _this.props.onRemove(event, {\n          id: _this.getId()\n        });\n      }\n    });\n\n    _this.generatedId = shortid.generate();\n    return _this;\n  }\n\n  _createClass(Filter, [{\n    key: \"render\",\n    value: function render() {\n      /* Remove at next breaking change */\n      var assistiveText = {\n        editFilter: this.props.assistiveTextEditFilter || // eslint-disable-line react/prop-types\n        this.props.assistiveText.editFilter,\n        editFilterHeading: this.props.assistiveTextEditFilterHeading || // eslint-disable-line react/prop-types\n        this.props.assistiveText.editFilterHeading,\n        removeFilter: this.props.assistiveTextRemoveFilter || // eslint-disable-line react/prop-types\n        this.props.assistiveText.removeFilter || \"Remove Filter: \".concat(this.props.property, \" \").concat(this.props.predicate)\n      };\n      /* TODO: Button wrapper for property and predictate should be transitioned to `Button` component. `Button` needs to take custom children first though. */\n\n      var popoverProps = this.getCustomPopoverProps({\n        assistiveText: assistiveText\n      });\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: classNames('slds-filters__item', 'slds-grid', 'slds-grid_vertical-align-center', {\n          'slds-is-locked': this.props.isLocked,\n          'slds-is-new': this.props.isNew,\n          'slds-has-error': this.props.isError\n        }, this.props.className)\n      }, !this.props.isLocked && (this.props.children || this.props.popover) ? /*#__PURE__*/React.createElement(Popover, _extends({}, popoverProps, {\n        silenceDeprecatedPropertyWarning: true\n      }), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"slds-button_reset slds-grow slds-has-blur-focus\",\n        onClick: this.handleFilterClick,\n        \"aria-describedby\": this.props.isError ? \"\".concat(this.getId(), \"-error\") : undefined,\n        type: \"button\"\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"slds-assistive-text\"\n      }, assistiveText.editFilter), this.props.property ? /*#__PURE__*/React.createElement(\"span\", {\n        className: \"slds-show slds-text-body_small\"\n      }, this.props.property) : null, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"slds-show\"\n      }, this.props.predicate))) : /*#__PURE__*/React.createElement(\"button\", {\n        \"aria-describedby\": this.props.isError ? \"\".concat(this.getId(), \"-error\") : undefined,\n        className: \"slds-button_reset slds-grow slds-has-blur-focus\",\n        disabled: true,\n        type: \"button\"\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"slds-show slds-text-body_small\"\n      }, this.props.property), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"slds-show\"\n      }, this.props.predicate)), // Remove button\n      !this.props.isPermanent && !this.props.isLocked ? /*#__PURE__*/React.createElement(Button, {\n        assistiveText: {\n          icon: assistiveText.removeFilter\n        },\n        hint: true,\n        iconCategory: \"utility\",\n        iconName: \"delete\",\n        iconSize: \"small\",\n        iconVariant: \"bare\",\n        onClick: this.handleRemove,\n        title: assistiveText.removeFilter,\n        variant: \"icon\"\n      }) : null);\n    }\n  }]);\n\n  return Filter;\n}(React.Component);\n\n_defineProperty(Filter, \"displayName\", FILTER);\n\n_defineProperty(Filter, \"propTypes\", {\n  /**\n   * Aligns the popover with the respective side of the trigger. That is `left` will place the `Popover` to the left of the Filter.\n   */\n  align: PropTypes.oneOf(['left', 'right']),\n\n  /**\n   * **Assistive text for accessibility**\n   * * `removeFilter`: Assistive text for removing a filter. The default is `Remove Filter: this.props.property this.props.predicate`.\n   * * `editFilter`: Assistive text for changing a filter.\n   * * `editFilterHeading`: Assistive text for Popover heading.\n   */\n  assistiveText: PropTypes.shape({\n    editFilter: PropTypes.string,\n    editFilterHeading: PropTypes.string,\n    removeFilter: PropTypes.string\n  }),\n\n  /**\n   * Contents of popover. That is the dropdowns and inputs that set the filter criteria.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Custom CSS classes for `slds-filters__item` node. Uses `classNames` [API](https://github.com/JedWatson/classnames).\n   */\n  className: PropTypes.oneOfType([PropTypes.array, PropTypes.object, PropTypes.string]),\n\n  /**\n   * Applies error state styling. Per filter error messages are outside this components.\n   */\n  isError: PropTypes.bool,\n\n  /**\n   * A unique ID is needed in order to support keyboard navigation, ARIA support, and connect the dropdown to the triggering button. An `id` will be generated if none is supplied.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If true, the filter will not display an editing popover when clicked.\n   */\n  isLocked: PropTypes.bool,\n\n  /**\n   * Applies new filter styling.\n   */\n  isNew: PropTypes.bool,\n\n  /**\n   * If true, the filter will not include a remove button.\n   */\n  isPermanent: PropTypes.bool,\n\n  /**\n   * Will be triggered when Done within the Popover is clicked. This is the place to update the filter props displayed. Callback will recieve parameters: `clickEvent, { id }`. An index into your store may be a good setting for `id`, so that it will be passed back here.\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * Will be triggered when \"Remove Filter\" button is clicked. Callback will recieve parameters: `clickEvent, { id }`. An index into your store may be a good setting for `id`, so that it will be passed back here.\n   */\n  onRemove: PropTypes.func,\n\n  /**\n   * Will be triggered when Filter is clicked. This is the place to close/open popover if a custom popover is passed in\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * A `Popover` component. The props from this popover will be merged and override any default props. This also allows a Filter's Popover dialog to be a controlled component. _Tested with Mocha framework._\n   */\n  popover: PropTypes.node,\n\n  /**\n   * The criteria you are filtering for. For instance, if \"Hair Color is PURPLE\" is your filter, \"is PURPLE\" is your filter predicate.\n   */\n  predicate: PropTypes.node,\n\n  /**\n   * The property you are filtering. For instance, if \"Hair Color is PURPLE\" is your filter, \"Hair Color\" is your filter property.\n   */\n  property: PropTypes.node\n});\n\n_defineProperty(Filter, \"defaultProps\", {\n  align: 'left',\n  assistiveText: {\n    editFilter: 'Edit filter:',\n    editFilterHeading: 'Choose filter criteria'\n  },\n  predicate: 'New Filter'\n});\n\nexport default Filter;","map":{"version":3,"sources":["../../../.tmp-es/components/filter/index.jsx"],"names":["Filter","React","Component","FILTER","align","PropTypes","assistiveText","editFilter","editFilterHeading","removeFilter","string","children","className","isError","id","isLocked","isNew","isPermanent","onChange","onRemove","onClick","popover","predicate","property","node","popoverIsOpen","shortid","popoverBody","handleChange","defaultPopoverProps","ariaLabelledby","body","heading","isOpen","offset","onClose","onRequestClose","position","triggerClassName","popoverProps","assign","classNames","icon"],"mappings":"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","sourcesContent":["/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\n// # Filter\n\n// Implements part of the [Panel design pattern](https://www.lightningdesignsystem.com/components/panels) in React.\n// Based on SLDS v2.2.0-rc.1\n\n// ## Dependencies\n\n// ### React\nimport React from 'react';\n\nimport PropTypes from 'prop-types';\n\n// ### assign\nimport assign from 'lodash.assign';\n\n// ### classNames\nimport classNames from 'classnames';\n\n// ### shortid\n// [npmjs.com/package/shortid](https://www.npmjs.com/package/shortid)\n// shortid is a short, non-sequential, url-friendly, unique id generator\nimport shortid from 'shortid';\n\nimport Button from '../button';\nimport Popover from '../popover';\n\n// ## Constants\nimport { FILTER } from '../../utilities/constants';\n\n/**\n * A Filter is a popover with custom trigger. It can be used by [Panel Filtering](/components/panels/). Menus within a Filter Popover will need to not have \"portal mounts\" and be inline.\n */\nclass Filter extends React.Component {\n\tstatic displayName = FILTER;\n\n\tstatic propTypes = {\n\t\t/**\n\t\t * Aligns the popover with the respective side of the trigger. That is `left` will place the `Popover` to the left of the Filter.\n\t\t */\n\t\talign: PropTypes.oneOf(['left', 'right']),\n\t\t/**\n\t\t * **Assistive text for accessibility**\n\t\t * * `removeFilter`: Assistive text for removing a filter. The default is `Remove Filter: this.props.property this.props.predicate`.\n\t\t * * `editFilter`: Assistive text for changing a filter.\n\t\t * * `editFilterHeading`: Assistive text for Popover heading.\n\t\t */\n\t\tassistiveText: PropTypes.shape({\n\t\t\teditFilter: PropTypes.string,\n\t\t\teditFilterHeading: PropTypes.string,\n\t\t\tremoveFilter: PropTypes.string,\n\t\t}),\n\t\t/**\n\t\t * Contents of popover. That is the dropdowns and inputs that set the filter criteria.\n\t\t */\n\t\tchildren: PropTypes.node,\n\t\t/**\n\t\t * Custom CSS classes for `slds-filters__item` node. Uses `classNames` [API](https://github.com/JedWatson/classnames).\n\t\t */\n\t\tclassName: PropTypes.oneOfType([\n\t\t\tPropTypes.array,\n\t\t\tPropTypes.object,\n\t\t\tPropTypes.string,\n\t\t]),\n\t\t/**\n\t\t * Applies error state styling. Per filter error messages are outside this components.\n\t\t */\n\t\tisError: PropTypes.bool,\n\t\t/**\n\t\t * A unique ID is needed in order to support keyboard navigation, ARIA support, and connect the dropdown to the triggering button. An `id` will be generated if none is supplied.\n\t\t */\n\t\tid: PropTypes.string,\n\t\t/**\n\t\t * If true, the filter will not display an editing popover when clicked.\n\t\t */\n\t\tisLocked: PropTypes.bool,\n\t\t/**\n\t\t * Applies new filter styling.\n\t\t */\n\t\tisNew: PropTypes.bool,\n\t\t/**\n\t\t * If true, the filter will not include a remove button.\n\t\t */\n\t\tisPermanent: PropTypes.bool,\n\t\t/**\n\t\t * Will be triggered when Done within the Popover is clicked. This is the place to update the filter props displayed. Callback will recieve parameters: `clickEvent, { id }`. An index into your store may be a good setting for `id`, so that it will be passed back here.\n\t\t */\n\t\tonChange: PropTypes.func,\n\t\t/**\n\t\t * Will be triggered when \"Remove Filter\" button is clicked. Callback will recieve parameters: `clickEvent, { id }`. An index into your store may be a good setting for `id`, so that it will be passed back here.\n\t\t */\n\t\tonRemove: PropTypes.func,\n\t\t/**\n\t\t * Will be triggered when Filter is clicked. This is the place to close/open popover if a custom popover is passed in\n\t\t */\n\t\tonClick: PropTypes.func,\n\t\t/**\n\t\t * A `Popover` component. The props from this popover will be merged and override any default props. This also allows a Filter's Popover dialog to be a controlled component. _Tested with Mocha framework._\n\t\t */\n\t\tpopover: PropTypes.node,\n\t\t/**\n\t\t * The criteria you are filtering for. For instance, if \"Hair Color is PURPLE\" is your filter, \"is PURPLE\" is your filter predicate.\n\t\t */\n\t\tpredicate: PropTypes.node,\n\t\t/**\n\t\t * The property you are filtering. For instance, if \"Hair Color is PURPLE\" is your filter, \"Hair Color\" is your filter property.\n\t\t */\n\t\tproperty: PropTypes.node,\n\t};\n\n\tstatic defaultProps = {\n\t\talign: 'left',\n\t\tassistiveText: {\n\t\t\teditFilter: 'Edit filter:',\n\t\t\teditFilterHeading: 'Choose filter criteria',\n\t\t},\n\t\tpredicate: 'New Filter',\n\t};\n\n\tstate = {\n\t\tpopoverIsOpen: this.props.popover ? this.props.popover.props.isOpen : false,\n\t};\n\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.generatedId = shortid.generate();\n\t}\n\n\tgetId = () => this.props.id || this.generatedId;\n\n\tgetCustomPopoverProps = ({ assistiveText }) => {\n\t\t/*\n\t\t * Generate the popover props based on passed in popover props. Using the default behavior if not provided by passed in popover\n\t\t */\n\t\tconst popoverBody = (\n\t\t\t<div>\n\t\t\t\t<h4\n\t\t\t\t\tclassName=\"slds-assistive-text\"\n\t\t\t\t\tid={`${this.getId()}-popover-heading`}\n\t\t\t\t>\n\t\t\t\t\t{assistiveText.editFilterHeading}\n\t\t\t\t</h4>\n\t\t\t\t{this.props.children}\n\t\t\t\t<div className=\"slds-m-top_small slds-text-align_right\">\n\t\t\t\t\t<Button\n\t\t\t\t\t\tclassName=\"slds-col_bump-left\"\n\t\t\t\t\t\tlabel=\"Done\"\n\t\t\t\t\t\tonClick={this.handleChange}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\n\t\tconst defaultPopoverProps = {\n\t\t\tariaLabelledby: `${this.getId()}-popover-heading`,\n\t\t\talign: this.props.align,\n\t\t\tbody: popoverBody,\n\t\t\theading: '',\n\t\t\tid: this.getId(),\n\t\t\tisOpen: this.state.popoverIsOpen,\n\t\t\t// MAGIC NUMBERS - REMOVE/REDESIGN WHEN DESIGN FOR RIGHT-ALIGNED FILTERS ARE ADDED TO SLDS\n\t\t\toffset: this.props.align === 'right' ? '0px -35px' : undefined,\n\t\t\tonClose: this.handleClose,\n\t\t\tonRequestClose: this.handleClose,\n\t\t\tposition: 'overflowBoundaryElement',\n\t\t\ttriggerClassName: 'slds-grow',\n\t\t};\n\n\t\t/* Mixin passed popover's props if there is any to override the default popover props */\n\t\tconst popoverProps = assign(\n\t\t\tdefaultPopoverProps,\n\t\t\tthis.props.popover ? this.props.popover.props : {}\n\t\t);\n\t\t// eslint-disable-next-line fp/no-delete\n\t\tdelete popoverProps.children;\n\t\treturn popoverProps;\n\t};\n\n\thandleFilterClick = () => {\n\t\tthis.setState({ popoverIsOpen: true });\n\n\t\tif (this.props.onClick) {\n\t\t\tthis.props.onClick();\n\t\t}\n\t};\n\n\thandleClose = () => {\n\t\tthis.setState({ popoverIsOpen: false });\n\t};\n\n\thandleChange = (event) => {\n\t\tthis.setState({ popoverIsOpen: false });\n\n\t\tif (this.props.onChange) {\n\t\t\tthis.props.onChange(event, { id: this.getId() });\n\t\t}\n\t};\n\n\thandleRemove = (event) => {\n\t\tif (this.props.onRemove) {\n\t\t\tthis.props.onRemove(event, { id: this.getId() });\n\t\t}\n\t};\n\n\trender() {\n\t\t/* Remove at next breaking change */\n\t\tconst assistiveText = {\n\t\t\teditFilter:\n\t\t\t\tthis.props.assistiveTextEditFilter || // eslint-disable-line react/prop-types\n\t\t\t\tthis.props.assistiveText.editFilter,\n\t\t\teditFilterHeading:\n\t\t\t\tthis.props.assistiveTextEditFilterHeading || // eslint-disable-line react/prop-types\n\t\t\t\tthis.props.assistiveText.editFilterHeading,\n\t\t\tremoveFilter:\n\t\t\t\tthis.props.assistiveTextRemoveFilter || // eslint-disable-line react/prop-types\n\t\t\t\tthis.props.assistiveText.removeFilter ||\n\t\t\t\t`Remove Filter: ${this.props.property} ${this.props.predicate}`,\n\t\t};\n\n\t\t/* TODO: Button wrapper for property and predictate should be transitioned to `Button` component. `Button` needs to take custom children first though. */\n\t\tconst popoverProps = this.getCustomPopoverProps({ assistiveText });\n\t\treturn (\n\t\t\t<div\n\t\t\t\tclassName={classNames(\n\t\t\t\t\t'slds-filters__item',\n\t\t\t\t\t'slds-grid',\n\t\t\t\t\t'slds-grid_vertical-align-center',\n\t\t\t\t\t{\n\t\t\t\t\t\t'slds-is-locked': this.props.isLocked,\n\t\t\t\t\t\t'slds-is-new': this.props.isNew,\n\t\t\t\t\t\t'slds-has-error': this.props.isError,\n\t\t\t\t\t},\n\t\t\t\t\tthis.props.className\n\t\t\t\t)}\n\t\t\t>\n\t\t\t\t{!this.props.isLocked && (this.props.children || this.props.popover) ? (\n\t\t\t\t\t<Popover {...popoverProps} silenceDeprecatedPropertyWarning>\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tclassName=\"slds-button_reset slds-grow slds-has-blur-focus\"\n\t\t\t\t\t\t\tonClick={this.handleFilterClick}\n\t\t\t\t\t\t\taria-describedby={\n\t\t\t\t\t\t\t\tthis.props.isError ? `${this.getId()}-error` : undefined\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<span className=\"slds-assistive-text\">\n\t\t\t\t\t\t\t\t{assistiveText.editFilter}\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t{this.props.property ? (\n\t\t\t\t\t\t\t\t<span className=\"slds-show slds-text-body_small\">\n\t\t\t\t\t\t\t\t\t{this.props.property}\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t\t<span className=\"slds-show\">{this.props.predicate}</span>\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</Popover>\n\t\t\t\t) : (\n\t\t\t\t\t<button\n\t\t\t\t\t\taria-describedby={\n\t\t\t\t\t\t\tthis.props.isError ? `${this.getId()}-error` : undefined\n\t\t\t\t\t\t}\n\t\t\t\t\t\tclassName=\"slds-button_reset slds-grow slds-has-blur-focus\"\n\t\t\t\t\t\tdisabled\n\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<span className=\"slds-show slds-text-body_small\">\n\t\t\t\t\t\t\t{this.props.property}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<span className=\"slds-show\">{this.props.predicate}</span>\n\t\t\t\t\t</button>\n\t\t\t\t)}\n\t\t\t\t{\n\t\t\t\t\t// Remove button\n\t\t\t\t\t!this.props.isPermanent && !this.props.isLocked ? (\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tassistiveText={{ icon: assistiveText.removeFilter }}\n\t\t\t\t\t\t\thint\n\t\t\t\t\t\t\ticonCategory=\"utility\"\n\t\t\t\t\t\t\ticonName=\"delete\"\n\t\t\t\t\t\t\ticonSize=\"small\"\n\t\t\t\t\t\t\ticonVariant=\"bare\"\n\t\t\t\t\t\t\tonClick={this.handleRemove}\n\t\t\t\t\t\t\ttitle={assistiveText.removeFilter}\n\t\t\t\t\t\t\tvariant=\"icon\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t) : null\n\t\t\t\t}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Filter;\n"]},"metadata":{},"sourceType":"module"}