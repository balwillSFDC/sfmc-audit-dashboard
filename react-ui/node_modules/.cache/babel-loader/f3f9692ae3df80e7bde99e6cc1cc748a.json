{"ast":null,"code":"/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\nimport React from 'react';\nimport PropTypes from 'prop-types'; // ### classNames\n// [github.com/JedWatson/classnames](https://github.com/JedWatson/classnames)\n// This project uses `classnames`, 'a simple javascript utility for conditionally\n// joining classNames together.'\n\nimport classNames from 'classnames'; // ### isFunction\n\nimport isFunction from 'lodash.isfunction';\nimport { VERTICAL_NAVIGATION_ITEM } from '../../../utilities/constants';\n\nvar handleClick = function handleClick(event, props) {\n  if (!props.item.url) {\n    event.preventDefault();\n  }\n\n  if (isFunction(props.onSelect)) {\n    props.onSelect(event, {\n      item: props.item\n    });\n  }\n};\n\nvar Item = function Item(props) {\n  return /*#__PURE__*/React.createElement(\"li\", {\n    className: classNames('slds-nav-vertical__item', {\n      'slds-is-active': props.isSelected\n    })\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    \"data-id\": props.item.id,\n    href: props.item.url || '#',\n    className: \"slds-nav-vertical__action\",\n    \"aria-describedby\": props.categoryId,\n    \"aria-current\": props.isSelected ? true : undefined,\n    onClick: function onClick(event) {\n      handleClick(event, props);\n    }\n  }, props.item.label));\n}; // ### Display Name\n// Always use the canonical component name as the React display name.\n\n\nItem.displayName = VERTICAL_NAVIGATION_ITEM; // ### Prop Types\n\nItem.propTypes = {\n  /**\n   * Item to be rendered.\n   */\n  item: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    label: PropTypes.string.isRequired,\n    url: PropTypes.string\n  }),\n\n  /**\n   * Whether item is selected or not.\n   */\n  isSelected: PropTypes.bool,\n\n  /**\n   * ID of the category this item belongs to.\n   */\n  categoryId: PropTypes.string.isRequired,\n\n  /**\n   * Function that will run whenever an item is selected.\n   */\n  onSelect: PropTypes.func\n};\nItem.defaultProps = {\n  isSelected: false\n};\nexport default Item;","map":{"version":3,"sources":["../../../../.tmp-es/components/vertical-navigation/private/item.jsx"],"names":["handleClick","props","event","isFunction","item","Item","classNames","isSelected","id","PropTypes","label","url","string","categoryId","onSelect","func"],"mappings":"AAAA;;AACA;AAEA,OAAA,KAAA,MAAA,OAAA;AACA,OAAA,SAAA,MAAA,YAAA,C,CAEA;AACA;AACA;AACA;;AACA,OAAA,UAAA,MAAA,YAAA,C,CAEA;;AACA,OAAA,UAAA,MAAA,mBAAA;AAEA,SAAA,wBAAA,QAAA,8BAAA;;AAEA,IAAMA,WAAW,GAAG,SAAdA,WAAc,CAAA,KAAA,EAAA,KAAA,EAAkB;AACrC,MAAI,CAACC,KAAK,CAALA,IAAAA,CAAL,GAAA,EAAqB;AACpBC,IAAAA,KAAK,CAALA,cAAAA;AACA;;AAED,MAAIC,UAAU,CAACF,KAAK,CAApB,QAAc,CAAd,EAAgC;AAC/BA,IAAAA,KAAK,CAALA,QAAAA,CAAAA,KAAAA,EAAsB;AACrBG,MAAAA,IAAI,EAAEH,KAAK,CAACG;AADS,KAAtBH;AAGA;AATF,CAAA;;AAYA,IAAMI,IAAI,GAAG,SAAPA,IAAO,CAAA,KAAA,EAAA;AAAA,SAAA,aACZ,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA;AACC,IAAA,SAAS,EAAEC,UAAU,CAAA,yBAAA,EAA4B;AAChD,wBAAkBL,KAAK,CAACM;AADwB,KAA5B;AADtB,GAAA,EAAA,aAKC,KAAA,CAAA,aAAA,CAAA,GAAA,EAAA;AACC,eAASN,KAAK,CAALA,IAAAA,CADV,EAAA;AAEC,IAAA,IAAI,EAAEA,KAAK,CAALA,IAAAA,CAAAA,GAAAA,IAFP,GAAA;AAGC,IAAA,SAAS,EAHV,2BAAA;AAIC,wBAAkBA,KAAK,CAJxB,UAAA;AAKC,oBAAcA,KAAK,CAALA,UAAAA,GAAAA,IAAAA,GALf,SAAA;AAMC,IAAA,OAAO,EAAE,SAAA,OAAA,CAAA,KAAA,EAAW;AACnBD,MAAAA,WAAW,CAAA,KAAA,EAAXA,KAAW,CAAXA;AACA;AARF,GAAA,EAUEC,KAAK,CAALA,IAAAA,CAhBS,KAMX,CALD,CADY;AAAb,CAAA,C,CAqBA;AACA;;;AACAI,IAAI,CAAJA,WAAAA,GAAAA,wBAAAA,C,CAEA;;AACAA,IAAI,CAAJA,SAAAA,GAAiB;AAChB;AACD;AACA;AACCD,EAAAA,IAAI,EAAE,SAAS,CAAT,KAAA,CAAgB;AACrBI,IAAAA,EAAE,EAAEC,SAAS,CAATA,MAAAA,CADiB,UAAA;AAErBC,IAAAA,KAAK,EAAED,SAAS,CAATA,MAAAA,CAFc,UAAA;AAGrBE,IAAAA,GAAG,EAAEF,SAAS,CAACG;AAHM,GAAhB,CAJU;;AAShB;AACD;AACA;AACCL,EAAAA,UAAU,EAAEE,SAAS,CAZL,IAAA;;AAahB;AACD;AACA;AACCI,EAAAA,UAAU,EAAEJ,SAAS,CAATA,MAAAA,CAhBI,UAAA;;AAiBhB;AACD;AACA;AACCK,EAAAA,QAAQ,EAAEL,SAAS,CAACM;AApBJ,CAAjBV;AAuBAA,IAAI,CAAJA,YAAAA,GAAoB;AACnBE,EAAAA,UAAU,EAAE;AADO,CAApBF;AAIA,eAAA,IAAA","sourcesContent":["/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\n// ### classNames\n// [github.com/JedWatson/classnames](https://github.com/JedWatson/classnames)\n// This project uses `classnames`, 'a simple javascript utility for conditionally\n// joining classNames together.'\nimport classNames from 'classnames';\n\n// ### isFunction\nimport isFunction from 'lodash.isfunction';\n\nimport { VERTICAL_NAVIGATION_ITEM } from '../../../utilities/constants';\n\nconst handleClick = (event, props) => {\n\tif (!props.item.url) {\n\t\tevent.preventDefault();\n\t}\n\n\tif (isFunction(props.onSelect)) {\n\t\tprops.onSelect(event, {\n\t\t\titem: props.item,\n\t\t});\n\t}\n};\n\nconst Item = (props) => (\n\t<li\n\t\tclassName={classNames('slds-nav-vertical__item', {\n\t\t\t'slds-is-active': props.isSelected,\n\t\t})}\n\t>\n\t\t<a\n\t\t\tdata-id={props.item.id}\n\t\t\thref={props.item.url || '#'}\n\t\t\tclassName=\"slds-nav-vertical__action\"\n\t\t\taria-describedby={props.categoryId}\n\t\t\taria-current={props.isSelected ? true : undefined}\n\t\t\tonClick={(event) => {\n\t\t\t\thandleClick(event, props);\n\t\t\t}}\n\t\t>\n\t\t\t{props.item.label}\n\t\t</a>\n\t</li>\n);\n\n// ### Display Name\n// Always use the canonical component name as the React display name.\nItem.displayName = VERTICAL_NAVIGATION_ITEM;\n\n// ### Prop Types\nItem.propTypes = {\n\t/**\n\t * Item to be rendered.\n\t */\n\titem: PropTypes.shape({\n\t\tid: PropTypes.string.isRequired,\n\t\tlabel: PropTypes.string.isRequired,\n\t\turl: PropTypes.string,\n\t}),\n\t/**\n\t * Whether item is selected or not.\n\t */\n\tisSelected: PropTypes.bool,\n\t/**\n\t * ID of the category this item belongs to.\n\t */\n\tcategoryId: PropTypes.string.isRequired,\n\t/**\n\t * Function that will run whenever an item is selected.\n\t */\n\tonSelect: PropTypes.func,\n};\n\nItem.defaultProps = {\n\tisSelected: false,\n};\n\nexport default Item;\n"]},"metadata":{},"sourceType":"module"}