{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n// # Tooltip\n\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames'; // ### shortid\n// [npmjs.com/package/shortid](https://www.npmjs.com/package/shortid)\n// shortid is a short, non-sequential, url-friendly, unique id generator\n\nimport shortid from 'shortid';\nimport EventUtil from '../../utilities/event';\nimport { POPOVER_TOOLTIP } from '../../utilities/constants';\nimport Dialog from '../utilities/dialog';\nimport Icon from '../icon'; // eslint-disable-next-line import/no-cycle\n\nimport Button from '../button'; // This component's `checkProps` which issues warnings to developers about properties when in development mode (similar to React's built in development tools)\n\nimport checkProps from './check-props';\nimport componentDoc from './component.json';\nimport { IconSettingsContext } from '../icon-settings'; // ### Display Name\n// Always use the canonical component name as the React display name.\n\nvar displayName = POPOVER_TOOLTIP;\nvar propTypes = {\n  /**\n   * Alignment of the Tooltip relative to the element that triggers it.\n   */\n  align: PropTypes.oneOf(['top', 'top left', 'top right', 'right', 'right top', 'right bottom', 'bottom', 'bottom left', 'bottom right', 'left', 'left top', 'left bottom']).isRequired,\n\n  /**\n   * **Assistive text for accessibility**\n   * This object is merged with the default props object on every render.\n   * * `tooltipTipLearnMoreIcon`: This text is inside the info icon within the tooltip content and exists to \"complete the sentence\" for assistive tech users.\n   * * `triggerLearnMoreIcon`: This text is inside the info icon that triggers the tooltip in order to have text within the link.\n   */\n  assistiveText: PropTypes.shape({\n    tooltipTipLearnMoreIcon: PropTypes.string,\n    triggerLearnMoreIcon: PropTypes.string\n  }),\n\n  /**\n   * Pass the one element that triggers the Tooltip as a child. It must be an element with `tabIndex` or an element that already has a `tabIndex` set such as an anchor or a button, so that keyboard users can tab to it.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Content inside Tooltip.\n   */\n  content: PropTypes.node.isRequired,\n\n  /**\n   * CSS classes to be added to the popover dialog. That is the element with `.slds-popover` on it.\n   */\n  dialogClassName: PropTypes.oneOfType([PropTypes.array, PropTypes.object, PropTypes.string]),\n\n  /**\n   * Enabling this hides the default nubbin, replacing it with one attached directly to the tooltip trigger. Note: `hasStaticAlignment` should be set to `true` if using this feature as auto-flipping anchored nubbins are not currently supported.\n   */\n  hasAnchoredNubbin: PropTypes.bool,\n\n  /**\n   * By default, dialogs will flip their alignment (such as bottom to top) if they extend beyond a boundary element such as a scrolling parent or a window/viewpoint. `hasStaticAlignment` disables this behavior and allows this component to extend beyond boundary elements. _Not tested._\n   */\n  hasStaticAlignment: PropTypes.bool,\n\n  /**\n   * Delay on Tooltip closing in milliseconds. Defaults to 50\n   */\n  hoverCloseDelay: PropTypes.number,\n\n  /**\n   * Delay on Tooltip opening in milliseconds. Defaults to 0\n   */\n  hoverOpenDelay: PropTypes.number,\n\n  /**\n   * A unique ID is needed in order to support keyboard navigation, ARIA support, and connect the popover to the triggering element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * **Text labels for internationalization**\n   * This object is merged with the default props object on every render.\n   * * `learnMoreAfter`: This label appears in the tooltip after the info icon.\n   * * `learnMoreBefore`: This label appears in the tooltip before the info icon.\n   */\n  labels: PropTypes.shape({\n    learnMoreAfter: PropTypes.string,\n    learnMoreBefore: PropTypes.string\n  }),\n\n  /**\n   * Forces tooltip to be open. A value of `false` will disable any interaction with the tooltip.\n   */\n  isOpen: PropTypes.bool,\n\n  /**\n   * Callback that returns an element or React `ref` to align the Tooltip with.\n   */\n  onRequestTargetElement: PropTypes.func,\n\n  /**\n   * CSS classes to be added to tag with `slds-tooltip-trigger`.\n   */\n  triggerClassName: PropTypes.oneOfType([PropTypes.array, PropTypes.object, PropTypes.string]),\n\n  /**\n   * Please select one of the following:\n   * * `absolute` - (default) The dialog will use `position: absolute` and style attributes to position itself. This allows inverted placement or flipping of the dialog.\n   * * `overflowBoundaryElement` - The dialog will overflow scrolling parents. Use on elements that are aligned to the left or right of their target and don't care about the target being within a scrolling parent. Typically this is a popover or tooltip. Dropdown menus can usually open up and down if no room exists. In order to achieve this a portal element will be created and attached to `body`. This element will render into that detached render tree.\n   * * `relative` - No styling or portals will be used. Menus will be positioned relative to their triggers. This is a great choice for HTML snapshot testing.\n   */\n  position: PropTypes.oneOf(['absolute', 'overflowBoundaryElement', 'relative']),\n\n  /**\n   * Custom styles to be added to wrapping triggering `div`.\n   */\n  triggerStyle: PropTypes.object,\n\n  /**\n   * Determines the theme of tooltip: for informative purpose (blue background) or warning purpose (red background). This used to be `variant`.\n   */\n  theme: PropTypes.oneOf(['info', 'error']),\n\n  /**\n   * Determines the type of the tooltip.\n   */\n  variant: PropTypes.oneOf(['base', 'learnMore', 'list-item'])\n};\nvar defaultProps = {\n  assistiveText: {\n    tooltipTipLearnMoreIcon: 'this link',\n    triggerLearnMoreIcon: 'Help'\n  },\n  align: 'top',\n  // eslint-disable-next-line react/jsx-curly-brace-presence\n  content: /*#__PURE__*/React.createElement(\"span\", null, 'Tooltip'),\n  labels: {\n    learnMoreAfter: 'to learn more.',\n    learnMoreBefore: 'Click'\n  },\n  hoverCloseDelay: 50,\n  hoverOpenDelay: 0,\n  position: 'absolute',\n  theme: 'info',\n  variant: 'base'\n};\n/**\n * The PopoverTooltip component is variant of the Lightning Design System Popover component. This component wraps an element that triggers it to open. It must be a focusable child element (either a button or an anchor), so that keyboard users can navigate to it.\n */\n\nvar Tooltip = /*#__PURE__*/function (_React$Component) {\n  _inherits(Tooltip, _React$Component);\n\n  var _super = _createSuper(Tooltip);\n\n  function Tooltip(props) {\n    var _this;\n\n    _classCallCheck(this, Tooltip);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"handleCancel\", function () {\n      clearTimeout(_this.tooltipTimeout);\n\n      _this.setState({\n        isOpen: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleMouseEnter\", function () {\n      clearTimeout(_this.tooltipTimeout);\n      _this.tooltipTimeout = setTimeout(function () {\n        if (!_this.isUnmounting) {\n          _this.setState({\n            isOpen: true\n          });\n        }\n      }, _this.props.hoverOpenDelay);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleMouseLeave\", function () {\n      clearTimeout(_this.tooltipTimeout);\n      _this.tooltipTimeout = setTimeout(function () {\n        if (!_this.isUnmounting) {\n          _this.setState({\n            isOpen: false\n          });\n        }\n      }, _this.props.hoverCloseDelay);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"saveTriggerRef\", function (component) {\n      _this.trigger = component; // yes, this is a re-render triggered by a render.\n      // Dialog/Popper.js cannot place the popover until\n      // the trigger/target DOM node is mounted. This\n      // way `findDOMNode` is not called and parent\n      // DOM nodes are not queried.\n\n      if (!_this.state.triggerRendered) {\n        _this.setState({\n          triggerRendered: true\n        });\n      }\n    });\n\n    _this.state = {\n      isOpen: false\n    };\n    _this.tooltipTimeout = {}; // `checkProps` issues warnings to developers about properties (similar to React's built in development tools)\n\n    checkProps(POPOVER_TOOLTIP, props, componentDoc);\n    _this.generatedId = shortid.generate();\n    return _this;\n  }\n\n  _createClass(Tooltip, [{\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.isUnmounting = true;\n    }\n  }, {\n    key: \"getAnchoredNubbinStyles\",\n    value: function getAnchoredNubbinStyles() {\n      if (this.props.hasAnchoredNubbin) {\n        var alignment = this.props.align.split(' ')[0];\n        var nubbinContainerStyles = {\n          height: '0',\n          position: 'relative',\n          width: '0'\n        };\n        var nubbinStyles = {\n          backgroundColor: '#16325c',\n          content: '',\n          height: '1rem',\n          position: 'absolute',\n          transform: 'rotate(45deg)',\n          width: '1rem'\n        };\n        var triggerDimensions = {\n          height: this.trigger ? this.trigger.getBoundingClientRect().height : 0,\n          width: this.trigger ? this.trigger.getBoundingClientRect().width : 0\n        };\n\n        switch (alignment) {\n          case 'bottom':\n            {\n              nubbinContainerStyles.left = \"\".concat(triggerDimensions.width / 2, \"px\");\n              nubbinContainerStyles.top = \"\".concat(triggerDimensions.height, \"px\");\n              nubbinStyles.left = '-8px';\n              nubbinStyles.top = '3px';\n              break;\n            }\n\n          case 'left':\n            {\n              nubbinContainerStyles.left = '0';\n              nubbinContainerStyles.top = \"\".concat(triggerDimensions.height / 2, \"px\");\n              nubbinStyles.left = '-19px';\n              nubbinStyles.top = '-9px';\n              break;\n            }\n\n          case 'right':\n            {\n              nubbinContainerStyles.left = \"\".concat(triggerDimensions.width, \"px\");\n              nubbinContainerStyles.top = \"\".concat(triggerDimensions.height / 2, \"px\");\n              nubbinStyles.left = '3px';\n              nubbinStyles.top = '-9px';\n              break;\n            }\n\n          default:\n            {\n              nubbinContainerStyles.left = \"\".concat(triggerDimensions.width / 2, \"px\");\n              nubbinContainerStyles.top = '0';\n              nubbinStyles.left = '-8px';\n              nubbinStyles.top = '-19px';\n            }\n        }\n\n        return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"style\", null, \"#\".concat(this.getId(), \":after, #\").concat(this.getId(), \":before {\\n\\tdisplay: none;\\n}\")), this.getIsOpen() ? /*#__PURE__*/React.createElement(\"div\", {\n          style: nubbinContainerStyles\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          style: nubbinStyles\n        })) : null);\n      }\n\n      return null;\n    }\n  }, {\n    key: \"getContent\",\n    value: function getContent() {\n      var _this2 = this;\n\n      var children;\n      var noChildrenProvided = React.Children.count(this.props.children) === 0;\n\n      if (noChildrenProvided && this.props.onClickTrigger) {\n        children = [/*#__PURE__*/React.createElement(\"a\", {\n          href: \"#\",\n          onClick: EventUtil.trappedHandler(this.props.onClickTrigger)\n        }, /*#__PURE__*/React.createElement(Icon, {\n          category: \"utility\",\n          name: \"info\",\n          assistiveText: {\n            label: this.props.assistiveText.triggerLearnMoreIcon\n          },\n          size: \"x-small\"\n        }))];\n      } else if (noChildrenProvided) {\n        children = [/*#__PURE__*/React.createElement(Button, {\n          \"aria-disabled\": true,\n          assistiveText: {\n            icon: this.props.assistiveText.triggerLearnMoreIcon\n          },\n          iconCategory: \"utility\",\n          iconName: \"info\",\n          variant: \"icon\"\n        })];\n      } else {\n        // eslint-disable-next-line prefer-destructuring\n        children = this.props.children;\n      }\n\n      return React.Children.map(children, function (child, i) {\n        return /*#__PURE__*/React.cloneElement(child, {\n          key: i,\n          // eslint-disable-line react/no-array-index-key\n          'aria-describedby': _this2.getIsOpen() ? _this2.getId() : undefined,\n          onBlur: _this2.handleMouseLeave,\n          onFocus: _this2.handleMouseEnter,\n          onMouseEnter: _this2.handleMouseEnter,\n          onMouseLeave: _this2.handleMouseLeave\n        });\n      });\n    }\n  }, {\n    key: \"getId\",\n    value: function getId() {\n      return this.props.id || this.generatedId;\n    }\n  }, {\n    key: \"getIsOpen\",\n    value: function getIsOpen() {\n      return this.props.isOpen === undefined ? this.state.isOpen : this.props.isOpen;\n    }\n  }, {\n    key: \"getTooltip\",\n    value: function getTooltip() {\n      var _this3 = this;\n\n      var isOpen = this.getIsOpen();\n      var align = this.props.align; // REMOVE AT NEXT BREAKING CHANGE (v1.0 or v0.9)\n\n      var deprecatedWay = this.props.variant === 'error';\n      return isOpen ? /*#__PURE__*/React.createElement(Dialog, {\n        closeOnTabKey: true,\n        hasNubbin: true,\n        contentsClassName: classNames('slds-popover', 'slds-popover_tooltip', {\n          'slds-theme_error': this.props.theme === 'error' || deprecatedWay\n        }, this.props.dialogClassName),\n        align: align,\n        context: this.context,\n        hasStaticAlignment: this.props.hasStaticAlignment,\n        onClose: this.handleCancel,\n        onRequestTargetElement: function onRequestTargetElement() {\n          return _this3.getTooltipTarget();\n        },\n        position: this.props.position,\n        variant: \"tooltip\",\n        containerProps: {\n          id: this.getId()\n        }\n      }, this.getTooltipContent()) : /*#__PURE__*/React.createElement(\"span\", null);\n    }\n  }, {\n    key: \"getTooltipContent\",\n    value: function getTooltipContent() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"slds-popover__body\"\n      }, this.props.content, this.props.variant === 'learnMore' && this.props.onClickTrigger ? /*#__PURE__*/React.createElement(\"div\", {\n        className: \"slds-m-top_x-small\",\n        \"aria-hidden\": \"true\"\n      }, this.props.labels.learnMoreBefore, ' ', /*#__PURE__*/React.createElement(Icon, {\n        assistiveText: {\n          label: this.props.assistiveText.tooltipTipLearnMoreIcon\n        },\n        category: \"utility\",\n        inverse: true,\n        name: \"info\",\n        size: \"x-small\"\n      }), ' ', this.props.labels.learnMoreAfter, ' ') : null);\n    }\n  }, {\n    key: \"getTooltipTarget\",\n    value: function getTooltipTarget() {\n      if (this.props.onRequestTargetElement) {\n        return this.props.onRequestTargetElement();\n      } // for backwards compatibility\n\n\n      if (this.props.target) {\n        return this.props.target;\n      }\n\n      return this.trigger;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var containerStyles = _objectSpread({\n        display: 'inline-block',\n        lineHeight: '1'\n      }, this.props.triggerStyle);\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: classNames('slds-tooltip-trigger', this.props.triggerClassName),\n        style: containerStyles,\n        ref: this.saveTriggerRef\n      }, this.getAnchoredNubbinStyles(), this.getContent(), this.getTooltip());\n    }\n  }]);\n\n  return Tooltip;\n}(React.Component);\n\nTooltip.contextType = IconSettingsContext;\nTooltip.displayName = displayName;\nTooltip.propTypes = propTypes;\nTooltip.defaultProps = defaultProps;\nexport default Tooltip;","map":{"version":3,"sources":["../../../.tmp-es/components/tooltip/index.jsx"],"names":["displayName","propTypes","align","PropTypes","assistiveText","tooltipTipLearnMoreIcon","triggerLearnMoreIcon","string","children","content","dialogClassName","hasAnchoredNubbin","hasStaticAlignment","hoverCloseDelay","hoverOpenDelay","id","labels","learnMoreAfter","learnMoreBefore","isOpen","onRequestTargetElement","triggerClassName","position","triggerStyle","theme","variant","defaultProps","Tooltip","React","Component","checkProps","shortid","alignment","nubbinContainerStyles","height","width","nubbinStyles","backgroundColor","transform","triggerDimensions","noChildrenProvided","EventUtil","label","icon","key","onBlur","onFocus","onMouseEnter","onMouseLeave","handleMouseLeave","deprecatedWay","classNames","clearTimeout","setTimeout","triggerRendered","containerStyles","display","lineHeight","saveTriggerRef"],"mappings":"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","sourcesContent":["/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\n// # Tooltip\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport classNames from 'classnames';\n\n// ### shortid\n// [npmjs.com/package/shortid](https://www.npmjs.com/package/shortid)\n// shortid is a short, non-sequential, url-friendly, unique id generator\nimport shortid from 'shortid';\n\nimport EventUtil from '../../utilities/event';\nimport { POPOVER_TOOLTIP } from '../../utilities/constants';\n\nimport Dialog from '../utilities/dialog';\nimport Icon from '../icon';\n// eslint-disable-next-line import/no-cycle\nimport Button from '../button';\n\n// This component's `checkProps` which issues warnings to developers about properties when in development mode (similar to React's built in development tools)\nimport checkProps from './check-props';\nimport componentDoc from './component.json';\nimport { IconSettingsContext } from '../icon-settings';\n\n// ### Display Name\n// Always use the canonical component name as the React display name.\nconst displayName = POPOVER_TOOLTIP;\n\nconst propTypes = {\n\t/**\n\t * Alignment of the Tooltip relative to the element that triggers it.\n\t */\n\talign: PropTypes.oneOf([\n\t\t'top',\n\t\t'top left',\n\t\t'top right',\n\t\t'right',\n\t\t'right top',\n\t\t'right bottom',\n\t\t'bottom',\n\t\t'bottom left',\n\t\t'bottom right',\n\t\t'left',\n\t\t'left top',\n\t\t'left bottom',\n\t]).isRequired,\n\t/**\n\t * **Assistive text for accessibility**\n\t * This object is merged with the default props object on every render.\n\t * * `tooltipTipLearnMoreIcon`: This text is inside the info icon within the tooltip content and exists to \"complete the sentence\" for assistive tech users.\n\t * * `triggerLearnMoreIcon`: This text is inside the info icon that triggers the tooltip in order to have text within the link.\n\t */\n\tassistiveText: PropTypes.shape({\n\t\ttooltipTipLearnMoreIcon: PropTypes.string,\n\t\ttriggerLearnMoreIcon: PropTypes.string,\n\t}),\n\t/**\n\t * Pass the one element that triggers the Tooltip as a child. It must be an element with `tabIndex` or an element that already has a `tabIndex` set such as an anchor or a button, so that keyboard users can tab to it.\n\t */\n\tchildren: PropTypes.node,\n\t/**\n\t * Content inside Tooltip.\n\t */\n\tcontent: PropTypes.node.isRequired,\n\t/**\n\t * CSS classes to be added to the popover dialog. That is the element with `.slds-popover` on it.\n\t */\n\tdialogClassName: PropTypes.oneOfType([\n\t\tPropTypes.array,\n\t\tPropTypes.object,\n\t\tPropTypes.string,\n\t]),\n\t/**\n\t * Enabling this hides the default nubbin, replacing it with one attached directly to the tooltip trigger. Note: `hasStaticAlignment` should be set to `true` if using this feature as auto-flipping anchored nubbins are not currently supported.\n\t */\n\thasAnchoredNubbin: PropTypes.bool,\n\t/**\n\t * By default, dialogs will flip their alignment (such as bottom to top) if they extend beyond a boundary element such as a scrolling parent or a window/viewpoint. `hasStaticAlignment` disables this behavior and allows this component to extend beyond boundary elements. _Not tested._\n\t */\n\thasStaticAlignment: PropTypes.bool,\n\t/**\n\t * Delay on Tooltip closing in milliseconds. Defaults to 50\n\t */\n\thoverCloseDelay: PropTypes.number,\n\t/**\n\t * Delay on Tooltip opening in milliseconds. Defaults to 0\n\t */\n\thoverOpenDelay: PropTypes.number,\n\t/**\n\t * A unique ID is needed in order to support keyboard navigation, ARIA support, and connect the popover to the triggering element.\n\t */\n\tid: PropTypes.string,\n\t/**\n\t * **Text labels for internationalization**\n\t * This object is merged with the default props object on every render.\n\t * * `learnMoreAfter`: This label appears in the tooltip after the info icon.\n\t * * `learnMoreBefore`: This label appears in the tooltip before the info icon.\n\t */\n\tlabels: PropTypes.shape({\n\t\tlearnMoreAfter: PropTypes.string,\n\t\tlearnMoreBefore: PropTypes.string,\n\t}),\n\t/**\n\t * Forces tooltip to be open. A value of `false` will disable any interaction with the tooltip.\n\t */\n\tisOpen: PropTypes.bool,\n\t/**\n\t * Callback that returns an element or React `ref` to align the Tooltip with.\n\t */\n\tonRequestTargetElement: PropTypes.func,\n\t/**\n\t * CSS classes to be added to tag with `slds-tooltip-trigger`.\n\t */\n\ttriggerClassName: PropTypes.oneOfType([\n\t\tPropTypes.array,\n\t\tPropTypes.object,\n\t\tPropTypes.string,\n\t]),\n\t/**\n\t * Please select one of the following:\n\t * * `absolute` - (default) The dialog will use `position: absolute` and style attributes to position itself. This allows inverted placement or flipping of the dialog.\n\t * * `overflowBoundaryElement` - The dialog will overflow scrolling parents. Use on elements that are aligned to the left or right of their target and don't care about the target being within a scrolling parent. Typically this is a popover or tooltip. Dropdown menus can usually open up and down if no room exists. In order to achieve this a portal element will be created and attached to `body`. This element will render into that detached render tree.\n\t * * `relative` - No styling or portals will be used. Menus will be positioned relative to their triggers. This is a great choice for HTML snapshot testing.\n\t */\n\tposition: PropTypes.oneOf([\n\t\t'absolute',\n\t\t'overflowBoundaryElement',\n\t\t'relative',\n\t]),\n\t/**\n\t * Custom styles to be added to wrapping triggering `div`.\n\t */\n\ttriggerStyle: PropTypes.object,\n\t/**\n\t * Determines the theme of tooltip: for informative purpose (blue background) or warning purpose (red background). This used to be `variant`.\n\t */\n\ttheme: PropTypes.oneOf(['info', 'error']),\n\t/**\n\t * Determines the type of the tooltip.\n\t */\n\tvariant: PropTypes.oneOf(['base', 'learnMore', 'list-item']),\n};\n\nconst defaultProps = {\n\tassistiveText: {\n\t\ttooltipTipLearnMoreIcon: 'this link',\n\t\ttriggerLearnMoreIcon: 'Help',\n\t},\n\talign: 'top',\n\t// eslint-disable-next-line react/jsx-curly-brace-presence\n\tcontent: <span>{'Tooltip'}</span>,\n\tlabels: {\n\t\tlearnMoreAfter: 'to learn more.',\n\t\tlearnMoreBefore: 'Click',\n\t},\n\thoverCloseDelay: 50,\n\thoverOpenDelay: 0,\n\tposition: 'absolute',\n\ttheme: 'info',\n\tvariant: 'base',\n};\n\n/**\n * The PopoverTooltip component is variant of the Lightning Design System Popover component. This component wraps an element that triggers it to open. It must be a focusable child element (either a button or an anchor), so that keyboard users can navigate to it.\n */\nclass Tooltip extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tisOpen: false,\n\t\t};\n\n\t\tthis.tooltipTimeout = {};\n\n\t\t// `checkProps` issues warnings to developers about properties (similar to React's built in development tools)\n\t\tcheckProps(POPOVER_TOOLTIP, props, componentDoc);\n\n\t\tthis.generatedId = shortid.generate();\n\t}\n\n\tcomponentWillUnmount() {\n\t\tthis.isUnmounting = true;\n\t}\n\n\tgetAnchoredNubbinStyles() {\n\t\tif (this.props.hasAnchoredNubbin) {\n\t\t\tconst alignment = this.props.align.split(' ')[0];\n\t\t\tconst nubbinContainerStyles = {\n\t\t\t\theight: '0',\n\t\t\t\tposition: 'relative',\n\t\t\t\twidth: '0',\n\t\t\t};\n\t\t\tconst nubbinStyles = {\n\t\t\t\tbackgroundColor: '#16325c',\n\t\t\t\tcontent: '',\n\t\t\t\theight: '1rem',\n\t\t\t\tposition: 'absolute',\n\t\t\t\ttransform: 'rotate(45deg)',\n\t\t\t\twidth: '1rem',\n\t\t\t};\n\t\t\tconst triggerDimensions = {\n\t\t\t\theight: this.trigger ? this.trigger.getBoundingClientRect().height : 0,\n\t\t\t\twidth: this.trigger ? this.trigger.getBoundingClientRect().width : 0,\n\t\t\t};\n\n\t\t\tswitch (alignment) {\n\t\t\t\tcase 'bottom': {\n\t\t\t\t\tnubbinContainerStyles.left = `${triggerDimensions.width / 2}px`;\n\t\t\t\t\tnubbinContainerStyles.top = `${triggerDimensions.height}px`;\n\t\t\t\t\tnubbinStyles.left = '-8px';\n\t\t\t\t\tnubbinStyles.top = '3px';\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase 'left': {\n\t\t\t\t\tnubbinContainerStyles.left = '0';\n\t\t\t\t\tnubbinContainerStyles.top = `${triggerDimensions.height / 2}px`;\n\t\t\t\t\tnubbinStyles.left = '-19px';\n\t\t\t\t\tnubbinStyles.top = '-9px';\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase 'right': {\n\t\t\t\t\tnubbinContainerStyles.left = `${triggerDimensions.width}px`;\n\t\t\t\t\tnubbinContainerStyles.top = `${triggerDimensions.height / 2}px`;\n\t\t\t\t\tnubbinStyles.left = '3px';\n\t\t\t\t\tnubbinStyles.top = '-9px';\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdefault: {\n\t\t\t\t\tnubbinContainerStyles.left = `${triggerDimensions.width / 2}px`;\n\t\t\t\t\tnubbinContainerStyles.top = '0';\n\t\t\t\t\tnubbinStyles.left = '-8px';\n\t\t\t\t\tnubbinStyles.top = '-19px';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn (\n\t\t\t\t<React.Fragment>\n\t\t\t\t\t<style>{`#${this.getId()}:after, #${this.getId()}:before {\n\tdisplay: none;\n}`}</style>\n\t\t\t\t\t{this.getIsOpen() ? (\n\t\t\t\t\t\t<div style={nubbinContainerStyles}>\n\t\t\t\t\t\t\t<div style={nubbinStyles} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t) : null}\n\t\t\t\t</React.Fragment>\n\t\t\t);\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tgetContent() {\n\t\tlet children;\n\t\tconst noChildrenProvided = React.Children.count(this.props.children) === 0;\n\n\t\tif (noChildrenProvided && this.props.onClickTrigger) {\n\t\t\tchildren = [\n\t\t\t\t<a\n\t\t\t\t\thref=\"#\"\n\t\t\t\t\tonClick={EventUtil.trappedHandler(this.props.onClickTrigger)}\n\t\t\t\t>\n\t\t\t\t\t<Icon\n\t\t\t\t\t\tcategory=\"utility\"\n\t\t\t\t\t\tname=\"info\"\n\t\t\t\t\t\tassistiveText={{\n\t\t\t\t\t\t\tlabel: this.props.assistiveText.triggerLearnMoreIcon,\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tsize=\"x-small\"\n\t\t\t\t\t/>\n\t\t\t\t</a>,\n\t\t\t];\n\t\t} else if (noChildrenProvided) {\n\t\t\tchildren = [\n\t\t\t\t<Button\n\t\t\t\t\taria-disabled\n\t\t\t\t\tassistiveText={{\n\t\t\t\t\t\ticon: this.props.assistiveText.triggerLearnMoreIcon,\n\t\t\t\t\t}}\n\t\t\t\t\ticonCategory=\"utility\"\n\t\t\t\t\ticonName=\"info\"\n\t\t\t\t\tvariant=\"icon\"\n\t\t\t\t/>,\n\t\t\t];\n\t\t} else {\n\t\t\t// eslint-disable-next-line prefer-destructuring\n\t\t\tchildren = this.props.children;\n\t\t}\n\n\t\treturn React.Children.map(children, (child, i) =>\n\t\t\tReact.cloneElement(child, {\n\t\t\t\tkey: i, // eslint-disable-line react/no-array-index-key\n\t\t\t\t'aria-describedby': this.getIsOpen() ? this.getId() : undefined,\n\t\t\t\tonBlur: this.handleMouseLeave,\n\t\t\t\tonFocus: this.handleMouseEnter,\n\t\t\t\tonMouseEnter: this.handleMouseEnter,\n\t\t\t\tonMouseLeave: this.handleMouseLeave,\n\t\t\t})\n\t\t);\n\t}\n\n\tgetId() {\n\t\treturn this.props.id || this.generatedId;\n\t}\n\n\tgetIsOpen() {\n\t\treturn this.props.isOpen === undefined\n\t\t\t? this.state.isOpen\n\t\t\t: this.props.isOpen;\n\t}\n\n\tgetTooltip() {\n\t\tconst isOpen = this.getIsOpen();\n\t\tconst { align } = this.props;\n\n\t\t// REMOVE AT NEXT BREAKING CHANGE (v1.0 or v0.9)\n\t\tconst deprecatedWay = this.props.variant === 'error';\n\n\t\treturn isOpen ? (\n\t\t\t<Dialog\n\t\t\t\tcloseOnTabKey\n\t\t\t\thasNubbin\n\t\t\t\tcontentsClassName={classNames(\n\t\t\t\t\t'slds-popover',\n\t\t\t\t\t'slds-popover_tooltip',\n\t\t\t\t\t{\n\t\t\t\t\t\t'slds-theme_error': this.props.theme === 'error' || deprecatedWay,\n\t\t\t\t\t},\n\t\t\t\t\tthis.props.dialogClassName\n\t\t\t\t)}\n\t\t\t\talign={align}\n\t\t\t\tcontext={this.context}\n\t\t\t\thasStaticAlignment={this.props.hasStaticAlignment}\n\t\t\t\tonClose={this.handleCancel}\n\t\t\t\tonRequestTargetElement={() => this.getTooltipTarget()}\n\t\t\t\tposition={this.props.position}\n\t\t\t\tvariant=\"tooltip\"\n\t\t\t\tcontainerProps={{\n\t\t\t\t\tid: this.getId(),\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{this.getTooltipContent()}\n\t\t\t</Dialog>\n\t\t) : (\n\t\t\t<span />\n\t\t);\n\t}\n\n\tgetTooltipContent() {\n\t\treturn (\n\t\t\t<div className=\"slds-popover__body\">\n\t\t\t\t{this.props.content}\n\t\t\t\t{this.props.variant === 'learnMore' && this.props.onClickTrigger ? (\n\t\t\t\t\t<div className=\"slds-m-top_x-small\" aria-hidden=\"true\">\n\t\t\t\t\t\t{this.props.labels.learnMoreBefore}{' '}\n\t\t\t\t\t\t<Icon\n\t\t\t\t\t\t\tassistiveText={{\n\t\t\t\t\t\t\t\tlabel: this.props.assistiveText.tooltipTipLearnMoreIcon,\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tcategory=\"utility\"\n\t\t\t\t\t\t\tinverse\n\t\t\t\t\t\t\tname=\"info\"\n\t\t\t\t\t\t\tsize=\"x-small\"\n\t\t\t\t\t\t/>{' '}\n\t\t\t\t\t\t{this.props.labels.learnMoreAfter}{' '}\n\t\t\t\t\t</div>\n\t\t\t\t) : null}\n\t\t\t</div>\n\t\t);\n\t}\n\n\tgetTooltipTarget() {\n\t\tif (this.props.onRequestTargetElement) {\n\t\t\treturn this.props.onRequestTargetElement();\n\t\t}\n\n\t\t// for backwards compatibility\n\t\tif (this.props.target) {\n\t\t\treturn this.props.target;\n\t\t}\n\n\t\treturn this.trigger;\n\t}\n\n\thandleCancel = () => {\n\t\tclearTimeout(this.tooltipTimeout);\n\n\t\tthis.setState({\n\t\t\tisOpen: false,\n\t\t});\n\t};\n\n\thandleMouseEnter = () => {\n\t\tclearTimeout(this.tooltipTimeout);\n\n\t\tthis.tooltipTimeout = setTimeout(() => {\n\t\t\tif (!this.isUnmounting) {\n\t\t\t\tthis.setState({\n\t\t\t\t\tisOpen: true,\n\t\t\t\t});\n\t\t\t}\n\t\t}, this.props.hoverOpenDelay);\n\t};\n\n\thandleMouseLeave = () => {\n\t\tclearTimeout(this.tooltipTimeout);\n\n\t\tthis.tooltipTimeout = setTimeout(() => {\n\t\t\tif (!this.isUnmounting) {\n\t\t\t\tthis.setState({\n\t\t\t\t\tisOpen: false,\n\t\t\t\t});\n\t\t\t}\n\t\t}, this.props.hoverCloseDelay);\n\t};\n\n\tsaveTriggerRef = (component) => {\n\t\tthis.trigger = component;\n\t\t// yes, this is a re-render triggered by a render.\n\t\t// Dialog/Popper.js cannot place the popover until\n\t\t// the trigger/target DOM node is mounted. This\n\t\t// way `findDOMNode` is not called and parent\n\t\t// DOM nodes are not queried.\n\t\tif (!this.state.triggerRendered) {\n\t\t\tthis.setState({ triggerRendered: true });\n\t\t}\n\t};\n\n\trender() {\n\t\tconst containerStyles = {\n\t\t\tdisplay: 'inline-block',\n\t\t\tlineHeight: '1',\n\t\t\t...this.props.triggerStyle,\n\t\t};\n\n\t\treturn (\n\t\t\t<div\n\t\t\t\tclassName={classNames(\n\t\t\t\t\t'slds-tooltip-trigger',\n\t\t\t\t\tthis.props.triggerClassName\n\t\t\t\t)}\n\t\t\t\tstyle={containerStyles}\n\t\t\t\tref={this.saveTriggerRef}\n\t\t\t>\n\t\t\t\t{this.getAnchoredNubbinStyles()}\n\t\t\t\t{this.getContent()}\n\t\t\t\t{this.getTooltip()}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nTooltip.contextType = IconSettingsContext;\nTooltip.displayName = displayName;\nTooltip.propTypes = propTypes;\nTooltip.defaultProps = defaultProps;\n\nexport default Tooltip;\n"]},"metadata":{},"sourceType":"module"}