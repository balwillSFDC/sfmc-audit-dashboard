{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n// # Avatar Component\n// Implements the [Avatar design pattern](https://lightningdesignsystem.com/components/avatar/) in React.\n// ### React\n\n\nimport React from 'react';\nimport PropTypes from 'prop-types'; // This component's `checkProps` which issues warnings to developers about properties when in development mode (similar to React's built in development tools)\n\nimport checkProps from './check-props'; // ### classNames\n// [github.com/JedWatson/classnames](https://github.com/JedWatson/classnames) A\n// simple javascript utility for conditionally joining classNames together.\n\nimport classNames from '../../utilities/class-names';\nimport { AVATAR } from '../../utilities/constants';\nimport UtilityIcon from '../icon';\nimport componentDoc from './component.json'; // ### Display Name Always use the canonical component name as the React display\n// name.\n\nvar displayName = AVATAR; // ### Prop Types\n\nvar propTypes = {\n  /**\n   * **Assistive text for accessibility.**\n   * This object is merged with the default props object on every render.\n   * * `icon`: Assistive text for accessibility that labels the icon.\n   */\n  assistiveText: PropTypes.shape({\n    icon: PropTypes.string\n  }),\n\n  /**\n   * Alt attribute to be applied to image (base case) element.\n   */\n  imgAlt: PropTypes.string,\n\n  /**\n   * Source attribute to be applied to image (base case) element.\n   */\n  imgSrc: PropTypes.string,\n\n  /**\n   * Initials attribute to optionally pass in initials directly in case of \"initials\" fallback case.\n   */\n  initials: PropTypes.string,\n\n  /**\n   * Avatar with initials that are dark text on light background\n   */\n  inverse: PropTypes.bool,\n\n  /**\n   * Label attibute to display inside \"initials\" fallback case. Will be passed as title prop in `abbr` element to provide more specificity.\n   */\n  label: PropTypes.string,\n\n  /**\n   * Avatar variants to apply relevant styling (circle: user, square: entity) and icon rendering if applicable.\n   */\n  variant: PropTypes.oneOf(['entity', 'user']).isRequired,\n\n  /**\n   * Size of the icon in \"icon\" fallback case.\n   */\n  size: PropTypes.oneOf(['x-small', 'small', 'medium', 'large']).isRequired,\n\n  /**\n   * Title attribute for the avatar container.\n   */\n  title: PropTypes.string\n};\nvar defaultProps = {\n  assistiveText: {\n    icon: 'User or Account Icon'\n  },\n  imgAlt: '',\n  size: 'medium',\n  title: 'user avatar',\n  variant: 'user'\n};\n/**\n * The avatar component represents an object or entity. An image is the preferred format for an avatar.\n If the `imgSrc` prop is undefined, and if a `label` or `initials` prop is available, the fallback avatar will render with initials. If initals are passed in directly in the `initials` prop, this will render in the fallback avatar. If `initals` prop is unavailable but a `label` prop is available, the fallback avatar will render with built initials of the user name or entity name.\n\n Intials built from the `label` prop will apply the following logic: If the label name contains two words, like first and last name, the first letter of each will be capitalized and returned. For labels that only have a single word name, the first two letters of that word, using one capital and one lower case letter, will be returned. For labels that contain three or more words, the first character of the first and last words will be capitalized and returned.\n\n If `initials` or `label` are not available, the fallback avatar will render a standard icon. If `variant='user'`, a user icon will\n render. If `variant='entity'`, an account icon will render.\n */\n\nvar Avatar = /*#__PURE__*/function (_React$Component) {\n  _inherits(Avatar, _React$Component);\n\n  var _super = _createSuper(Avatar);\n\n  function Avatar(props) {\n    var _this;\n\n    _classCallCheck(this, Avatar);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      imgLoadError: false\n    };\n    checkProps(AVATAR, props, componentDoc);\n    return _this;\n  }\n\n  _createClass(Avatar, [{\n    key: \"buildInitials\",\n    value: function buildInitials() {\n      var label = this.props.label;\n      var name = label.trim();\n      var nameParts = name.split(' ');\n\n      if (nameParts.length > 1) {\n        return nameParts[0].charAt(0).toUpperCase() + nameParts[nameParts.length - 1].charAt(0).toUpperCase();\n      }\n\n      return (name[0] || '').toUpperCase() + (name[1] || '').toLowerCase();\n    }\n  }, {\n    key: \"handleImageError\",\n    value: function handleImageError() {\n      return this.setState(function () {\n        return {\n          imgLoadError: true\n        };\n      });\n    }\n  }, {\n    key: \"renderBaseAvatar\",\n    value: function renderBaseAvatar() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          imgAlt = _this$props.imgAlt,\n          imgSrc = _this$props.imgSrc,\n          title = _this$props.title;\n      return /*#__PURE__*/React.createElement(\"img\", {\n        alt: imgAlt,\n        src: imgSrc,\n        onError: function onError() {\n          return _this2.handleImageError();\n        },\n        title: title\n      });\n    }\n  }, {\n    key: \"renderIconAvatar\",\n    value: function renderIconAvatar() {\n      var variant = this.props.variant;\n      var iconAssistiveText = typeof this.props.assistiveText === 'string' ? this.props.assistiveText : _objectSpread(_objectSpread({}, defaultProps.assistiveText), this.props.assistiveText).icon;\n      return /*#__PURE__*/React.createElement(UtilityIcon, {\n        assistiveText: {\n          label: iconAssistiveText\n        },\n        category: \"standard\",\n        name: variant === 'entity' ? 'account' : 'user'\n      });\n    }\n  }, {\n    key: \"renderInitialsAvatar\",\n    value: function renderInitialsAvatar() {\n      var _this$props2 = this.props,\n          initials = _this$props2.initials,\n          inverse = _this$props2.inverse,\n          label = _this$props2.label,\n          variant = _this$props2.variant;\n      return /*#__PURE__*/React.createElement(\"abbr\", {\n        className: classNames('slds-avatar__initials', {\n          'slds-avatar__initials_inverse': inverse,\n          'slds-icon-standard-account': variant === 'entity',\n          'slds-icon-standard-user': variant === 'user'\n        }),\n        title: label\n      }, initials ? initials : this.buildInitials());\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$props3 = this.props,\n          imgSrc = _this$props3.imgSrc,\n          initials = _this$props3.initials,\n          variant = _this$props3.variant,\n          label = _this$props3.label,\n          size = _this$props3.size;\n\n      var renderAvatar = function renderAvatar() {\n        /* eslint no-unneeded-ternary: */\n        if (!_this3.state.imgLoadError && imgSrc) {\n          return _this3.renderBaseAvatar();\n        }\n\n        if (initials || label && label.trim()) {\n          return _this3.renderInitialsAvatar();\n        }\n\n        return _this3.renderIconAvatar();\n      };\n\n      return /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(\"span\", {\n        className: classNames('slds-avatar', {\n          'slds-avatar_circle': variant === 'user',\n          'slds-avatar_x-small': size === 'x-small',\n          'slds-avatar_small': size === 'small',\n          'slds-avatar_medium': size === 'medium',\n          'slds-avatar_large': size === 'large'\n        })\n      }, renderAvatar()));\n    }\n  }]);\n\n  return Avatar;\n}(React.Component);\n\nAvatar.defaultProps = defaultProps;\nAvatar.displayName = displayName;\nAvatar.propTypes = propTypes;\nexport default Avatar;","map":{"version":3,"sources":["../../../.tmp-es/components/avatar/index.jsx"],"names":["displayName","propTypes","assistiveText","icon","PropTypes","string","imgAlt","imgSrc","initials","inverse","label","variant","size","title","defaultProps","Avatar","React","Component","imgLoadError","checkProps","name","nameParts","iconAssistiveText","classNames","renderAvatar"],"mappings":"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","sourcesContent":["/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\n// # Avatar Component\n\n// Implements the [Avatar design pattern](https://lightningdesignsystem.com/components/avatar/) in React.\n\n// ### React\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\n// This component's `checkProps` which issues warnings to developers about properties when in development mode (similar to React's built in development tools)\nimport checkProps from './check-props';\n\n// ### classNames\n// [github.com/JedWatson/classnames](https://github.com/JedWatson/classnames) A\n// simple javascript utility for conditionally joining classNames together.\nimport classNames from '../../utilities/class-names';\nimport { AVATAR } from '../../utilities/constants';\nimport UtilityIcon from '../icon';\nimport componentDoc from './component.json';\n\n// ### Display Name Always use the canonical component name as the React display\n// name.\nconst displayName = AVATAR;\n\n// ### Prop Types\nconst propTypes = {\n\t/**\n\t * **Assistive text for accessibility.**\n\t * This object is merged with the default props object on every render.\n\t * * `icon`: Assistive text for accessibility that labels the icon.\n\t */\n\tassistiveText: PropTypes.shape({\n\t\ticon: PropTypes.string,\n\t}),\n\t/**\n\t * Alt attribute to be applied to image (base case) element.\n\t */\n\timgAlt: PropTypes.string,\n\t/**\n\t * Source attribute to be applied to image (base case) element.\n\t */\n\timgSrc: PropTypes.string,\n\t/**\n\t * Initials attribute to optionally pass in initials directly in case of \"initials\" fallback case.\n\t */\n\tinitials: PropTypes.string,\n\t/**\n\t * Avatar with initials that are dark text on light background\n\t */\n\tinverse: PropTypes.bool,\n\t/**\n\t * Label attibute to display inside \"initials\" fallback case. Will be passed as title prop in `abbr` element to provide more specificity.\n\t */\n\tlabel: PropTypes.string,\n\t/**\n\t * Avatar variants to apply relevant styling (circle: user, square: entity) and icon rendering if applicable.\n\t */\n\tvariant: PropTypes.oneOf(['entity', 'user']).isRequired,\n\t/**\n\t * Size of the icon in \"icon\" fallback case.\n\t */\n\tsize: PropTypes.oneOf(['x-small', 'small', 'medium', 'large']).isRequired,\n\t/**\n\t * Title attribute for the avatar container.\n\t */\n\ttitle: PropTypes.string,\n};\n\nconst defaultProps = {\n\tassistiveText: {\n\t\ticon: 'User or Account Icon',\n\t},\n\timgAlt: '',\n\tsize: 'medium',\n\ttitle: 'user avatar',\n\tvariant: 'user',\n};\n\n/**\n * The avatar component represents an object or entity. An image is the preferred format for an avatar.\n If the `imgSrc` prop is undefined, and if a `label` or `initials` prop is available, the fallback avatar will render with initials. If initals are passed in directly in the `initials` prop, this will render in the fallback avatar. If `initals` prop is unavailable but a `label` prop is available, the fallback avatar will render with built initials of the user name or entity name.\n\n Intials built from the `label` prop will apply the following logic: If the label name contains two words, like first and last name, the first letter of each will be capitalized and returned. For labels that only have a single word name, the first two letters of that word, using one capital and one lower case letter, will be returned. For labels that contain three or more words, the first character of the first and last words will be capitalized and returned.\n\n If `initials` or `label` are not available, the fallback avatar will render a standard icon. If `variant='user'`, a user icon will\n render. If `variant='entity'`, an account icon will render.\n */\n\nclass Avatar extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\timgLoadError: false,\n\t\t};\n\n\t\tcheckProps(AVATAR, props, componentDoc);\n\t}\n\n\tbuildInitials() {\n\t\tconst { label } = this.props;\n\t\tconst name = label.trim();\n\t\tconst nameParts = name.split(' ');\n\t\tif (nameParts.length > 1) {\n\t\t\treturn (\n\t\t\t\tnameParts[0].charAt(0).toUpperCase() +\n\t\t\t\tnameParts[nameParts.length - 1].charAt(0).toUpperCase()\n\t\t\t);\n\t\t}\n\t\treturn (name[0] || '').toUpperCase() + (name[1] || '').toLowerCase();\n\t}\n\n\thandleImageError() {\n\t\treturn this.setState(() => ({ imgLoadError: true }));\n\t}\n\n\trenderBaseAvatar() {\n\t\tconst { imgAlt, imgSrc, title } = this.props;\n\t\treturn (\n\t\t\t<img\n\t\t\t\talt={imgAlt}\n\t\t\t\tsrc={imgSrc}\n\t\t\t\tonError={() => this.handleImageError()}\n\t\t\t\ttitle={title}\n\t\t\t/>\n\t\t);\n\t}\n\n\trenderIconAvatar() {\n\t\tconst { variant } = this.props;\n\t\tconst iconAssistiveText =\n\t\t\ttypeof this.props.assistiveText === 'string'\n\t\t\t\t? this.props.assistiveText\n\t\t\t\t: {\n\t\t\t\t\t\t...defaultProps.assistiveText,\n\t\t\t\t\t\t...this.props.assistiveText,\n\t\t\t\t  }.icon;\n\t\treturn (\n\t\t\t<UtilityIcon\n\t\t\t\tassistiveText={{ label: iconAssistiveText }}\n\t\t\t\tcategory=\"standard\"\n\t\t\t\tname={variant === 'entity' ? 'account' : 'user'}\n\t\t\t/>\n\t\t);\n\t}\n\n\trenderInitialsAvatar() {\n\t\tconst { initials, inverse, label, variant } = this.props;\n\t\treturn (\n\t\t\t<abbr\n\t\t\t\tclassName={classNames('slds-avatar__initials', {\n\t\t\t\t\t'slds-avatar__initials_inverse': inverse,\n\t\t\t\t\t'slds-icon-standard-account': variant === 'entity',\n\t\t\t\t\t'slds-icon-standard-user': variant === 'user',\n\t\t\t\t})}\n\t\t\t\ttitle={label}\n\t\t\t>\n\t\t\t\t{initials ? initials : this.buildInitials()}\n\t\t\t</abbr>\n\t\t);\n\t}\n\n\trender() {\n\t\tconst { imgSrc, initials, variant, label, size } = this.props;\n\n\t\tconst renderAvatar = () => {\n\t\t\t/* eslint no-unneeded-ternary: */\n\t\t\tif (!this.state.imgLoadError && imgSrc) {\n\t\t\t\treturn this.renderBaseAvatar();\n\t\t\t}\n\t\t\tif (initials || (label && label.trim())) {\n\t\t\t\treturn this.renderInitialsAvatar();\n\t\t\t}\n\t\t\treturn this.renderIconAvatar();\n\t\t};\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<span\n\t\t\t\t\tclassName={classNames('slds-avatar', {\n\t\t\t\t\t\t'slds-avatar_circle': variant === 'user',\n\t\t\t\t\t\t'slds-avatar_x-small': size === 'x-small',\n\t\t\t\t\t\t'slds-avatar_small': size === 'small',\n\t\t\t\t\t\t'slds-avatar_medium': size === 'medium',\n\t\t\t\t\t\t'slds-avatar_large': size === 'large',\n\t\t\t\t\t})}\n\t\t\t\t>\n\t\t\t\t\t{renderAvatar()}\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nAvatar.defaultProps = defaultProps;\nAvatar.displayName = displayName;\nAvatar.propTypes = propTypes;\n\nexport default Avatar;\n"]},"metadata":{},"sourceType":"module"}