{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n// # Global Header Button Component\n// NOTE: THIS COMPONENT HAS BEEN DEPRECATED AND WILL BE REMOVED IN FUTURE MAJOR RELEASES\n// ## Dependencies\n// ### React\n\n\nimport React from 'react'; // ### Button\n\nimport Button from '../button'; // This component's `checkProps` which issues warnings to developers about properties\n// when in development mode (similar to React's built in development tools)\n\nimport checkProps from './check-props'; // ## Constants\n\nimport { GLOBAL_HEADER_BUTTON, GLOBAL_HEADER_TOOL } from '../../utilities/constants';\n/**\n * A helper component that renders a Button in the tools area of the Global Header. Currently defaults to a bare icon, but this can be overriden if text-based buttons are required.\n */\n\nvar GlobalHeaderButton = function GlobalHeaderButton(props) {\n  checkProps(GLOBAL_HEADER_BUTTON, props);\n\n  var buttonVariant = props.buttonVariant,\n      rest = _objectWithoutProperties(props, [\"buttonVariant\"]);\n\n  var btn = /*#__PURE__*/React.createElement(Button, _extends({\n    iconVariant: \"global-header\",\n    variant: \"icon\"\n  }, rest));\n  return buttonVariant === 'dropdown' ? btn : /*#__PURE__*/React.createElement(\"li\", null, btn);\n};\n\nGlobalHeaderButton.displayName = GLOBAL_HEADER_TOOL;\nexport default GlobalHeaderButton;","map":{"version":3,"sources":["../../../.tmp-es/components/global-header/button.jsx"],"names":["GlobalHeaderButton","checkProps","buttonVariant","rest","props","btn"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;AAEA;AACA;AAEA;AAEA;;;AACA,OAAA,KAAA,MAAA,OAAA,C,CAEA;;AACA,OAAA,MAAA,MAAA,WAAA,C,CAEA;AACA;;AACA,OAAA,UAAA,MAAA,eAAA,C,CAEA;;AACA,SAAA,oBAAA,EAAA,kBAAA,QAAA,2BAAA;AAKA;AACA;AACA;;AACA,IAAMA,kBAAkB,GAAG,SAArBA,kBAAqB,CAAA,KAAA,EAAW;AACrCC,EAAAA,UAAU,CAAA,oBAAA,EAAVA,KAAU,CAAVA;;AADqC,MAE7BC,aAF6B,GAEFE,KAFE,CAAA,aAAA;AAAA,MAEXD,IAFW,GAAA,wBAAA,CAAA,KAAA,EAAA,CAAA,eAAA,CAAA,CAAA;;AAGrC,MAAME,GAAG,GAAA,aAAG,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA,QAAA,CAAA;AAAQ,IAAA,WAAW,EAAnB,eAAA;AAAoC,IAAA,OAAO,EAAC;AAA5C,GAAA,EAAZ,IAAY,CAAA,CAAZ;AACA,SAAOH,aAAa,KAAbA,UAAAA,GAAAA,GAAAA,GAAAA,aAAqC,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA,IAAA,EAA5C,GAA4C,CAA5C;AAJD,CAAA;;AAOAF,kBAAkB,CAAlBA,WAAAA,GAAAA,kBAAAA;AAEA,eAAA,kBAAA","sourcesContent":["/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\n// # Global Header Button Component\n// NOTE: THIS COMPONENT HAS BEEN DEPRECATED AND WILL BE REMOVED IN FUTURE MAJOR RELEASES\n\n// ## Dependencies\n\n// ### React\nimport React from 'react';\n\n// ### Button\nimport Button from '../button';\n\n// This component's `checkProps` which issues warnings to developers about properties\n// when in development mode (similar to React's built in development tools)\nimport checkProps from './check-props';\n\n// ## Constants\nimport {\n\tGLOBAL_HEADER_BUTTON,\n\tGLOBAL_HEADER_TOOL,\n} from '../../utilities/constants';\n\n/**\n * A helper component that renders a Button in the tools area of the Global Header. Currently defaults to a bare icon, but this can be overriden if text-based buttons are required.\n */\nconst GlobalHeaderButton = (props) => {\n\tcheckProps(GLOBAL_HEADER_BUTTON, props);\n\tconst { buttonVariant, ...rest } = props;\n\tconst btn = <Button iconVariant=\"global-header\" variant=\"icon\" {...rest} />;\n\treturn buttonVariant === 'dropdown' ? btn : <li>{btn}</li>;\n};\n\nGlobalHeaderButton.displayName = GLOBAL_HEADER_TOOL;\n\nexport default GlobalHeaderButton;\n"]},"metadata":{},"sourceType":"module"}