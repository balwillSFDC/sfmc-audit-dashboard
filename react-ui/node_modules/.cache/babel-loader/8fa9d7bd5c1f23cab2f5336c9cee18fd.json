{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\n/* eslint-disable class-methods-use-this */\n\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nexport var DISPLAY_NAME = 'SLDSSplitViewListItemWithContent';\nvar propsTypes = {\n  /**\n   * **Assistive text for accessibility**\n   * * `unreadItem`: The unread indicator.\n   */\n  assistiveText: PropTypes.shape({\n    unreadItem: PropTypes.string\n  }),\n\n  /**\n   * Item to be displayed\n   */\n  item: PropTypes.object.isRequired,\n\n  /**\n   * Allows multiple item to be selection\n   */\n  multiple: PropTypes.bool,\n\n  /**\n   * Shows the item as `focused`.\n   */\n  isFocused: PropTypes.bool.isRequired,\n\n  /**\n   * Shows the item as `selected`.\n   */\n  isSelected: PropTypes.bool.isRequired,\n\n  /**\n   * Shows the item as `unread`.\n   */\n  isUnread: PropTypes.bool,\n\n  /**\n   * **Event Callbacks**\n   * * `onClick`: Called when the item is clicked.\n   * * * Event\n   * * * Meta data\n   * * * * `item`: The original item.\n   * * * * `isSelected`: Is the item selected.\n   * * * * `isUnread`: Is the item unread.\n   */\n  events: PropTypes.shape({\n    onClick: PropTypes.func.isRequired\n  }),\n\n  /**\n   * Reference to the list item component\n   */\n  listItemRef: PropTypes.func\n};\nvar defaultProps = {\n  assistiveText: {\n    unreadItem: 'Unread Item'\n  },\n  events: {}\n};\n/**\n * HOC that wraps the list item content with selection and unread functionality.\n * @param ListItemContent {node} A React component\n * @returns {ListItemWithContent} A React component\n */\n\nvar listItemWithContent = function listItemWithContent(ListItemContent) {\n  var ListItemWithContent = /*#__PURE__*/function (_React$Component) {\n    _inherits(ListItemWithContent, _React$Component);\n\n    var _super = _createSuper(ListItemWithContent);\n\n    function ListItemWithContent() {\n      var _this;\n\n      _classCallCheck(this, ListItemWithContent);\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this = _super.call.apply(_super, [this].concat(args));\n\n      _defineProperty(_assertThisInitialized(_this), \"onClick\", function (event) {\n        event.preventDefault();\n\n        _this.props.events.onClick(event, {\n          item: _this.props.item,\n          isSelected: _this.props.isSelected,\n          isUnread: _this.props.isUnread\n        });\n      });\n\n      return _this;\n    }\n\n    _createClass(ListItemWithContent, [{\n      key: \"unread\",\n      value: function unread() {\n        return this.props.isUnread ? /*#__PURE__*/React.createElement(\"abbr\", {\n          className: \"slds-indicator_unread\",\n          title: this.props.assistiveText.unreadItem,\n          \"aria-label\": this.props.assistiveText.unreadItem\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          className: \"slds-assistive-text\"\n        }, '●')) : null;\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        return /*#__PURE__*/React.createElement(\"li\", {\n          className: classNames('slds-split-view__list-item', {\n            'slds-is-unread': this.props.isUnread\n          }),\n          role: \"presentation\"\n        }, /*#__PURE__*/React.createElement(\"a\", {\n          className: \"slds-split-view__list-item-action slds-grow slds-has-flexi-truncate\",\n          role: \"option\",\n          ref: this.props.listItemRef,\n          \"aria-selected\": this.props.multiple ? !!this.props.isSelected : this.props.isSelected,\n          tabIndex: this.props.isFocused ? 0 : -1,\n          href: \"#\",\n          onClick: this.onClick\n        }, this.unread(), /*#__PURE__*/React.createElement(ListItemContent, this.props)));\n      }\n    }]);\n\n    return ListItemWithContent;\n  }(React.Component);\n\n  _defineProperty(ListItemWithContent, \"displayName\", \"\".concat(DISPLAY_NAME, \"(\").concat(ListItemContent.displayName || ListItemContent.name || 'Component', \")\"));\n\n  _defineProperty(ListItemWithContent, \"propTypes\", propsTypes);\n\n  _defineProperty(ListItemWithContent, \"defaultProps\", defaultProps);\n\n  return ListItemWithContent;\n};\n\nexport default listItemWithContent;","map":{"version":3,"sources":["../../../../.tmp-es/components/split-view/private/list-item-with-content.jsx"],"names":["DISPLAY_NAME","propsTypes","assistiveText","unreadItem","PropTypes","string","item","multiple","isFocused","isSelected","isUnread","events","onClick","isRequired","listItemRef","func","defaultProps","listItemWithContent","ListItemWithContent","React","ListItemContent","event","classNames"],"mappings":"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","sourcesContent":["/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\n/* eslint-disable class-methods-use-this */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nexport const DISPLAY_NAME = 'SLDSSplitViewListItemWithContent';\n\nconst propsTypes = {\n\t/**\n\t * **Assistive text for accessibility**\n\t * * `unreadItem`: The unread indicator.\n\t */\n\tassistiveText: PropTypes.shape({\n\t\tunreadItem: PropTypes.string,\n\t}),\n\t/**\n\t * Item to be displayed\n\t */\n\titem: PropTypes.object.isRequired,\n\t/**\n\t * Allows multiple item to be selection\n\t */\n\tmultiple: PropTypes.bool,\n\t/**\n\t * Shows the item as `focused`.\n\t */\n\tisFocused: PropTypes.bool.isRequired,\n\t/**\n\t * Shows the item as `selected`.\n\t */\n\tisSelected: PropTypes.bool.isRequired,\n\t/**\n\t * Shows the item as `unread`.\n\t */\n\tisUnread: PropTypes.bool,\n\t/**\n\t * **Event Callbacks**\n\t * * `onClick`: Called when the item is clicked.\n\t * * * Event\n\t * * * Meta data\n\t * * * * `item`: The original item.\n\t * * * * `isSelected`: Is the item selected.\n\t * * * * `isUnread`: Is the item unread.\n\t */\n\tevents: PropTypes.shape({\n\t\tonClick: PropTypes.func.isRequired,\n\t}),\n\t/**\n\t * Reference to the list item component\n\t */\n\tlistItemRef: PropTypes.func,\n};\n\nconst defaultProps = {\n\tassistiveText: {\n\t\tunreadItem: 'Unread Item',\n\t},\n\tevents: {},\n};\n\n/**\n * HOC that wraps the list item content with selection and unread functionality.\n * @param ListItemContent {node} A React component\n * @returns {ListItemWithContent} A React component\n */\nconst listItemWithContent = (ListItemContent) => {\n\tclass ListItemWithContent extends React.Component {\n\t\tstatic displayName = `${DISPLAY_NAME}(${\n\t\t\tListItemContent.displayName || ListItemContent.name || 'Component'\n\t\t})`;\n\n\t\tstatic propTypes = propsTypes;\n\n\t\tstatic defaultProps = defaultProps;\n\n\t\tonClick = (event) => {\n\t\t\tevent.preventDefault();\n\n\t\t\tthis.props.events.onClick(event, {\n\t\t\t\titem: this.props.item,\n\t\t\t\tisSelected: this.props.isSelected,\n\t\t\t\tisUnread: this.props.isUnread,\n\t\t\t});\n\t\t};\n\n\t\tunread() {\n\t\t\treturn this.props.isUnread ? (\n\t\t\t\t<abbr\n\t\t\t\t\tclassName=\"slds-indicator_unread\"\n\t\t\t\t\ttitle={this.props.assistiveText.unreadItem}\n\t\t\t\t\taria-label={this.props.assistiveText.unreadItem}\n\t\t\t\t>\n\t\t\t\t\t{/* eslint-disable-next-line react/jsx-curly-brace-presence */}\n\t\t\t\t\t<span className=\"slds-assistive-text\">{'●'}</span>\n\t\t\t\t</abbr>\n\t\t\t) : null;\n\t\t}\n\n\t\trender() {\n\t\t\treturn (\n\t\t\t\t<li\n\t\t\t\t\tclassName={classNames('slds-split-view__list-item', {\n\t\t\t\t\t\t'slds-is-unread': this.props.isUnread,\n\t\t\t\t\t})}\n\t\t\t\t\trole=\"presentation\"\n\t\t\t\t>\n\t\t\t\t\t<a\n\t\t\t\t\t\tclassName=\"slds-split-view__list-item-action slds-grow slds-has-flexi-truncate\"\n\t\t\t\t\t\trole=\"option\"\n\t\t\t\t\t\tref={this.props.listItemRef}\n\t\t\t\t\t\taria-selected={\n\t\t\t\t\t\t\tthis.props.multiple\n\t\t\t\t\t\t\t\t? !!this.props.isSelected\n\t\t\t\t\t\t\t\t: this.props.isSelected\n\t\t\t\t\t\t}\n\t\t\t\t\t\ttabIndex={this.props.isFocused ? 0 : -1}\n\t\t\t\t\t\thref=\"#\"\n\t\t\t\t\t\tonClick={this.onClick}\n\t\t\t\t\t>\n\t\t\t\t\t\t{this.unread()}\n\t\t\t\t\t\t<ListItemContent {...this.props} />\n\t\t\t\t\t</a>\n\t\t\t\t</li>\n\t\t\t);\n\t\t}\n\t}\n\n\treturn ListItemWithContent;\n};\n\nexport default listItemWithContent;\n"]},"metadata":{},"sourceType":"module"}