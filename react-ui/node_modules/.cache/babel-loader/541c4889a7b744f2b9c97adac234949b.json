{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n// ### React\n\n\nimport React from 'react';\nimport PropTypes from 'prop-types'; // ### classNames\n// [github.com/JedWatson/classnames](https://github.com/JedWatson/classnames)\n// This project uses `classnames`, \"a simple javascript utility for conditionally\n// joining classNames together.\"\n\nimport classnames from 'classnames';\nimport { MEDIA_OBJECT } from '../../utilities/constants'; // Allow for predicatable DOM queries with `querySelectorAll(cssClasses.base)`\n\nexport var cssClasses = {\n  base: 'slds-media',\n  figure: 'slds-media__figure',\n  body: 'slds-media__body'\n};\n/**\n * When you need text and a figure next to each other, use a media object.\n */\n\nvar MediaObject = /*#__PURE__*/function (_React$Component) {\n  _inherits(MediaObject, _React$Component);\n\n  var _super = _createSuper(MediaObject);\n\n  function MediaObject() {\n    _classCallCheck(this, MediaObject);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(MediaObject, [{\n    key: \"render\",\n    // ### Display Name\n    // Always use the canonical component name as the React display name.\n    // ### Prop Types\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: classnames(cssClasses.base, {\n          'slds-media_center': this.props.verticalCenter,\n          'slds-has-flexi-truncate': this.props.canTruncate\n        }, this.props.className)\n      }, this.props.figure ? /*#__PURE__*/React.createElement(\"div\", {\n        className: cssClasses.figure\n      }, this.props.figure, \" \") : null, /*#__PURE__*/React.createElement(\"div\", {\n        className: cssClasses.body\n      }, this.props.body));\n    }\n  }]);\n\n  return MediaObject;\n}(React.Component);\n\n_defineProperty(MediaObject, \"displayName\", MEDIA_OBJECT);\n\n_defineProperty(MediaObject, \"propTypes\", {\n  /**\n   * Often the body may need to be truncated for correct layout. This is only applicable if using the component within a flexbox container.\n   */\n  canTruncate: PropTypes.bool,\n\n  /**\n   * Class names to be added to the component's HTML tag with `slds-media` class.\n   */\n  className: PropTypes.oneOfType([PropTypes.array, PropTypes.object, PropTypes.string]),\n\n  /**\n   * The body is often text such as a heading or paragraph.\n   */\n  body: PropTypes.node,\n\n  /**\n   * The figure is the optional visualization of the text within the body.\n   */\n  figure: PropTypes.node,\n\n  /**\n   * Vertically centers the body with the middle of the figure.\n   */\n  verticalCenter: PropTypes.bool\n});\n\nexport default MediaObject;","map":{"version":3,"sources":["../../../.tmp-es/components/media-object/index.jsx"],"names":["cssClasses","base","figure","body","MediaObject","React","Component","MEDIA_OBJECT","canTruncate","PropTypes","className","verticalCenter","bool","classnames"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;AAEA;;;AACA,OAAA,KAAA,MAAA,OAAA;AAEA,OAAA,SAAA,MAAA,YAAA,C,CAEA;AACA;AACA;AACA;;AACA,OAAA,UAAA,MAAA,YAAA;AAEA,SAAA,YAAA,QAAA,2BAAA,C,CAEA;;AACA,OAAO,IAAMA,UAAU,GAAG;AACzBC,EAAAA,IAAI,EADqB,YAAA;AAEzBC,EAAAA,MAAM,EAFmB,oBAAA;AAGzBC,EAAAA,IAAI,EAAE;AAHmB,CAAnB;AAMP;AACA;AACA;;IACMC,W;;;;;;;;;;;;;AACL;AACA;AAGA;6BA4BS;AACR,aAAA,aACC,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AACC,QAAA,SAAS,EAAES,UAAU,CACpBb,UAAU,CADU,IAAA,EAEpB;AACC,+BAAqB,KAAA,KAAA,CADtB,cAAA;AAEC,qCAA2B,KAAA,KAAA,CAAWQ;AAFvC,SAFoB,EAMpB,KAAA,KAAA,CANoB,SAAA;AADtB,OAAA,EAUE,KAAA,KAAA,CAAA,MAAA,GAAA,aACA,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,QAAA,SAAS,EAAER,UAAU,CAACE;AAA3B,OAAA,EAAoC,KAAA,KAAA,CAApC,MAAA,EADA,GACA,CADA,GAVF,IAAA,EAAA,aAaC,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,QAAA,SAAS,EAAEF,UAAU,CAACG;AAA3B,OAAA,EAAkC,KAAA,KAAA,CAdpC,IAcE,CAbD,CADD;AAiBA;;;;EAnDwBE,KAAK,CAACC,S;;gBAA1BF,W,iBAGgBG,Y;;gBAHhBH,W,eAMc;AAClB;AACF;AACA;AACEI,EAAAA,WAAW,EAAEC,SAAS,CAJJ,IAAA;;AAKlB;AACF;AACA;AACEC,EAAAA,SAAS,EAAED,SAAS,CAATA,SAAAA,CAAoB,CAC9BA,SAAS,CADqB,KAAA,EAE9BA,SAAS,CAFqB,MAAA,EAG9BA,SAAS,CAXQ,MAQa,CAApBA,CARO;;AAalB;AACF;AACA;AACEN,EAAAA,IAAI,EAAEM,SAAS,CAhBG,IAAA;;AAiBlB;AACF;AACA;AACEP,EAAAA,MAAM,EAAEO,SAAS,CApBC,IAAA;;AAqBlB;AACF;AACA;AACEE,EAAAA,cAAc,EAAEF,SAAS,CAACG;AAxBR,C;;AAgDpB,eAAA,WAAA","sourcesContent":["/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\n// ### React\nimport React from 'react';\n\nimport PropTypes from 'prop-types';\n\n// ### classNames\n// [github.com/JedWatson/classnames](https://github.com/JedWatson/classnames)\n// This project uses `classnames`, \"a simple javascript utility for conditionally\n// joining classNames together.\"\nimport classnames from 'classnames';\n\nimport { MEDIA_OBJECT } from '../../utilities/constants';\n\n// Allow for predicatable DOM queries with `querySelectorAll(cssClasses.base)`\nexport const cssClasses = {\n\tbase: 'slds-media',\n\tfigure: 'slds-media__figure',\n\tbody: 'slds-media__body',\n};\n\n/**\n * When you need text and a figure next to each other, use a media object.\n */\nclass MediaObject extends React.Component {\n\t// ### Display Name\n\t// Always use the canonical component name as the React display name.\n\tstatic displayName = MEDIA_OBJECT;\n\n\t// ### Prop Types\n\tstatic propTypes = {\n\t\t/**\n\t\t * Often the body may need to be truncated for correct layout. This is only applicable if using the component within a flexbox container.\n\t\t */\n\t\tcanTruncate: PropTypes.bool,\n\t\t/**\n\t\t * Class names to be added to the component's HTML tag with `slds-media` class.\n\t\t */\n\t\tclassName: PropTypes.oneOfType([\n\t\t\tPropTypes.array,\n\t\t\tPropTypes.object,\n\t\t\tPropTypes.string,\n\t\t]),\n\t\t/**\n\t\t * The body is often text such as a heading or paragraph.\n\t\t */\n\t\tbody: PropTypes.node,\n\t\t/**\n\t\t * The figure is the optional visualization of the text within the body.\n\t\t */\n\t\tfigure: PropTypes.node,\n\t\t/**\n\t\t * Vertically centers the body with the middle of the figure.\n\t\t */\n\t\tverticalCenter: PropTypes.bool,\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<div\n\t\t\t\tclassName={classnames(\n\t\t\t\t\tcssClasses.base,\n\t\t\t\t\t{\n\t\t\t\t\t\t'slds-media_center': this.props.verticalCenter,\n\t\t\t\t\t\t'slds-has-flexi-truncate': this.props.canTruncate,\n\t\t\t\t\t},\n\t\t\t\t\tthis.props.className\n\t\t\t\t)}\n\t\t\t>\n\t\t\t\t{this.props.figure ? (\n\t\t\t\t\t<div className={cssClasses.figure}>{this.props.figure} </div>\n\t\t\t\t) : null}\n\t\t\t\t<div className={cssClasses.body}>{this.props.body}</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default MediaObject;\n"]},"metadata":{},"sourceType":"module"}