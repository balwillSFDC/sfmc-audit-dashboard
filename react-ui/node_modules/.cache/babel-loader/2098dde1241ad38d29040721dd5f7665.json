{"ast":null,"code":"/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\n/* eslint-disable import/no-mutable-exports */\n// This function will deliver an error message to the browser console one property is used but not both that are required. Either use neither or both properties.\nimport warning from 'warning';\nvar ifOneThenBothRequiredProperty;\n\nif (process.env.NODE_ENV !== 'production') {\n  var hasWarned = {};\n\n  ifOneThenBothRequiredProperty = function ifOneThenBothRequiredPropertyFunction(control, props, selectedProps, comment) {\n    var additionalComment = comment ? \" \".concat(comment) : '';\n    var bothOrNoneAreSet = false;\n    var keys = Object.keys(selectedProps);\n    var values = keys.map(function (key) {\n      return selectedProps[key];\n    });\n    var allTruthy = values.every(function (element) {\n      return !!element;\n    });\n    var allFalsey = values.every(function (element) {\n      return !element;\n    });\n    bothOrNoneAreSet = allTruthy || allFalsey;\n\n    if (!hasWarned[control]) {\n      /* eslint-disable max-len */\n      warning(bothOrNoneAreSet, \"[Design System React] If one of the following props are used, then both of the following properties are required by \".concat(control, \": [\").concat(keys.join(), \"].\").concat(additionalComment));\n      /* eslint-enable max-len */\n\n      hasWarned[control] = !!selectedProps;\n    }\n  };\n} else {\n  ifOneThenBothRequiredProperty = function ifOneThenBothRequiredPropertyFunction() {};\n}\n\nexport default ifOneThenBothRequiredProperty;","map":{"version":3,"sources":["../../../.tmp-es/utilities/warning/if-one-then-both-required-property.js"],"names":["process","hasWarned","ifOneThenBothRequiredProperty","additionalComment","comment","bothOrNoneAreSet","keys","Object","values","selectedProps","allTruthy","allFalsey","warning"],"mappings":"AAAA;;AACA;;AAEA;AAEA;AACA,OAAA,OAAA,MAAA,SAAA;AAEA,IAAA,6BAAA;;AAEA,IAAIA,OAAO,CAAPA,GAAAA,CAAAA,QAAAA,KAAJ,YAAA,EAA2C;AAC1C,MAAMC,SAAS,GAAf,EAAA;;AAEAC,EAAAA,6BAA6B,GAAG,SAAA,qCAAA,CAAA,OAAA,EAAA,KAAA,EAAA,aAAA,EAAA,OAAA,EAK9B;AACD,QAAMC,iBAAiB,GAAGC,OAAO,GAAA,IAAA,MAAA,CAAA,OAAA,CAAA,GAAjC,EAAA;AACA,QAAIC,gBAAgB,GAApB,KAAA;AACA,QAAMC,IAAI,GAAGC,MAAM,CAANA,IAAAA,CAAb,aAAaA,CAAb;AACA,QAAMC,MAAM,GAAG,IAAI,CAAJ,GAAA,CAAS,UAAA,GAAA,EAAA;AAAA,aAASC,aAAa,CAAtB,GAAsB,CAAtB;AAAxB,KAAe,CAAf;AACA,QAAMC,SAAS,GAAG,MAAM,CAAN,KAAA,CAAa,UAAA,OAAA,EAAA;AAAA,aAAa,CAAC,CAAd,OAAA;AAA/B,KAAkB,CAAlB;AACA,QAAMC,SAAS,GAAG,MAAM,CAAN,KAAA,CAAa,UAAA,OAAA,EAAA;AAAA,aAAa,CAAb,OAAA;AAA/B,KAAkB,CAAlB;AAEAN,IAAAA,gBAAgB,GAAGK,SAAS,IAA5BL,SAAAA;;AAEA,QAAI,CAACJ,SAAS,CAAd,OAAc,CAAd,EAAyB;AACxB;AACAW,MAAAA,OAAO,CAAA,gBAAA,EAAA,uHAAA,MAAA,CAAA,OAAA,EAAA,KAAA,EAAA,MAAA,CAE8HN,IAAI,CAFlI,IAE8HA,EAF9H,EAAA,IAAA,EAAA,MAAA,CAAPM,iBAAO,CAAA,CAAPA;AAIA;;AACAX,MAAAA,SAAS,CAATA,OAAS,CAATA,GAAqB,CAAC,CAAtBA,aAAAA;AACA;AAvBFC,GAAAA;AAHD,CAAA,MA4BO;AACNA,EAAAA,6BAA6B,GAAG,SAAA,qCAAA,GAAiD,CAAjFA,CAAAA;AACA;;AAED,eAAA,6BAAA","sourcesContent":["/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\n/* eslint-disable import/no-mutable-exports */\n\n// This function will deliver an error message to the browser console one property is used but not both that are required. Either use neither or both properties.\nimport warning from 'warning';\n\nlet ifOneThenBothRequiredProperty;\n\nif (process.env.NODE_ENV !== 'production') {\n\tconst hasWarned = {};\n\n\tifOneThenBothRequiredProperty = function ifOneThenBothRequiredPropertyFunction(\n\t\tcontrol,\n\t\tprops,\n\t\tselectedProps,\n\t\tcomment\n\t) {\n\t\tconst additionalComment = comment ? ` ${comment}` : '';\n\t\tlet bothOrNoneAreSet = false;\n\t\tconst keys = Object.keys(selectedProps);\n\t\tconst values = keys.map((key) => selectedProps[key]);\n\t\tconst allTruthy = values.every((element) => !!element);\n\t\tconst allFalsey = values.every((element) => !element);\n\n\t\tbothOrNoneAreSet = allTruthy || allFalsey;\n\n\t\tif (!hasWarned[control]) {\n\t\t\t/* eslint-disable max-len */\n\t\t\twarning(\n\t\t\t\tbothOrNoneAreSet,\n\t\t\t\t`[Design System React] If one of the following props are used, then both of the following properties are required by ${control}: [${keys.join()}].${additionalComment}`\n\t\t\t);\n\t\t\t/* eslint-enable max-len */\n\t\t\thasWarned[control] = !!selectedProps;\n\t\t}\n\t};\n} else {\n\tifOneThenBothRequiredProperty = function ifOneThenBothRequiredPropertyFunction() {};\n}\n\nexport default ifOneThenBothRequiredProperty;\n"]},"metadata":{},"sourceType":"module"}