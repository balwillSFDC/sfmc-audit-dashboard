{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Combobox from '../../combobox/combobox';\n\nvar DatepickerYearSelector = /*#__PURE__*/function (_React$Component) {\n  _inherits(DatepickerYearSelector, _React$Component);\n\n  var _super = _createSuper(DatepickerYearSelector);\n\n  function DatepickerYearSelector() {\n    var _this;\n\n    _classCallCheck(this, DatepickerYearSelector);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"getOptions\", function () {\n      var now = new Date();\n\n      var fromYear = now.getFullYear() + _this.props.relativeYearFrom;\n\n      var toYear = now.getFullYear() + _this.props.relativeYearTo;\n\n      var opts = []; // eslint-disable-next-line fp/no-loops\n\n      for (var year = fromYear; year < toYear; year += 1) {\n        // eslint-disable-next-line fp/no-mutating-methods\n        opts.push({\n          label: \"\".concat(year),\n          value: year,\n          id: String(opts.length)\n        });\n      }\n\n      return opts;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getSelectedValueOption\", function () {\n      var selectedYear = _this.props.initialDateForCalendarRender.getFullYear();\n\n      return _this.getOptions().filter(function (option) {\n        return option.value === selectedYear;\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSelect\", function (event, _ref) {\n      var selectedValues = _ref.selection;\n      var selectedValue = selectedValues[0]; // safe since we are working with a single selection\n\n      if (selectedValue) {\n        _this.props.onChangeMonth(new Date(_this.props.initialDateForCalendarRender.setFullYear(parseInt(selectedValue.value, 10))));\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(DatepickerYearSelector, [{\n    key: \"render\",\n    value: function render() {\n      var selection = this.getSelectedValueOption();\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"slds-form-element slds-align-content-center\"\n      }, /*#__PURE__*/React.createElement(Combobox, {\n        assistiveText: {\n          label: this.props.assistiveTextYear\n        },\n        className: \"slds-shrink-none\",\n        classNameMenu: \"slds-datepicker\",\n        events: {\n          onSelect: this.handleSelect\n        },\n        id: \"\".concat(this.props.id, \"-year-picklist\"),\n        inheritWidthOf: \"target\",\n        menuPosition: \"relative\",\n        multiple: false,\n        options: this.getOptions(),\n        labels: {\n          placeholder: 'Year'\n        },\n        selection: selection,\n        value: selection.value,\n        variant: \"readonly\"\n      }));\n    }\n  }]);\n\n  return DatepickerYearSelector;\n}(React.Component);\n\n_defineProperty(DatepickerYearSelector, \"displayName\", 'SLDSDatepickerYearSelector');\n\n_defineProperty(DatepickerYearSelector, \"propTypes\", {\n  /**\n   * Label for year picklist/combobox\n   */\n  assistiveTextYear: PropTypes.string.isRequired,\n\n  /**\n   * HTML id for component\n   */\n  id: PropTypes.string,\n\n  /**\n   * Date used to create calendar that is displayed. This is typically the initial day focused when using the keyboard navigation. Focus will be set to this date if available.\n   */\n  initialDateForCalendarRender: PropTypes.instanceOf(Date).isRequired,\n\n  /**\n   * Displayed calendar has changed or re-rendered\n   */\n  onChangeMonth: PropTypes.func.isRequired,\n\n  /**\n   * Offset of year from current year that can be selected in the year selection dropdown. (2017 - 5 = 2012).\n   */\n  relativeYearFrom: PropTypes.number,\n\n  /**\n   * Offset of year from current year that can be selected in the year selection dropdown. (2017 + 5 = 2012).\n   */\n  relativeYearTo: PropTypes.number\n});\n\nexport default DatepickerYearSelector;","map":{"version":3,"sources":["../../../../.tmp-es/components/date-picker/private/year-picklist.jsx"],"names":["DatepickerYearSelector","React","Component","assistiveTextYear","PropTypes","id","initialDateForCalendarRender","onChangeMonth","relativeYearFrom","relativeYearTo","number","now","fromYear","toYear","opts","year","label","value","String","selectedYear","option","selection","selectedValues","selectedValue","parseInt","onSelect","handleSelect","placeholder"],"mappings":"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","sourcesContent":["/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\nimport React from 'react';\n\nimport PropTypes from 'prop-types';\nimport Combobox from '../../combobox/combobox';\n\nclass DatepickerYearSelector extends React.Component {\n\tstatic displayName = 'SLDSDatepickerYearSelector';\n\n\tstatic propTypes = {\n\t\t/**\n\t\t * Label for year picklist/combobox\n\t\t */\n\t\tassistiveTextYear: PropTypes.string.isRequired,\n\t\t/**\n\t\t * HTML id for component\n\t\t */\n\t\tid: PropTypes.string,\n\t\t/**\n\t\t * Date used to create calendar that is displayed. This is typically the initial day focused when using the keyboard navigation. Focus will be set to this date if available.\n\t\t */\n\t\tinitialDateForCalendarRender: PropTypes.instanceOf(Date).isRequired,\n\t\t/**\n\t\t * Displayed calendar has changed or re-rendered\n\t\t */\n\t\tonChangeMonth: PropTypes.func.isRequired,\n\t\t/**\n\t\t * Offset of year from current year that can be selected in the year selection dropdown. (2017 - 5 = 2012).\n\t\t */\n\t\trelativeYearFrom: PropTypes.number,\n\t\t/**\n\t\t * Offset of year from current year that can be selected in the year selection dropdown. (2017 + 5 = 2012).\n\t\t */\n\t\trelativeYearTo: PropTypes.number,\n\t};\n\n\tgetOptions = () => {\n\t\tconst now = new Date();\n\t\tconst fromYear = now.getFullYear() + this.props.relativeYearFrom;\n\t\tconst toYear = now.getFullYear() + this.props.relativeYearTo;\n\t\tconst opts = [];\n\n\t\t// eslint-disable-next-line fp/no-loops\n\t\tfor (let year = fromYear; year < toYear; year += 1) {\n\t\t\t// eslint-disable-next-line fp/no-mutating-methods\n\t\t\topts.push({ label: `${year}`, value: year, id: String(opts.length) });\n\t\t}\n\t\treturn opts;\n\t};\n\n\tgetSelectedValueOption = () => {\n\t\tconst selectedYear = this.props.initialDateForCalendarRender.getFullYear();\n\t\treturn this.getOptions().filter((option) => option.value === selectedYear);\n\t};\n\n\thandleSelect = (event, { selection: selectedValues }) => {\n\t\tconst selectedValue = selectedValues[0]; // safe since we are working with a single selection\n\n\t\tif (selectedValue) {\n\t\t\tthis.props.onChangeMonth(\n\t\t\t\tnew Date(\n\t\t\t\t\tthis.props.initialDateForCalendarRender.setFullYear(\n\t\t\t\t\t\tparseInt(selectedValue.value, 10)\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\t};\n\n\trender() {\n\t\tconst selection = this.getSelectedValueOption();\n\t\treturn (\n\t\t\t<div className=\"slds-form-element slds-align-content-center\">\n\t\t\t\t<Combobox\n\t\t\t\t\tassistiveText={{ label: this.props.assistiveTextYear }}\n\t\t\t\t\tclassName=\"slds-shrink-none\"\n\t\t\t\t\tclassNameMenu=\"slds-datepicker\"\n\t\t\t\t\tevents={{\n\t\t\t\t\t\tonSelect: this.handleSelect,\n\t\t\t\t\t}}\n\t\t\t\t\tid={`${this.props.id}-year-picklist`}\n\t\t\t\t\tinheritWidthOf=\"target\"\n\t\t\t\t\tmenuPosition=\"relative\"\n\t\t\t\t\tmultiple={false}\n\t\t\t\t\toptions={this.getOptions()}\n\t\t\t\t\tlabels={{\n\t\t\t\t\t\tplaceholder: 'Year',\n\t\t\t\t\t}}\n\t\t\t\t\tselection={selection}\n\t\t\t\t\tvalue={selection.value}\n\t\t\t\t\tvariant=\"readonly\"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default DatepickerYearSelector;\n"]},"metadata":{},"sourceType":"module"}