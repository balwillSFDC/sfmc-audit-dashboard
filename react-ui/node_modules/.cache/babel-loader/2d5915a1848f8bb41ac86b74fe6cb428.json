{"ast":null,"code":"function ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\n\nimport React from 'react';\nimport PropTypes from 'prop-types'; // ### classNames\n// [github.com/JedWatson/classnames](https://github.com/JedWatson/classnames)\n// This project uses `classnames`, \"a simple javascript utility for conditionally\n// joining classNames together.\"\n\nimport classNames from 'classnames';\nimport EventUtil from '../../../utilities/event';\nimport DateUtil from '../../../utilities/date';\nimport KEYS from '../../../utilities/key-code';\nimport { DIRECTIONS } from '../../utilities/UNSAFE_direction';\nimport LanguageDirection from '../../utilities/UNSAFE_direction/private/language-direction';\n\nvar handleClick = function handleClick(event, _ref) {\n  var date = _ref.date,\n      onSelectDate = _ref.onSelectDate;\n  onSelectDate(event, {\n    date: date\n  });\n};\n\nvar handleKeyDown = function handleKeyDown(event, _ref2) {\n  var _keyDownCallbacks;\n\n  var date = _ref2.date,\n      onCalendarBlur = _ref2.onCalendarBlur,\n      onSelectDate = _ref2.onSelectDate,\n      onKeyboardNavigateToPreviousDay = _ref2.onKeyboardNavigateToPreviousDay,\n      onKeyboardNavigateToNextDay = _ref2.onKeyboardNavigateToNextDay,\n      onKeyboardNavigateToPreviousWeek = _ref2.onKeyboardNavigateToPreviousWeek,\n      onKeyboardNavigateToNextWeek = _ref2.onKeyboardNavigateToNextWeek,\n      direction = _ref2.direction;\n  var keyDownCallbacks = (_keyDownCallbacks = {}, _defineProperty(_keyDownCallbacks, KEYS.SPACE, function () {\n    onSelectDate(event, {\n      date: date\n    });\n  }), _defineProperty(_keyDownCallbacks, KEYS.ENTER, function () {\n    onSelectDate(event, {\n      date: date\n    });\n  }), _defineProperty(_keyDownCallbacks, KEYS.TAB, function () {\n    onCalendarBlur(event, {\n      direction: 'next'\n    });\n  }), _defineProperty(_keyDownCallbacks, KEYS.LEFT, function () {\n    if (direction === DIRECTIONS.RTL) {\n      onKeyboardNavigateToNextDay(event, {\n        date: date\n      });\n    } else {\n      onKeyboardNavigateToPreviousDay(event, {\n        date: date\n      });\n    }\n  }), _defineProperty(_keyDownCallbacks, KEYS.RIGHT, function () {\n    if (direction === DIRECTIONS.RTL) {\n      onKeyboardNavigateToPreviousDay(event, {\n        date: date\n      });\n    } else {\n      onKeyboardNavigateToNextDay(event, {\n        date: date\n      });\n    }\n  }), _defineProperty(_keyDownCallbacks, KEYS.UP, function () {\n    onKeyboardNavigateToPreviousWeek(event, {\n      date: date\n    });\n  }), _defineProperty(_keyDownCallbacks, KEYS.DOWN, function () {\n    onKeyboardNavigateToNextWeek(event, {\n      date: date\n    });\n  }), _keyDownCallbacks);\n\n  var shiftKeyDownCallbacks = _defineProperty({}, KEYS.TAB, function () {\n    onCalendarBlur(event, {\n      direction: 'previous'\n    });\n  });\n\n  if (event.keyCode) {\n    if (event.shiftKey && keyDownCallbacks[event.keyCode]) {\n      EventUtil.trapEvent(event);\n      shiftKeyDownCallbacks[event.keyCode]();\n    } else if (keyDownCallbacks[event.keyCode]) {\n      EventUtil.trapEvent(event);\n      keyDownCallbacks[event.keyCode]();\n    }\n  }\n};\n\nvar DatepickerCalendarDay = function DatepickerCalendarDay(props) {\n  var isCurrentMonth = DateUtil.isSameMonth(props.date, props.initialDateForCalendarRender);\n  var isToday = DateUtil.isToday(props.date);\n  var isSelectedDay = DateUtil.isSameDay(props.date, props.selectedDate);\n  var isFirstDayOfMonth = DateUtil.isFirstDayOfMonth(props.date);\n  var isDisabled = !isCurrentMonth || props.disabled;\n  return (\n    /*#__PURE__*/\n\n    /* eslint-disable jsx-a11y/no-static-element-interactions */\n    React.createElement(\"td\", {\n      \"aria-disabled\": isDisabled,\n      \"aria-selected\": isSelectedDay,\n      className: classNames({\n        'slds-is-today': isToday,\n        'slds-disabled-text': isDisabled,\n        'slds-is-selected': isSelectedDay\n      }),\n      onClick: function onClick(event) {\n        handleClick(event, {\n          date: props.date,\n          onSelectDate: props.onSelectDate\n        });\n      },\n      onKeyDown: function onKeyDown(event) {\n        handleKeyDown(event, _objectSpread({}, props));\n      },\n      ref: function ref(component) {\n        if (isSelectedDay) {\n          props.selectedDateRef(component);\n        }\n\n        if (props.calendarHasFocus && DateUtil.isSameDay(props.focusedDate, props.date) && isCurrentMonth) {\n          props.onRequestInternalFocusDate(undefined, {\n            date: props.date,\n            ref: component\n          });\n        }\n      },\n      role: \"gridcell\",\n      tabIndex: !props.calendarHasFocus && isFirstDayOfMonth && isCurrentMonth ? 0 : -1\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"slds-day\"\n    }, isToday ? /*#__PURE__*/React.createElement(\"span\", {\n      className: \"slds-assistive-text\"\n    }, \"\".concat(props.todayLabel, \": \")) : null, props.date.getDate()))\n  );\n};\n\nDatepickerCalendarDay.displayName = 'SLDSDatepickerCalendarDay';\nDatepickerCalendarDay.propTypes = {\n  /**\n   * If elements within the calendar have focus. This is helpful for keyboard event trapping.\n   */\n  calendarHasFocus: PropTypes.bool.isRequired,\n\n  /**\n   * Date of day\n   */\n  date: PropTypes.instanceOf(Date).isRequired,\n\n  /**\n   * If date is disabled\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Date used to create calendar that is displayed. This is typically the initial day focused when using the keyboard navigation. Focus will be set to this date if available.\n   */\n  initialDateForCalendarRender: PropTypes.instanceOf(Date).isRequired,\n\n  /**\n   * Triggered when the keyboard moves focus off the calendar.\n   */\n  onCalendarBlur: PropTypes.func.isRequired,\n\n  /**\n   * For keyboard navigation. Changes the focus to the next day on the calendar. Triggered when right arrow button is pressed.\n   */\n  onKeyboardNavigateToNextDay: PropTypes.func.isRequired,\n\n  /**\n   * For keyboard navigation. Changes the focus to the same day in the next week on the calendar. Triggered when down arrow button is pressed.\n   */\n  onKeyboardNavigateToNextWeek: PropTypes.func.isRequired,\n\n  /**\n   * For keyboard navigation. Changes the focus to the previous day on the calendar. Triggered when left arrow button is pressed.\n   */\n  onKeyboardNavigateToPreviousDay: PropTypes.func.isRequired,\n\n  /**\n   * For keyboard navigation. Changes the focus to the same day in the previous week on the calendar. Triggered when up arrow button is pressed.\n   */\n  onKeyboardNavigateToPreviousWeek: PropTypes.func.isRequired,\n\n  /**\n   * Triggered when a date on the calendar is clicked.\n   */\n  onSelectDate: PropTypes.func.isRequired,\n\n  /**\n   * Currently selected date. This should be present in the input field.\n   */\n  selectedDate: PropTypes.instanceOf(Date).isRequired,\n\n  /**\n   * Component reference / DOM node for selected day.\n   */\n  selectedDateRef: PropTypes.func.isRequired,\n\n  /**\n   * Label of shortcut to jump to today within the calendar. Also used for assistive text for the current day.\n   */\n  todayLabel: PropTypes.string.isRequired,\n  focusedDate: PropTypes.instanceOf(Date),\n  onRequestInternalFocusDate: PropTypes.func\n};\nexport default LanguageDirection(DatepickerCalendarDay);","map":{"version":3,"sources":["../../../../.tmp-es/components/date-picker/private/day.jsx"],"names":["handleClick","date","onSelectDate","handleKeyDown","onCalendarBlur","onKeyboardNavigateToPreviousDay","onKeyboardNavigateToNextDay","onKeyboardNavigateToPreviousWeek","onKeyboardNavigateToNextWeek","direction","keyDownCallbacks","KEYS","DIRECTIONS","shiftKeyDownCallbacks","event","EventUtil","DatepickerCalendarDay","isCurrentMonth","DateUtil","props","isToday","isSelectedDay","isFirstDayOfMonth","isDisabled","classNames","ref","component","calendarHasFocus","PropTypes","disabled","initialDateForCalendarRender","selectedDate","selectedDateRef","todayLabel","focusedDate","onRequestInternalFocusDate","func","LanguageDirection"],"mappings":"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","sourcesContent":["/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\n// ### classNames\n// [github.com/JedWatson/classnames](https://github.com/JedWatson/classnames)\n// This project uses `classnames`, \"a simple javascript utility for conditionally\n// joining classNames together.\"\nimport classNames from 'classnames';\n\nimport EventUtil from '../../../utilities/event';\nimport DateUtil from '../../../utilities/date';\nimport KEYS from '../../../utilities/key-code';\n\nimport { DIRECTIONS } from '../../utilities/UNSAFE_direction';\nimport LanguageDirection from '../../utilities/UNSAFE_direction/private/language-direction';\n\nconst handleClick = (event, { date, onSelectDate }) => {\n\tonSelectDate(event, { date });\n};\n\nconst handleKeyDown = (\n\tevent,\n\t{\n\t\tdate,\n\t\tonCalendarBlur,\n\t\tonSelectDate,\n\t\tonKeyboardNavigateToPreviousDay,\n\t\tonKeyboardNavigateToNextDay,\n\t\tonKeyboardNavigateToPreviousWeek,\n\t\tonKeyboardNavigateToNextWeek,\n\t\tdirection,\n\t}\n) => {\n\tconst keyDownCallbacks = {\n\t\t[KEYS.SPACE]: () => {\n\t\t\tonSelectDate(event, { date });\n\t\t},\n\t\t[KEYS.ENTER]: () => {\n\t\t\tonSelectDate(event, { date });\n\t\t},\n\t\t[KEYS.TAB]: () => {\n\t\t\tonCalendarBlur(event, { direction: 'next' });\n\t\t},\n\t\t[KEYS.LEFT]: () => {\n\t\t\tif (direction === DIRECTIONS.RTL) {\n\t\t\t\tonKeyboardNavigateToNextDay(event, { date });\n\t\t\t} else {\n\t\t\t\tonKeyboardNavigateToPreviousDay(event, { date });\n\t\t\t}\n\t\t},\n\t\t[KEYS.RIGHT]: () => {\n\t\t\tif (direction === DIRECTIONS.RTL) {\n\t\t\t\tonKeyboardNavigateToPreviousDay(event, { date });\n\t\t\t} else {\n\t\t\t\tonKeyboardNavigateToNextDay(event, { date });\n\t\t\t}\n\t\t},\n\t\t[KEYS.UP]: () => {\n\t\t\tonKeyboardNavigateToPreviousWeek(event, { date });\n\t\t},\n\t\t[KEYS.DOWN]: () => {\n\t\t\tonKeyboardNavigateToNextWeek(event, { date });\n\t\t},\n\t};\n\n\tconst shiftKeyDownCallbacks = {\n\t\t[KEYS.TAB]: () => {\n\t\t\tonCalendarBlur(event, { direction: 'previous' });\n\t\t},\n\t};\n\n\tif (event.keyCode) {\n\t\tif (event.shiftKey && keyDownCallbacks[event.keyCode]) {\n\t\t\tEventUtil.trapEvent(event);\n\t\t\tshiftKeyDownCallbacks[event.keyCode]();\n\t\t} else if (keyDownCallbacks[event.keyCode]) {\n\t\t\tEventUtil.trapEvent(event);\n\t\t\tkeyDownCallbacks[event.keyCode]();\n\t\t}\n\t}\n};\n\nconst DatepickerCalendarDay = (props) => {\n\tconst isCurrentMonth = DateUtil.isSameMonth(\n\t\tprops.date,\n\t\tprops.initialDateForCalendarRender\n\t);\n\tconst isToday = DateUtil.isToday(props.date);\n\tconst isSelectedDay = DateUtil.isSameDay(props.date, props.selectedDate);\n\tconst isFirstDayOfMonth = DateUtil.isFirstDayOfMonth(props.date);\n\tconst isDisabled = !isCurrentMonth || props.disabled;\n\n\treturn (\n\t\t/* eslint-disable jsx-a11y/no-static-element-interactions */\n\t\t<td\n\t\t\taria-disabled={isDisabled}\n\t\t\taria-selected={isSelectedDay}\n\t\t\tclassName={classNames({\n\t\t\t\t'slds-is-today': isToday,\n\t\t\t\t'slds-disabled-text': isDisabled,\n\t\t\t\t'slds-is-selected': isSelectedDay,\n\t\t\t})}\n\t\t\tonClick={(event) => {\n\t\t\t\thandleClick(event, {\n\t\t\t\t\tdate: props.date,\n\t\t\t\t\tonSelectDate: props.onSelectDate,\n\t\t\t\t});\n\t\t\t}}\n\t\t\tonKeyDown={(event) => {\n\t\t\t\thandleKeyDown(event, {\n\t\t\t\t\t...props,\n\t\t\t\t});\n\t\t\t}}\n\t\t\tref={(component) => {\n\t\t\t\tif (isSelectedDay) {\n\t\t\t\t\tprops.selectedDateRef(component);\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\tprops.calendarHasFocus &&\n\t\t\t\t\tDateUtil.isSameDay(props.focusedDate, props.date) &&\n\t\t\t\t\tisCurrentMonth\n\t\t\t\t) {\n\t\t\t\t\tprops.onRequestInternalFocusDate(undefined, {\n\t\t\t\t\t\tdate: props.date,\n\t\t\t\t\t\tref: component,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}}\n\t\t\trole=\"gridcell\"\n\t\t\ttabIndex={\n\t\t\t\t!props.calendarHasFocus && isFirstDayOfMonth && isCurrentMonth ? 0 : -1\n\t\t\t}\n\t\t>\n\t\t\t{/* eslint-enable jsx-a11y/no-static-element-interactions */}\n\t\t\t<span className=\"slds-day\">\n\t\t\t\t{isToday ? (\n\t\t\t\t\t<span className=\"slds-assistive-text\">{`${props.todayLabel}: `}</span>\n\t\t\t\t) : null}\n\t\t\t\t{props.date.getDate()}\n\t\t\t</span>\n\t\t</td>\n\t);\n};\n\nDatepickerCalendarDay.displayName = 'SLDSDatepickerCalendarDay';\n\nDatepickerCalendarDay.propTypes = {\n\t/**\n\t * If elements within the calendar have focus. This is helpful for keyboard event trapping.\n\t */\n\tcalendarHasFocus: PropTypes.bool.isRequired,\n\t/**\n\t * Date of day\n\t */\n\tdate: PropTypes.instanceOf(Date).isRequired,\n\t/**\n\t * If date is disabled\n\t */\n\tdisabled: PropTypes.bool,\n\t/**\n\t * Date used to create calendar that is displayed. This is typically the initial day focused when using the keyboard navigation. Focus will be set to this date if available.\n\t */\n\tinitialDateForCalendarRender: PropTypes.instanceOf(Date).isRequired,\n\t/**\n\t * Triggered when the keyboard moves focus off the calendar.\n\t */\n\tonCalendarBlur: PropTypes.func.isRequired,\n\t/**\n\t * For keyboard navigation. Changes the focus to the next day on the calendar. Triggered when right arrow button is pressed.\n\t */\n\tonKeyboardNavigateToNextDay: PropTypes.func.isRequired,\n\t/**\n\t * For keyboard navigation. Changes the focus to the same day in the next week on the calendar. Triggered when down arrow button is pressed.\n\t */\n\tonKeyboardNavigateToNextWeek: PropTypes.func.isRequired,\n\t/**\n\t * For keyboard navigation. Changes the focus to the previous day on the calendar. Triggered when left arrow button is pressed.\n\t */\n\tonKeyboardNavigateToPreviousDay: PropTypes.func.isRequired,\n\t/**\n\t * For keyboard navigation. Changes the focus to the same day in the previous week on the calendar. Triggered when up arrow button is pressed.\n\t */\n\tonKeyboardNavigateToPreviousWeek: PropTypes.func.isRequired,\n\t/**\n\t * Triggered when a date on the calendar is clicked.\n\t */\n\tonSelectDate: PropTypes.func.isRequired,\n\t/**\n\t * Currently selected date. This should be present in the input field.\n\t */\n\tselectedDate: PropTypes.instanceOf(Date).isRequired,\n\t/**\n\t * Component reference / DOM node for selected day.\n\t */\n\tselectedDateRef: PropTypes.func.isRequired,\n\t/**\n\t * Label of shortcut to jump to today within the calendar. Also used for assistive text for the current day.\n\t */\n\ttodayLabel: PropTypes.string.isRequired,\n\tfocusedDate: PropTypes.instanceOf(Date),\n\tonRequestInternalFocusDate: PropTypes.func,\n};\n\nexport default LanguageDirection(DatepickerCalendarDay);\n"]},"metadata":{},"sourceType":"module"}