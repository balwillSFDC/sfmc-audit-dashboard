{"ast":null,"code":"/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n// # FileFigure Component\n// Implements the [FileFigure design pattern](https://www.lightningdesignsystem.com/components/files/) in React.\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { FILES_FIGURE } from '../../../utilities/constants';\nimport Spinner from '../../spinner';\n/**\n * A file can have a image, an icon or a loading animation as its thumbnail\n */\n\nvar FileFigure = function FileFigure(props) {\n  if (props.isLoading) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"slds-assistive-text\"\n    }, props.assistiveText.link), /*#__PURE__*/React.createElement(Spinner, {\n      size: \"medium\",\n      variant: \"base\",\n      assistiveText: {\n        label: props.assistiveText.loading\n      },\n      containerStyle: {\n        zIndex: '1'\n      }\n    }));\n  }\n\n  if (props.image) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"slds-assistive-text\"\n    }, props.assistiveText.link), /*#__PURE__*/React.createElement(\"img\", {\n      alt: props.assistiveText.image || props.labels.title,\n      src: props.image\n    }));\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"slds-assistive-text\"\n  }, props.assistiveText.link), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"slds-file__icon slds-icon_container\",\n    title: props.labels.title\n  }, /*#__PURE__*/React.cloneElement(props.icon, {\n    size: null\n  })));\n};\n\nFileFigure.displayName = FILES_FIGURE;\nFileFigure.propTypes = {\n  assistiveText: PropTypes.shape({\n    image: PropTypes.string\n  }),\n\n  /**\n   *  Whether the file figure is loading\n   */\n  isLoading: PropTypes.bool,\n\n  /**\n   *  Image/Figure for the file\n   */\n  image: PropTypes.string,\n\n  /**\n   *  Labels for the file figure component\n   */\n  labels: PropTypes.shape({\n    title: PropTypes.string.isRequired\n  })\n};\nFileFigure.defaultProps = {\n  isLoading: false\n};\nexport default FileFigure;","map":{"version":3,"sources":["../../../../.tmp-es/components/files/private/file-figure.jsx"],"names":["FileFigure","props","label","loading","zIndex","image","title","size","assistiveText","PropTypes","string","isLoading","labels","isRequired"],"mappings":"AAAA;;AACA;AAEA;AAEA;AAEA,OAAA,KAAA,MAAA,OAAA;AACA,OAAA,SAAA,MAAA,YAAA;AAEA,SAAA,YAAA,QAAA,8BAAA;AAEA,OAAA,OAAA,MAAA,eAAA;AAEA;AACA;AACA;;AACA,IAAMA,UAAU,GAAG,SAAbA,UAAa,CAAA,KAAA,EAAW;AAC7B,MAAIC,KAAK,CAAT,SAAA,EAAqB;AACpB,WAAA,aACC,KAAA,CAAA,aAAA,CAAC,KAAD,CAAA,QAAA,EAAA,IAAA,EAAA,aACC,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AAAM,MAAA,SAAS,EAAC;AAAhB,KAAA,EAAuCA,KAAK,CAALA,aAAAA,CADxC,IACC,CADD,EAAA,aAEC,KAAA,CAAA,aAAA,CAAA,OAAA,EAAA;AACC,MAAA,IAAI,EADL,QAAA;AAEC,MAAA,OAAO,EAFR,MAAA;AAGC,MAAA,aAAa,EAAE;AAAEC,QAAAA,KAAK,EAAED,KAAK,CAALA,aAAAA,CAAoBE;AAA7B,OAHhB;AAIC,MAAA,cAAc,EAAE;AAAEC,QAAAA,MAAM,EAAE;AAAV;AAJjB,KAAA,CAFD,CADD;AAWA;;AACD,MAAIH,KAAK,CAAT,KAAA,EAAiB;AAChB,WAAA,aACC,KAAA,CAAA,aAAA,CAAC,KAAD,CAAA,QAAA,EAAA,IAAA,EAAA,aACC,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AAAM,MAAA,SAAS,EAAC;AAAhB,KAAA,EAAuCA,KAAK,CAALA,aAAAA,CADxC,IACC,CADD,EAAA,aAEC,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AACC,MAAA,GAAG,EAAEA,KAAK,CAALA,aAAAA,CAAAA,KAAAA,IAA6BA,KAAK,CAALA,MAAAA,CADnC,KAAA;AAEC,MAAA,GAAG,EAAEA,KAAK,CAACI;AAFZ,KAAA,CAFD,CADD;AASA;;AACD,SAAA,aACC,KAAA,CAAA,aAAA,CAAC,KAAD,CAAA,QAAA,EAAA,IAAA,EAAA,aACC,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AAAM,IAAA,SAAS,EAAC;AAAhB,GAAA,EAAuCJ,KAAK,CAALA,aAAAA,CADxC,IACC,CADD,EAAA,aAEC,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AACC,IAAA,SAAS,EADV,qCAAA;AAEC,IAAA,KAAK,EAAEA,KAAK,CAALA,MAAAA,CAAaK;AAFrB,GAAA,EAAA,aAIE,KAAK,CAAL,YAAA,CAAmBL,KAAK,CAAxB,IAAA,EAA+B;AAC/BM,IAAAA,IAAI,EAAE;AADyB,GAA/B,CAJF,CAFD,CADD;AAzBD,CAAA;;AAwCAP,UAAU,CAAVA,WAAAA,GAAAA,YAAAA;AAEAA,UAAU,CAAVA,SAAAA,GAAuB;AACtBQ,EAAAA,aAAa,EAAE,SAAS,CAAT,KAAA,CAAgB;AAC9BH,IAAAA,KAAK,EAAEI,SAAS,CAACC;AADa,GAAhB,CADO;;AAItB;AACD;AACA;AACCC,EAAAA,SAAS,EAAEF,SAAS,CAPE,IAAA;;AAQtB;AACD;AACA;AACCJ,EAAAA,KAAK,EAAEI,SAAS,CAXM,MAAA;;AAYtB;AACD;AACA;AACCG,EAAAA,MAAM,EAAE,SAAS,CAAT,KAAA,CAAgB;AACvBN,IAAAA,KAAK,EAAEG,SAAS,CAATA,MAAAA,CAAiBI;AADD,GAAhB;AAfc,CAAvBb;AAoBAA,UAAU,CAAVA,YAAAA,GAA0B;AACzBW,EAAAA,SAAS,EAAE;AADc,CAA1BX;AAIA,eAAA,UAAA","sourcesContent":["/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\n// # FileFigure Component\n\n// Implements the [FileFigure design pattern](https://www.lightningdesignsystem.com/components/files/) in React.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { FILES_FIGURE } from '../../../utilities/constants';\n\nimport Spinner from '../../spinner';\n\n/**\n * A file can have a image, an icon or a loading animation as its thumbnail\n */\nconst FileFigure = (props) => {\n\tif (props.isLoading) {\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<span className=\"slds-assistive-text\">{props.assistiveText.link}</span>\n\t\t\t\t<Spinner\n\t\t\t\t\tsize=\"medium\"\n\t\t\t\t\tvariant=\"base\"\n\t\t\t\t\tassistiveText={{ label: props.assistiveText.loading }}\n\t\t\t\t\tcontainerStyle={{ zIndex: '1' }}\n\t\t\t\t/>\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n\tif (props.image) {\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<span className=\"slds-assistive-text\">{props.assistiveText.link}</span>\n\t\t\t\t<img\n\t\t\t\t\talt={props.assistiveText.image || props.labels.title}\n\t\t\t\t\tsrc={props.image}\n\t\t\t\t/>\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<span className=\"slds-assistive-text\">{props.assistiveText.link}</span>\n\t\t\t<span\n\t\t\t\tclassName=\"slds-file__icon slds-icon_container\"\n\t\t\t\ttitle={props.labels.title}\n\t\t\t>\n\t\t\t\t{React.cloneElement(props.icon, {\n\t\t\t\t\tsize: null,\n\t\t\t\t})}\n\t\t\t</span>\n\t\t</React.Fragment>\n\t);\n};\n\nFileFigure.displayName = FILES_FIGURE;\n\nFileFigure.propTypes = {\n\tassistiveText: PropTypes.shape({\n\t\timage: PropTypes.string,\n\t}),\n\t/**\n\t *  Whether the file figure is loading\n\t */\n\tisLoading: PropTypes.bool,\n\t/**\n\t *  Image/Figure for the file\n\t */\n\timage: PropTypes.string,\n\t/**\n\t *  Labels for the file figure component\n\t */\n\tlabels: PropTypes.shape({\n\t\ttitle: PropTypes.string.isRequired,\n\t}),\n};\n\nFileFigure.defaultProps = {\n\tisLoading: false,\n};\n\nexport default FileFigure;\n"]},"metadata":{},"sourceType":"module"}