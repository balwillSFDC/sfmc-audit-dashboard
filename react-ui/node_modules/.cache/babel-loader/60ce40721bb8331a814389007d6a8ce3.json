{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n// Implements the [Visual Picker Link design pattern](https://lightningdesignsystem.com/components/visual-picker/) in React.\n// Based on SLDS v2.4.5\n\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { VISUAL_PICKER_LINK } from '../../utilities/constants';\nvar propTypes = {\n  /**\n   * HTML id for component.\n   */\n  id: PropTypes.string,\n\n  /**\n   * CSS classes to be added to tag with `.slds-form-element`. Uses `classNames` [API](https://github.com/JedWatson/classnames).\n   */\n  className: PropTypes.oneOfType([PropTypes.array, PropTypes.object, PropTypes.string]),\n\n  /**\n   * URL for the Link\n   */\n  href: PropTypes.string,\n\n  /**\n   * Icon node for the Link\n   */\n  icon: PropTypes.node,\n\n  /**\n   * Title for the Link\n   */\n  title: PropTypes.string,\n\n  /**\n   * Description for the Link\n   */\n  description: PropTypes.string\n};\n/**\n * Visual Picker Link Component\n */\n\nvar VisualPickerLink = /*#__PURE__*/function (_React$Component) {\n  _inherits(VisualPickerLink, _React$Component);\n\n  var _super = _createSuper(VisualPickerLink);\n\n  function VisualPickerLink() {\n    _classCallCheck(this, VisualPickerLink);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(VisualPickerLink, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"a\", {\n        href: this.props.href,\n        id: this.props.id,\n        className: classNames('slds-box', 'slds-box_link', 'slds-theme_default', 'slds-box_x-small', 'slds-media', 'slds-visual-picker_vertical', this.props.className)\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"slds-media__figure slds-media__figure_fixed-width slds-align_absolute-center slds-m-left_xx-small\"\n      }, this.props.icon), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"slds-media__body slds-border_left slds-p-around_small\"\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        className: \"slds-truncate slds-text-heading_small\",\n        title: this.props.title\n      }, this.props.title), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"slds-m-top_small\"\n      }, this.props.description)));\n    }\n  }]);\n\n  return VisualPickerLink;\n}(React.Component);\n\nVisualPickerLink.displayName = VISUAL_PICKER_LINK;\nVisualPickerLink.propTypes = propTypes;\nexport default VisualPickerLink;","map":{"version":3,"sources":["../../../.tmp-es/components/visual-picker/link.jsx"],"names":["propTypes","id","PropTypes","className","href","icon","title","description","string","VisualPickerLink","React","Component","classNames"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;AAEA;AACA;;;AACA,OAAA,KAAA,MAAA,OAAA;AACA,OAAA,SAAA,MAAA,YAAA;AACA,OAAA,UAAA,MAAA,YAAA;AAEA,SAAA,kBAAA,QAAA,2BAAA;AAEA,IAAMA,SAAS,GAAG;AACjB;AACD;AACA;AACCC,EAAAA,EAAE,EAAEC,SAAS,CAJI,MAAA;;AAKjB;AACD;AACA;AACCC,EAAAA,SAAS,EAAED,SAAS,CAATA,SAAAA,CAAoB,CAC9BA,SAAS,CADqB,KAAA,EAE9BA,SAAS,CAFqB,MAAA,EAG9BA,SAAS,CAXO,MAQc,CAApBA,CARM;;AAajB;AACD;AACA;AACCE,EAAAA,IAAI,EAAEF,SAAS,CAhBE,MAAA;;AAiBjB;AACD;AACA;AACCG,EAAAA,IAAI,EAAEH,SAAS,CApBE,IAAA;;AAqBjB;AACD;AACA;AACCI,EAAAA,KAAK,EAAEJ,SAAS,CAxBC,MAAA;;AAyBjB;AACD;AACA;AACCK,EAAAA,WAAW,EAAEL,SAAS,CAACM;AA5BN,CAAlB;AA+BA;AACA;AACA;;IACMC,gB;;;;;;;;;;;;;6BACI;AACR,aAAA,aACC,KAAA,CAAA,aAAA,CAAA,GAAA,EAAA;AACC,QAAA,IAAI,EAAE,KAAA,KAAA,CADP,IAAA;AAEC,QAAA,EAAE,EAAE,KAAA,KAAA,CAFL,EAAA;AAGC,QAAA,SAAS,EAAEG,UAAU,CAAA,UAAA,EAAA,eAAA,EAAA,oBAAA,EAAA,kBAAA,EAAA,YAAA,EAAA,6BAAA,EAOpB,KAAA,KAAA,CAPoB,SAAA;AAHtB,OAAA,EAAA,aAaC,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,QAAA,SAAS,EAAC;AAAf,OAAA,EACE,KAAA,KAAA,CAdH,IAaC,CAbD,EAAA,aAgBC,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,QAAA,SAAS,EAAC;AAAf,OAAA,EAAA,aACC,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA;AACC,QAAA,SAAS,EADV,uCAAA;AAEC,QAAA,KAAK,EAAE,KAAA,KAAA,CAAWN;AAFnB,OAAA,EAIE,KAAA,KAAA,CALH,KACC,CADD,EAAA,aAOC,KAAA,CAAA,aAAA,CAAA,GAAA,EAAA;AAAG,QAAA,SAAS,EAAC;AAAb,OAAA,EAAiC,KAAA,KAAA,CAxBpC,WAwBG,CAPD,CAhBD,CADD;AA4BA;;;;EA9B6BI,KAAK,CAACC,S;;AAgCrCF,gBAAgB,CAAhBA,WAAAA,GAAAA,kBAAAA;AACAA,gBAAgB,CAAhBA,SAAAA,GAAAA,SAAAA;AAEA,eAAA,gBAAA","sourcesContent":["/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\n// Implements the [Visual Picker Link design pattern](https://lightningdesignsystem.com/components/visual-picker/) in React.\n// Based on SLDS v2.4.5\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport { VISUAL_PICKER_LINK } from '../../utilities/constants';\n\nconst propTypes = {\n\t/**\n\t * HTML id for component.\n\t */\n\tid: PropTypes.string,\n\t/**\n\t * CSS classes to be added to tag with `.slds-form-element`. Uses `classNames` [API](https://github.com/JedWatson/classnames).\n\t */\n\tclassName: PropTypes.oneOfType([\n\t\tPropTypes.array,\n\t\tPropTypes.object,\n\t\tPropTypes.string,\n\t]),\n\t/**\n\t * URL for the Link\n\t */\n\thref: PropTypes.string,\n\t/**\n\t * Icon node for the Link\n\t */\n\ticon: PropTypes.node,\n\t/**\n\t * Title for the Link\n\t */\n\ttitle: PropTypes.string,\n\t/**\n\t * Description for the Link\n\t */\n\tdescription: PropTypes.string,\n};\n\n/**\n * Visual Picker Link Component\n */\nclass VisualPickerLink extends React.Component {\n\trender() {\n\t\treturn (\n\t\t\t<a\n\t\t\t\thref={this.props.href}\n\t\t\t\tid={this.props.id}\n\t\t\t\tclassName={classNames(\n\t\t\t\t\t'slds-box',\n\t\t\t\t\t'slds-box_link',\n\t\t\t\t\t'slds-theme_default',\n\t\t\t\t\t'slds-box_x-small',\n\t\t\t\t\t'slds-media',\n\t\t\t\t\t'slds-visual-picker_vertical',\n\t\t\t\t\tthis.props.className\n\t\t\t\t)}\n\t\t\t>\n\t\t\t\t<div className=\"slds-media__figure slds-media__figure_fixed-width slds-align_absolute-center slds-m-left_xx-small\">\n\t\t\t\t\t{this.props.icon}\n\t\t\t\t</div>\n\t\t\t\t<div className=\"slds-media__body slds-border_left slds-p-around_small\">\n\t\t\t\t\t<h2\n\t\t\t\t\t\tclassName=\"slds-truncate slds-text-heading_small\"\n\t\t\t\t\t\ttitle={this.props.title}\n\t\t\t\t\t>\n\t\t\t\t\t\t{this.props.title}\n\t\t\t\t\t</h2>\n\t\t\t\t\t<p className=\"slds-m-top_small\">{this.props.description}</p>\n\t\t\t\t</div>\n\t\t\t</a>\n\t\t);\n\t}\n}\nVisualPickerLink.displayName = VISUAL_PICKER_LINK;\nVisualPickerLink.propTypes = propTypes;\n\nexport default VisualPickerLink;\n"]},"metadata":{},"sourceType":"module"}