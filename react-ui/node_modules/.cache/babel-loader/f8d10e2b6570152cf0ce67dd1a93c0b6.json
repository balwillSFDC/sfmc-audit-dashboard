{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\n/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\n// # Global Header Dropdown Component\n// ## Dependencies\n// ### React\n\n\nimport React from 'react';\nimport PropTypes from 'prop-types'; // ### classNames\n// [github.com/JedWatson/classnames](https://github.com/JedWatson/classnames)\n// This project uses `classnames`, \"a simple javascript utility for conditionally\n// joining classNames together.\"\n\nimport classnames from 'classnames'; // ### Dropdown\n\nimport Button from '../button'; // ### Children\n\nimport { MENU_DROPDOWN_TRIGGER } from '../../../utilities/constants';\n/**\n *  The Dropdown Button Trigger renders the default trigger button for the dropdown menu. If this component has children, it does not render itself to the DOM. Instead, it renders its child element, `Button`, and all that child's properties. This component may be used as a template to create custom triggers that do not use `Button`.\n */\n\nvar GlobalHeaderDropdownTrigger = /*#__PURE__*/function (_React$Component) {\n  _inherits(GlobalHeaderDropdownTrigger, _React$Component);\n\n  var _super = _createSuper(GlobalHeaderDropdownTrigger);\n\n  function GlobalHeaderDropdownTrigger() {\n    var _this;\n\n    _classCallCheck(this, GlobalHeaderDropdownTrigger);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"renderAvatar\", function () {\n      var avatar = _this.props.avatar;\n\n      if (typeof avatar === 'string') {\n        return /*#__PURE__*/React.createElement(\"span\", {\n          className: \"slds-avatar slds-avatar_circle slds-avatar_medium\"\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          src: avatar,\n          alt: \"\"\n        }));\n      }\n\n      return avatar || null;\n    });\n\n    return _this;\n  }\n\n  _createClass(GlobalHeaderDropdownTrigger, [{\n    key: \"render\",\n    // ### Render\n    value: function render() {\n      // The following props are provided to the `li`, all others are passed into the `Button`\n      var _this$props = this.props,\n          className = _this$props.className,\n          id = _this$props.id,\n          isOpen = _this$props.isOpen,\n          globalAction = _this$props.globalAction,\n          menu = _this$props.menu,\n          onBlur = _this$props.onBlur,\n          onClick = _this$props.onClick,\n          onFocus = _this$props.onFocus,\n          onKeyDown = _this$props.onKeyDown,\n          onMouseDown = _this$props.onMouseDown,\n          onMouseEnter = _this$props.onMouseEnter,\n          onMouseLeave = _this$props.onMouseLeave,\n          triggerRef = _this$props.triggerRef,\n          rest = _objectWithoutProperties(_this$props, [\"className\", \"id\", \"isOpen\", \"globalAction\", \"menu\", \"onBlur\", \"onClick\", \"onFocus\", \"onKeyDown\", \"onMouseDown\", \"onMouseEnter\", \"onMouseLeave\", \"triggerRef\"]);\n\n      return (\n        /*#__PURE__*/\n\n        /* eslint-disable jsx-a11y/no-static-element-interactions */\n        // eslint-disable-next-line jsx-a11y/role-supports-aria-props\n        React.createElement(\"li\", {\n          \"aria-haspopup\": \"true\",\n          className: classnames('slds-dropdown-trigger slds-dropdown-trigger_click', {\n            'slds-is-open': isOpen,\n            'slds-p-around_xx-small': globalAction\n          }, className),\n          id: id,\n          onBlur: onBlur,\n          onClick: onClick,\n          onFocus: onFocus,\n          onKeyDown: onKeyDown,\n          onMouseDown: onMouseDown,\n          onMouseEnter: onMouseEnter,\n          onMouseLeave: onMouseLeave,\n          ref: triggerRef\n        }, /*#__PURE__*/React.createElement(Button, _extends({\n          className: classnames({\n            'slds-global-header__button_icon-actions': globalAction\n          }),\n          iconClassName: classnames({\n            'slds-global-header__icon-actions': globalAction\n          }),\n          \"aria-haspopup\": \"true\",\n          buttonVariant: \"dropdown\"\n        }, rest), this.renderAvatar()), menu)\n      );\n    }\n  }]);\n\n  return GlobalHeaderDropdownTrigger;\n}(React.Component);\n\n_defineProperty(GlobalHeaderDropdownTrigger, \"displayName\", MENU_DROPDOWN_TRIGGER);\n\n_defineProperty(GlobalHeaderDropdownTrigger, \"propTypes\", {\n  /**\n   * An image URL or avatar node to display for the user profile.\n   */\n  avatar: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n\n  /**\n   * CSS classes to be added to `li` element.\n   */\n  className: PropTypes.oneOfType([PropTypes.array, PropTypes.object, PropTypes.string]),\n\n  /**\n   * A unique ID is needed in order to support keyboard navigation, ARIA support, and connect the dropdown to the triggering button.\n   */\n  id: PropTypes.string,\n\n  /**\n   * Informs the trigger on the open/close state of the dropdown menu\n   */\n  isOpen: PropTypes.bool,\n\n  /**\n   * Adds custom styling such as inverse fill and special sizing/spacing\n   */\n  globalAction: PropTypes.bool,\n\n  /**\n   * The dropdown menu.\n   */\n  menu: PropTypes.node,\n\n  /**\n   * Is only called when `openOn` is set to `hover` and when the triggering li loses focus.\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * This prop is passed onto the triggering `li`. Triggered when the trigger li is clicked.\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * Is only called when `openOn` is set to `hover` and when the triggering li gains focus.\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * Called when a key pressed.\n   */\n  onKeyDown: PropTypes.func,\n\n  /**\n   * Called when mouse clicks down on the trigger li.\n   */\n  onMouseDown: PropTypes.func,\n\n  /**\n   * Called when mouse hovers over the trigger `li`.\n   */\n  onMouseEnter: PropTypes.func,\n\n  /**\n   * Called when mouse leaves trigger `li` or the menu.\n   */\n  onMouseLeave: PropTypes.func,\n\n  /**\n   * Determines if mouse hover or click opens the dropdown menu. The default of `click` is highly recommended to comply with accessibility standards. If you are planning on using hover, please pause a moment and reconsider.\n   */\n  openOn: PropTypes.oneOf(['hover', 'click', 'hybrid']),\n\n  /**\n   * Set to true if menu is inline and relatively positioned with CSS. This is the typical use case for menus with nubbins.\n   */\n  positioned: PropTypes.bool,\n\n  /**\n   * The ref of the actual triggering button.\n   */\n  triggerRef: PropTypes.func\n});\n\nexport default GlobalHeaderDropdownTrigger;","map":{"version":3,"sources":["../../../../.tmp-es/components/global-header/private/dropdown-trigger.jsx"],"names":["GlobalHeaderDropdownTrigger","React","Component","MENU_DROPDOWN_TRIGGER","avatar","PropTypes","className","id","isOpen","globalAction","menu","onBlur","onClick","onFocus","onKeyDown","onMouseDown","onMouseEnter","onMouseLeave","openOn","positioned","triggerRef","func","rest","classnames"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AAEA;AAEA;AAEA;AAEA;;;AACA,OAAA,KAAA,MAAA,OAAA;AAEA,OAAA,SAAA,MAAA,YAAA,C,CAEA;AACA;AACA;AACA;;AACA,OAAA,UAAA,MAAA,YAAA,C,CAEA;;AACA,OAAA,MAAA,MAAA,WAAA,C,CAEA;;AACA,SAAA,qBAAA,QAAA,8BAAA;AAEA;AACA;AACA;;IACMA,2B;;;;;;;;;;;;;;;;mEAgFU,YAAM;AAAA,UACZI,MADY,GACD,KAAA,CADC,KACD,CADC,MAAA;;AAEpB,UAAI,OAAA,MAAA,KAAJ,QAAA,EAAgC;AAC/B,eAAA,aACC,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AAAM,UAAA,SAAS,EAAC;AAAhB,SAAA,EAAA,aACC,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,UAAA,GAAG,EAAR,MAAA;AAAkB,UAAA,GAAG,EAAC;AAAtB,SAAA,CADD,CADD;AAKA;;AACD,aAAOA,MAAM,IAAb,IAAA;;;;;;;;AAGD;6BACS;AACR;AADQ,UAAA,WAAA,GAiBJ,KAjBI,KAAA;AAAA,UAGPE,SAHO,GAAA,WAAA,CAAA,SAAA;AAAA,UAIPC,EAJO,GAAA,WAAA,CAAA,EAAA;AAAA,UAKPC,MALO,GAAA,WAAA,CAAA,MAAA;AAAA,UAMPC,YANO,GAAA,WAAA,CAAA,YAAA;AAAA,UAOPC,IAPO,GAAA,WAAA,CAAA,IAAA;AAAA,UAQPC,MARO,GAAA,WAAA,CAAA,MAAA;AAAA,UASPC,OATO,GAAA,WAAA,CAAA,OAAA;AAAA,UAUPC,OAVO,GAAA,WAAA,CAAA,OAAA;AAAA,UAWPC,SAXO,GAAA,WAAA,CAAA,SAAA;AAAA,UAYPC,WAZO,GAAA,WAAA,CAAA,WAAA;AAAA,UAaPC,YAbO,GAAA,WAAA,CAAA,YAAA;AAAA,UAcPC,YAdO,GAAA,WAAA,CAAA,YAAA;AAAA,UAePG,UAfO,GAAA,WAAA,CAAA,UAAA;AAAA,UAgBJE,IAhBI,GAAA,wBAAA,CAAA,WAAA,EAAA,CAAA,WAAA,EAAA,IAAA,EAAA,QAAA,EAAA,cAAA,EAAA,MAAA,EAAA,QAAA,EAAA,SAAA,EAAA,SAAA,EAAA,WAAA,EAAA,aAAA,EAAA,cAAA,EAAA,cAAA,EAAA,YAAA,CAAA,CAAA;;AAmBR;AAAA;;AACC;AACA;AACA,QAAA,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA;AACC,2BADD,MAAA;AAEC,UAAA,SAAS,EAAEC,UAAU,CAAA,mDAAA,EAEpB;AACC,4BADD,MAAA;AAEC,sCAA0Bd;AAF3B,WAFoB,EAFtB,SAEsB,CAFtB;AAUC,UAAA,EAAE,EAVH,EAAA;AAWC,UAAA,MAAM,EAXP,MAAA;AAYC,UAAA,OAAO,EAZR,OAAA;AAaC,UAAA,OAAO,EAbR,OAAA;AAcC,UAAA,SAAS,EAdV,SAAA;AAeC,UAAA,WAAW,EAfZ,WAAA;AAgBC,UAAA,YAAY,EAhBb,YAAA;AAiBC,UAAA,YAAY,EAjBb,YAAA;AAkBC,UAAA,GAAG,EAAEW;AAlBN,SAAA,EAAA,aAqBC,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA,QAAA,CAAA;AACC,UAAA,SAAS,EAAEG,UAAU,CAAC;AACrB,uDAA2Cd;AADtB,WAAD,CADtB;AAIC,UAAA,aAAa,EAAEc,UAAU,CAAC;AACzB,gDAAoCd;AADX,WAAD,CAJ1B;AAOC,2BAPD,MAAA;AAQC,UAAA,aAAa,EAAC;AARf,SAAA,EAAA,IAAA,CAAA,EAWE,KAhCH,YAgCG,EAXF,CArBD,EAAA,IAAA;AAHD;AAwCA;;;;EAxJwCR,KAAK,CAACC,S;;gBAA1CF,2B,iBAMgBG,qB;;gBANhBH,2B,eASc;AAClB;AACF;AACA;AACEI,EAAAA,MAAM,EAAEC,SAAS,CAATA,SAAAA,CAAoB,CAACA,SAAS,CAAV,MAAA,EAAmBA,SAAS,CAJtC,IAIU,CAApBA,CAJU;;AAKlB;AACF;AACA;AACEC,EAAAA,SAAS,EAAED,SAAS,CAATA,SAAAA,CAAoB,CAC9BA,SAAS,CADqB,KAAA,EAE9BA,SAAS,CAFqB,MAAA,EAG9BA,SAAS,CAXQ,MAQa,CAApBA,CARO;;AAalB;AACF;AACA;AACEE,EAAAA,EAAE,EAAEF,SAAS,CAhBK,MAAA;;AAiBlB;AACF;AACA;AACEG,EAAAA,MAAM,EAAEH,SAAS,CApBC,IAAA;;AAqBlB;AACF;AACA;AACEI,EAAAA,YAAY,EAAEJ,SAAS,CAxBL,IAAA;;AAyBlB;AACF;AACA;AACEK,EAAAA,IAAI,EAAEL,SAAS,CA5BG,IAAA;;AA6BlB;AACF;AACA;AACEM,EAAAA,MAAM,EAAEN,SAAS,CAhCC,IAAA;;AAiClB;AACF;AACA;AACEO,EAAAA,OAAO,EAAEP,SAAS,CApCA,IAAA;;AAqClB;AACF;AACA;AACEQ,EAAAA,OAAO,EAAER,SAAS,CAxCA,IAAA;;AAyClB;AACF;AACA;AACES,EAAAA,SAAS,EAAET,SAAS,CA5CF,IAAA;;AA6ClB;AACF;AACA;AACEU,EAAAA,WAAW,EAAEV,SAAS,CAhDJ,IAAA;;AAiDlB;AACF;AACA;AACEW,EAAAA,YAAY,EAAEX,SAAS,CApDL,IAAA;;AAqDlB;AACF;AACA;AACEY,EAAAA,YAAY,EAAEZ,SAAS,CAxDL,IAAA;;AAyDlB;AACF;AACA;AACEa,EAAAA,MAAM,EAAEb,SAAS,CAATA,KAAAA,CAAgB,CAAA,OAAA,EAAA,OAAA,EA5DN,QA4DM,CAAhBA,CA5DU;;AA6DlB;AACF;AACA;AACEc,EAAAA,UAAU,EAAEd,SAAS,CAhEH,IAAA;;AAiElB;AACF;AACA;AACEe,EAAAA,UAAU,EAAEf,SAAS,CAACgB;AApEJ,C;;AAkJpB,eAAA,2BAAA","sourcesContent":["/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\n/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\n\n// # Global Header Dropdown Component\n\n// ## Dependencies\n\n// ### React\nimport React from 'react';\n\nimport PropTypes from 'prop-types';\n\n// ### classNames\n// [github.com/JedWatson/classnames](https://github.com/JedWatson/classnames)\n// This project uses `classnames`, \"a simple javascript utility for conditionally\n// joining classNames together.\"\nimport classnames from 'classnames';\n\n// ### Dropdown\nimport Button from '../button';\n\n// ### Children\nimport { MENU_DROPDOWN_TRIGGER } from '../../../utilities/constants';\n\n/**\n *  The Dropdown Button Trigger renders the default trigger button for the dropdown menu. If this component has children, it does not render itself to the DOM. Instead, it renders its child element, `Button`, and all that child's properties. This component may be used as a template to create custom triggers that do not use `Button`.\n */\nclass GlobalHeaderDropdownTrigger extends React.Component {\n\t// TODO: Make this a stateless component, however dropdowns break when this component becomes stateless.\n\n\t// ### Display Name\n\t// Always use the canonical component name (set in the core) as the React\n\t// display name.\n\tstatic displayName = MENU_DROPDOWN_TRIGGER;\n\n\t// ### Prop Types\n\tstatic propTypes = {\n\t\t/**\n\t\t * An image URL or avatar node to display for the user profile.\n\t\t */\n\t\tavatar: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n\t\t/**\n\t\t * CSS classes to be added to `li` element.\n\t\t */\n\t\tclassName: PropTypes.oneOfType([\n\t\t\tPropTypes.array,\n\t\t\tPropTypes.object,\n\t\t\tPropTypes.string,\n\t\t]),\n\t\t/**\n\t\t * A unique ID is needed in order to support keyboard navigation, ARIA support, and connect the dropdown to the triggering button.\n\t\t */\n\t\tid: PropTypes.string,\n\t\t/**\n\t\t * Informs the trigger on the open/close state of the dropdown menu\n\t\t */\n\t\tisOpen: PropTypes.bool,\n\t\t/**\n\t\t * Adds custom styling such as inverse fill and special sizing/spacing\n\t\t */\n\t\tglobalAction: PropTypes.bool,\n\t\t/**\n\t\t * The dropdown menu.\n\t\t */\n\t\tmenu: PropTypes.node,\n\t\t/**\n\t\t * Is only called when `openOn` is set to `hover` and when the triggering li loses focus.\n\t\t */\n\t\tonBlur: PropTypes.func,\n\t\t/**\n\t\t * This prop is passed onto the triggering `li`. Triggered when the trigger li is clicked.\n\t\t */\n\t\tonClick: PropTypes.func,\n\t\t/**\n\t\t * Is only called when `openOn` is set to `hover` and when the triggering li gains focus.\n\t\t */\n\t\tonFocus: PropTypes.func,\n\t\t/**\n\t\t * Called when a key pressed.\n\t\t */\n\t\tonKeyDown: PropTypes.func,\n\t\t/**\n\t\t * Called when mouse clicks down on the trigger li.\n\t\t */\n\t\tonMouseDown: PropTypes.func,\n\t\t/**\n\t\t * Called when mouse hovers over the trigger `li`.\n\t\t */\n\t\tonMouseEnter: PropTypes.func,\n\t\t/**\n\t\t * Called when mouse leaves trigger `li` or the menu.\n\t\t */\n\t\tonMouseLeave: PropTypes.func,\n\t\t/**\n\t\t * Determines if mouse hover or click opens the dropdown menu. The default of `click` is highly recommended to comply with accessibility standards. If you are planning on using hover, please pause a moment and reconsider.\n\t\t */\n\t\topenOn: PropTypes.oneOf(['hover', 'click', 'hybrid']),\n\t\t/**\n\t\t * Set to true if menu is inline and relatively positioned with CSS. This is the typical use case for menus with nubbins.\n\t\t */\n\t\tpositioned: PropTypes.bool,\n\t\t/**\n\t\t * The ref of the actual triggering button.\n\t\t */\n\t\ttriggerRef: PropTypes.func,\n\t};\n\n\trenderAvatar = () => {\n\t\tconst { avatar } = this.props;\n\t\tif (typeof avatar === 'string') {\n\t\t\treturn (\n\t\t\t\t<span className=\"slds-avatar slds-avatar_circle slds-avatar_medium\">\n\t\t\t\t\t<img src={avatar} alt=\"\" />\n\t\t\t\t</span>\n\t\t\t);\n\t\t}\n\t\treturn avatar || null;\n\t};\n\n\t// ### Render\n\trender() {\n\t\t// The following props are provided to the `li`, all others are passed into the `Button`\n\t\tconst {\n\t\t\tclassName,\n\t\t\tid,\n\t\t\tisOpen,\n\t\t\tglobalAction,\n\t\t\tmenu,\n\t\t\tonBlur,\n\t\t\tonClick,\n\t\t\tonFocus,\n\t\t\tonKeyDown,\n\t\t\tonMouseDown,\n\t\t\tonMouseEnter,\n\t\t\tonMouseLeave,\n\t\t\ttriggerRef,\n\t\t\t...rest\n\t\t} = this.props;\n\n\t\treturn (\n\t\t\t/* eslint-disable jsx-a11y/no-static-element-interactions */\n\t\t\t// eslint-disable-next-line jsx-a11y/role-supports-aria-props\n\t\t\t<li\n\t\t\t\taria-haspopup=\"true\"\n\t\t\t\tclassName={classnames(\n\t\t\t\t\t'slds-dropdown-trigger slds-dropdown-trigger_click',\n\t\t\t\t\t{\n\t\t\t\t\t\t'slds-is-open': isOpen,\n\t\t\t\t\t\t'slds-p-around_xx-small': globalAction,\n\t\t\t\t\t},\n\t\t\t\t\tclassName\n\t\t\t\t)}\n\t\t\t\tid={id}\n\t\t\t\tonBlur={onBlur}\n\t\t\t\tonClick={onClick}\n\t\t\t\tonFocus={onFocus}\n\t\t\t\tonKeyDown={onKeyDown}\n\t\t\t\tonMouseDown={onMouseDown}\n\t\t\t\tonMouseEnter={onMouseEnter}\n\t\t\t\tonMouseLeave={onMouseLeave}\n\t\t\t\tref={triggerRef}\n\t\t\t>\n\t\t\t\t{/* eslint-enable jsx-a11y/no-static-element-interactions */}\n\t\t\t\t<Button\n\t\t\t\t\tclassName={classnames({\n\t\t\t\t\t\t'slds-global-header__button_icon-actions': globalAction,\n\t\t\t\t\t})}\n\t\t\t\t\ticonClassName={classnames({\n\t\t\t\t\t\t'slds-global-header__icon-actions': globalAction,\n\t\t\t\t\t})}\n\t\t\t\t\taria-haspopup=\"true\"\n\t\t\t\t\tbuttonVariant=\"dropdown\"\n\t\t\t\t\t{...rest}\n\t\t\t\t>\n\t\t\t\t\t{this.renderAvatar()}\n\t\t\t\t</Button>\n\t\t\t\t{menu}\n\t\t\t</li>\n\t\t);\n\t}\n}\n\nexport default GlobalHeaderDropdownTrigger;\n"]},"metadata":{},"sourceType":"module"}