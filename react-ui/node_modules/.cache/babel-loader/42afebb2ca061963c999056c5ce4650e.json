{"ast":null,"code":"/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\n/* eslint-disable import/no-mutable-exports */\n// This function will deliver an error message to the browser console about the removal of a property.\nimport warning from 'warning';\nimport { BUTTON, BUTTON_STATEFUL, BUTTON_GROUP, CHECKBOX, DATE_PICKER, INPUT, LOOKUP, MENU_DROPDOWN, TIME_PICKER } from '../../utilities/constants';\n/* eslint-disable import/no-mutable-exports */\n\nvar isTriggerTabbable = function isTriggerTabbableFunction() {};\n\nif (process.env.NODE_ENV !== 'production') {\n  var hasWarned = {};\n\n  isTriggerTabbable = function isTriggerTabbableFunction(COMPONENT, trigger, comment, silenceTriggerTabbableWarning) {\n    var additionalComment = comment ? \" \".concat(comment) : '';\n    var childTabIndex = trigger.props.tabIndex;\n    var elementIsTabbable = true;\n\n    if ( // Silencing prop for special cases\n    !silenceTriggerTabbableWarning && // List of \"native\" HTML elements that are tabbable by default\n    trigger.type !== 'button' && trigger.type !== 'input' && trigger.type !== 'select' && trigger.type !== 'textarea' && trigger.type !== 'a' && // List of components that are tabbable by default\n    trigger.type.displayName !== BUTTON && trigger.type.displayName !== BUTTON_STATEFUL && trigger.type.displayName !== BUTTON_GROUP && trigger.type.displayName !== CHECKBOX && trigger.type.displayName !== DATE_PICKER && trigger.type.displayName !== INPUT && trigger.type.displayName !== LOOKUP && trigger.type.displayName !== MENU_DROPDOWN && trigger.type.displayName !== TIME_PICKER) {\n      // if it's not one of the above, then check to see if it has a tabIndex\n      if (childTabIndex === '-1' || childTabIndex === undefined) {\n        elementIsTabbable = false;\n\n        if (!hasWarned[COMPONENT]) {\n          /* eslint-disable max-len */\n          warning(elementIsTabbable, \"[Design System React] The element that triggers \".concat(COMPONENT, \" must be tabbable for keyboard users. Elements such as anchor, button, input or a DOM element with tabIndex=\\\"0\\\" specified are tabbable. \").concat(additionalComment));\n          /* eslint-enable max-len */\n\n          hasWarned[COMPONENT] = !!elementIsTabbable;\n        }\n      }\n    }\n  };\n}\n\nexport default isTriggerTabbable;","map":{"version":3,"sources":["../../../.tmp-es/utilities/warning/is-trigger-tabbable.js"],"names":["isTriggerTabbable","process","hasWarned","additionalComment","comment","childTabIndex","trigger","elementIsTabbable","warning"],"mappings":"AAAA;;AACA;;AAEA;AAEA;AACA,OAAA,OAAA,MAAA,SAAA;AAEA,SAAA,MAAA,EAAA,eAAA,EAAA,YAAA,EAAA,QAAA,EAAA,WAAA,EAAA,KAAA,EAAA,MAAA,EAAA,aAAA,EAAA,WAAA,QAAA,2BAAA;AAYA;;AAEA,IAAIA,iBAAiB,GAAG,SAAA,yBAAA,GAAqC,CAA7D,CAAA;;AAEA,IAAIC,OAAO,CAAPA,GAAAA,CAAAA,QAAAA,KAAJ,YAAA,EAA2C;AAC1C,MAAMC,SAAS,GAAf,EAAA;;AAEAF,EAAAA,iBAAiB,GAAG,SAAA,yBAAA,CAAA,SAAA,EAAA,OAAA,EAAA,OAAA,EAAA,6BAAA,EAKlB;AACD,QAAMG,iBAAiB,GAAGC,OAAO,GAAA,IAAA,MAAA,CAAA,OAAA,CAAA,GAAjC,EAAA;AACA,QAAMC,aAAa,GAAGC,OAAO,CAAPA,KAAAA,CAAtB,QAAA;AACA,QAAIC,iBAAiB,GAArB,IAAA;;AAEA,SACC;AACA,KAAA,6BAAA,IACA;AACAD,IAAAA,OAAO,CAAPA,IAAAA,KAFA,QAAA,IAGAA,OAAO,CAAPA,IAAAA,KAHA,OAAA,IAIAA,OAAO,CAAPA,IAAAA,KAJA,QAAA,IAKAA,OAAO,CAAPA,IAAAA,KALA,UAAA,IAMAA,OAAO,CAAPA,IAAAA,KANA,GAAA,IAOA;AACAA,IAAAA,OAAO,CAAPA,IAAAA,CAAAA,WAAAA,KARA,MAAA,IASAA,OAAO,CAAPA,IAAAA,CAAAA,WAAAA,KATA,eAAA,IAUAA,OAAO,CAAPA,IAAAA,CAAAA,WAAAA,KAVA,YAAA,IAWAA,OAAO,CAAPA,IAAAA,CAAAA,WAAAA,KAXA,QAAA,IAYAA,OAAO,CAAPA,IAAAA,CAAAA,WAAAA,KAZA,WAAA,IAaAA,OAAO,CAAPA,IAAAA,CAAAA,WAAAA,KAbA,KAAA,IAcAA,OAAO,CAAPA,IAAAA,CAAAA,WAAAA,KAdA,MAAA,IAeAA,OAAO,CAAPA,IAAAA,CAAAA,WAAAA,KAfA,aAAA,IAgBAA,OAAO,CAAPA,IAAAA,CAAAA,WAAAA,KAlBD,WAAA,EAmBE;AACD;AACA,UAAID,aAAa,KAAbA,IAAAA,IAA0BA,aAAa,KAA3C,SAAA,EAA2D;AAC1DE,QAAAA,iBAAiB,GAAjBA,KAAAA;;AACA,YAAI,CAACL,SAAS,CAAd,SAAc,CAAd,EAA2B;AAC1B;AACAM,UAAAA,OAAO,CAAA,iBAAA,EAAA,mDAAA,MAAA,CAAA,SAAA,EAAA,4IAAA,EAAA,MAAA,CAAPA,iBAAO,CAAA,CAAPA;AAIA;;AACAN,UAAAA,SAAS,CAATA,SAAS,CAATA,GAAuB,CAAC,CAAxBA,iBAAAA;AACA;AACD;AACD;AA3CFF,GAAAA;AA6CA;;AAED,eAAA,iBAAA","sourcesContent":["/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\n/* eslint-disable import/no-mutable-exports */\n\n// This function will deliver an error message to the browser console about the removal of a property.\nimport warning from 'warning';\n\nimport {\n\tBUTTON,\n\tBUTTON_STATEFUL,\n\tBUTTON_GROUP,\n\tCHECKBOX,\n\tDATE_PICKER,\n\tINPUT,\n\tLOOKUP,\n\tMENU_DROPDOWN,\n\tTIME_PICKER,\n} from '../../utilities/constants';\n\n/* eslint-disable import/no-mutable-exports */\n\nlet isTriggerTabbable = function isTriggerTabbableFunction() {};\n\nif (process.env.NODE_ENV !== 'production') {\n\tconst hasWarned = {};\n\n\tisTriggerTabbable = function isTriggerTabbableFunction(\n\t\tCOMPONENT,\n\t\ttrigger,\n\t\tcomment,\n\t\tsilenceTriggerTabbableWarning\n\t) {\n\t\tconst additionalComment = comment ? ` ${comment}` : '';\n\t\tconst childTabIndex = trigger.props.tabIndex;\n\t\tlet elementIsTabbable = true;\n\n\t\tif (\n\t\t\t// Silencing prop for special cases\n\t\t\t!silenceTriggerTabbableWarning &&\n\t\t\t// List of \"native\" HTML elements that are tabbable by default\n\t\t\ttrigger.type !== 'button' &&\n\t\t\ttrigger.type !== 'input' &&\n\t\t\ttrigger.type !== 'select' &&\n\t\t\ttrigger.type !== 'textarea' &&\n\t\t\ttrigger.type !== 'a' &&\n\t\t\t// List of components that are tabbable by default\n\t\t\ttrigger.type.displayName !== BUTTON &&\n\t\t\ttrigger.type.displayName !== BUTTON_STATEFUL &&\n\t\t\ttrigger.type.displayName !== BUTTON_GROUP &&\n\t\t\ttrigger.type.displayName !== CHECKBOX &&\n\t\t\ttrigger.type.displayName !== DATE_PICKER &&\n\t\t\ttrigger.type.displayName !== INPUT &&\n\t\t\ttrigger.type.displayName !== LOOKUP &&\n\t\t\ttrigger.type.displayName !== MENU_DROPDOWN &&\n\t\t\ttrigger.type.displayName !== TIME_PICKER\n\t\t) {\n\t\t\t// if it's not one of the above, then check to see if it has a tabIndex\n\t\t\tif (childTabIndex === '-1' || childTabIndex === undefined) {\n\t\t\t\telementIsTabbable = false;\n\t\t\t\tif (!hasWarned[COMPONENT]) {\n\t\t\t\t\t/* eslint-disable max-len */\n\t\t\t\t\twarning(\n\t\t\t\t\t\telementIsTabbable,\n\t\t\t\t\t\t`[Design System React] The element that triggers ${COMPONENT} must be tabbable for keyboard users. Elements such as anchor, button, input or a DOM element with tabIndex=\"0\" specified are tabbable. ${additionalComment}`\n\t\t\t\t\t);\n\t\t\t\t\t/* eslint-enable max-len */\n\t\t\t\t\thasWarned[COMPONENT] = !!elementIsTabbable;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n}\n\nexport default isTriggerTabbable;\n"]},"metadata":{},"sourceType":"module"}