{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n// # Timepicker Component\n// ## Dependencies\n// ### React\n\n\nimport React from 'react';\nimport PropTypes from 'prop-types'; // ### isDate\n\nimport isDate from 'lodash.isdate'; // This component's `checkProps` which issues warnings to developers about properties when in development mode (similar to React's built in development tools)\n\nimport checkProps from './check-props'; // ### Dropdown\n\nimport InputIcon from '../icon/input-icon';\nimport MenuDropdown from '../menu-dropdown';\nimport TimepickerDropdownTrigger from './private/dropdown-trigger'; // ## Constants\n\nimport { TIME_PICKER } from '../../utilities/constants';\nimport componentDoc from './component.json';\n\nvar getOptions = function getOptions(_ref) {\n  var props = _ref.props;\n  var baseDate = new Date();\n  var options = [];\n  baseDate.setHours(0);\n  baseDate.setMinutes(0);\n  baseDate.setSeconds(0);\n  baseDate.setMilliseconds(0);\n  var curDate = new Date(baseDate); // eslint-disable-next-line fp/no-loops\n\n  while (baseDate.getDate() === curDate.getDate()) {\n    var formatted = props.formatter(curDate); // eslint-disable-next-line fp/no-mutating-methods\n\n    options.push({\n      label: formatted,\n      value: new Date(curDate)\n    });\n    curDate.setMinutes(curDate.getMinutes() + props.stepInMinutes);\n  }\n\n  return options;\n};\n/**\n * ** Timepicker is deprecated. Please use an auto-complete Combobox instead.**\n * A timepicker is an autocomplete text input to capture a time.\n */\n\n\nvar Timepicker = /*#__PURE__*/function (_React$Component) {\n  _inherits(Timepicker, _React$Component);\n\n  var _super = _createSuper(Timepicker); // ### Display Name\n  // Always use the canonical component name as the React display name.\n  // ### Prop Types\n\n\n  function Timepicker(props) {\n    var _this;\n\n    _classCallCheck(this, Timepicker);\n\n    _this = _super.call(this, props); // `checkProps` issues warnings to developers about properties (similar to React's built in development tools)\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      value: _this.props.value,\n      strValue: _this.props.strValue,\n      options: getOptions({\n        props: _this.props\n      })\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"parseDate\", function (strValue) {\n      var newDate = _this.props.parser(strValue);\n\n      if (isDate(newDate)) {\n        if (!isNaN(newDate.getTime())) {\n          return newDate;\n        }\n      }\n\n      return new Date();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleChange\", function (date, strValue) {\n      _this.setState({\n        value: date,\n        strValue: strValue\n      });\n\n      if (_this.props.onDateChange) {\n        _this.props.onDateChange(date, strValue);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSelect\", function (val) {\n      if (val && val.value) {\n        _this.handleChange(val.value, val.label);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleInputChange\", function (event) {\n      var strValue = event.target.value;\n\n      _this.setState({\n        strValue: strValue\n      });\n\n      if (_this.props.onDateChange) {\n        var parsedDate = _this.props.parser(strValue);\n\n        _this.props.onDateChange(parsedDate, strValue);\n      }\n    });\n\n    checkProps(TIME_PICKER, props, componentDoc);\n    return _this;\n  } // eslint-disable-next-line camelcase, react/sort-comp\n\n\n  _createClass(Timepicker, [{\n    key: \"UNSAFE_componentWillReceiveProps\",\n    value: function UNSAFE_componentWillReceiveProps(nextProps) {\n      if (nextProps.value && this.props.value) {\n        var currentTime = this.props.value.getTime();\n        var nextTime = nextProps.value.getTime();\n\n        if (currentTime !== nextTime) {\n          this.setState({\n            value: nextProps.value,\n            strValue: this.props.formatter(nextProps.value)\n          });\n        }\n      }\n\n      if (nextProps.strValue !== this.props.value) {\n        this.setState({\n          strValue: nextProps.strValue\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    // ### Render\n    value: function render() {\n      return /*#__PURE__*/React.createElement(MenuDropdown, {\n        checkmark: false,\n        constrainToScrollParent: this.props.constrainToScrollParent,\n        disabled: this.props.disabled,\n        inheritTargetWidth: this.props.inheritTargetWidth,\n        label: this.props.label,\n        listItemRenderer: this.props.listItemRenderer // inline style override\n        ,\n        menuStyle: {\n          maxHeight: '20em',\n          overflowX: 'hidden',\n          minWidth: '100%'\n        },\n        menuPosition: this.props.menuPosition,\n        onSelect: this.handleSelect,\n        options: this.state.options\n      }, /*#__PURE__*/React.createElement(TimepickerDropdownTrigger, {\n        iconRight: /*#__PURE__*/React.createElement(InputIcon, {\n          category: \"utility\",\n          name: \"clock\"\n        }),\n        onChange: this.handleInputChange,\n        placeholder: this.props.placeholder,\n        required: this.props.required,\n        type: \"text\",\n        value: this.state.strValue\n      }));\n    }\n  }]);\n\n  return Timepicker;\n}(React.Component);\n\n_defineProperty(Timepicker, \"displayName\", TIME_PICKER);\n\n_defineProperty(Timepicker, \"propTypes\", {\n  /**\n   * If true, constrains the menu to the scroll parent. See `Dropdown`.\n   */\n  constrainToScrollParent: PropTypes.bool,\n\n  /**\n   * Disables the input and prevents editing the contents.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Time formatting function\n   */\n  formatter: PropTypes.func,\n\n  /**\n   * Sets the dialog width to the width of the target. Menus attached to `input` typically follow this UX pattern.\n   */\n  inheritTargetWidth: PropTypes.bool,\n\n  /**\n   * This label appears above the input.\n   */\n  label: PropTypes.string,\n\n  /**\n   * Custom element that overrides the default Menu Item component.\n   */\n  listItemRenderer: PropTypes.func,\n\n  /**\n   * Please select one of the following:\n   * * `absolute` - (default) The dialog will use `position: absolute` and style attributes to position itself. This allows inverted placement or flipping of the dialog.\n   * * `overflowBoundaryElement` - The dialog will overflow scrolling parents. Use on elements that are aligned to the left or right of their target and don't care about the target being within a scrolling parent. Typically this is a popover or tooltip. Dropdown menus can usually open up and down if no room exists. In order to achieve this a portal element will be created and attached to `body`. This element will render into that detached render tree.\n   * * `relative` - No styling or portals will be used. Menus will be positioned relative to their triggers. This is a great choice for HTML snapshot testing.\n   */\n  menuPosition: PropTypes.oneOf(['absolute', 'overflowBoundaryElement', 'relative']),\n\n  /**\n   * Receives the props `(dateValue, stringValue)`\n   */\n  onDateChange: PropTypes.func,\n\n  /**\n   * Parsing date string into Date\n   */\n  parser: PropTypes.func,\n\n  /**\n   * Text that will appear in an empty input.\n   */\n  placeholder: PropTypes.string,\n\n  /**\n   * If true, adds asterisk next to input label to indicate it is a required field.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * Frequency of options\n   */\n  stepInMinutes: PropTypes.number,\n\n  /**\n   * Value for input that is parsed to create an internal state in the `date` format.\n   */\n  strValue: PropTypes.string,\n\n  /**\n   * Instance an internal state in the `date` format.\n   */\n  value: PropTypes.instanceOf(Date)\n});\n\n_defineProperty(Timepicker, \"defaultProps\", {\n  formatter: function formatter(date) {\n    if (date) {\n      return date.toLocaleTimeString(navigator.language, {\n        hour: '2-digit',\n        minute: '2-digit'\n      });\n    }\n\n    return null;\n  },\n  parser: function parser(timeStr) {\n    var date = new Date();\n    var dateStr = date.toLocaleString(navigator.language, {\n      year: 'numeric',\n      month: 'numeric',\n      day: 'numeric'\n    });\n    return new Date(\"\".concat(dateStr, \" \").concat(timeStr));\n  },\n  menuPosition: 'absolute',\n  value: null,\n  stepInMinutes: 30\n});\n\nexport default Timepicker;","map":{"version":3,"sources":["../../../.tmp-es/components/time-picker/index.jsx"],"names":["getOptions","props","baseDate","options","curDate","formatted","label","value","Timepicker","React","Component","TIME_PICKER","constrainToScrollParent","PropTypes","disabled","formatter","inheritTargetWidth","listItemRenderer","menuPosition","onDateChange","parser","placeholder","required","stepInMinutes","strValue","navigator","hour","minute","date","dateStr","year","month","day","checkProps","nextProps","currentTime","nextTime","newDate","isDate","isNaN","val","event","parsedDate","maxHeight","overflowX","minWidth"],"mappings":"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","sourcesContent":["/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\n// # Timepicker Component\n\n// ## Dependencies\n\n// ### React\nimport React from 'react';\n\nimport PropTypes from 'prop-types';\n\n// ### isDate\nimport isDate from 'lodash.isdate';\n\n// This component's `checkProps` which issues warnings to developers about properties when in development mode (similar to React's built in development tools)\nimport checkProps from './check-props';\n\n// ### Dropdown\nimport InputIcon from '../icon/input-icon';\nimport MenuDropdown from '../menu-dropdown';\nimport TimepickerDropdownTrigger from './private/dropdown-trigger';\n\n// ## Constants\nimport { TIME_PICKER } from '../../utilities/constants';\n\nimport componentDoc from './component.json';\n\nconst getOptions = ({ props }) => {\n\tconst baseDate = new Date();\n\tconst options = [];\n\n\tbaseDate.setHours(0);\n\tbaseDate.setMinutes(0);\n\tbaseDate.setSeconds(0);\n\tbaseDate.setMilliseconds(0);\n\n\tconst curDate = new Date(baseDate);\n\n\t// eslint-disable-next-line fp/no-loops\n\twhile (baseDate.getDate() === curDate.getDate()) {\n\t\tconst formatted = props.formatter(curDate);\n\n\t\t// eslint-disable-next-line fp/no-mutating-methods\n\t\toptions.push({\n\t\t\tlabel: formatted,\n\t\t\tvalue: new Date(curDate),\n\t\t});\n\n\t\tcurDate.setMinutes(curDate.getMinutes() + props.stepInMinutes);\n\t}\n\n\treturn options;\n};\n\n/**\n * ** Timepicker is deprecated. Please use an auto-complete Combobox instead.**\n * A timepicker is an autocomplete text input to capture a time.\n */\nclass Timepicker extends React.Component {\n\t// ### Display Name\n\t// Always use the canonical component name as the React display name.\n\tstatic displayName = TIME_PICKER;\n\n\t// ### Prop Types\n\tstatic propTypes = {\n\t\t/**\n\t\t * If true, constrains the menu to the scroll parent. See `Dropdown`.\n\t\t */\n\t\tconstrainToScrollParent: PropTypes.bool,\n\t\t/**\n\t\t * Disables the input and prevents editing the contents.\n\t\t */\n\t\tdisabled: PropTypes.bool,\n\t\t/**\n\t\t * Time formatting function\n\t\t */\n\t\tformatter: PropTypes.func,\n\t\t/**\n\t\t * Sets the dialog width to the width of the target. Menus attached to `input` typically follow this UX pattern.\n\t\t */\n\t\tinheritTargetWidth: PropTypes.bool,\n\t\t/**\n\t\t * This label appears above the input.\n\t\t */\n\t\tlabel: PropTypes.string,\n\t\t/**\n\t\t * Custom element that overrides the default Menu Item component.\n\t\t */\n\t\tlistItemRenderer: PropTypes.func,\n\t\t/**\n\t\t * Please select one of the following:\n\t\t * * `absolute` - (default) The dialog will use `position: absolute` and style attributes to position itself. This allows inverted placement or flipping of the dialog.\n\t\t * * `overflowBoundaryElement` - The dialog will overflow scrolling parents. Use on elements that are aligned to the left or right of their target and don't care about the target being within a scrolling parent. Typically this is a popover or tooltip. Dropdown menus can usually open up and down if no room exists. In order to achieve this a portal element will be created and attached to `body`. This element will render into that detached render tree.\n\t\t * * `relative` - No styling or portals will be used. Menus will be positioned relative to their triggers. This is a great choice for HTML snapshot testing.\n\t\t */\n\t\tmenuPosition: PropTypes.oneOf([\n\t\t\t'absolute',\n\t\t\t'overflowBoundaryElement',\n\t\t\t'relative',\n\t\t]),\n\t\t/**\n\t\t * Receives the props `(dateValue, stringValue)`\n\t\t */\n\t\tonDateChange: PropTypes.func,\n\t\t/**\n\t\t * Parsing date string into Date\n\t\t */\n\t\tparser: PropTypes.func,\n\t\t/**\n\t\t * Text that will appear in an empty input.\n\t\t */\n\t\tplaceholder: PropTypes.string,\n\t\t/**\n\t\t * If true, adds asterisk next to input label to indicate it is a required field.\n\t\t */\n\t\trequired: PropTypes.bool,\n\t\t/**\n\t\t * Frequency of options\n\t\t */\n\t\tstepInMinutes: PropTypes.number,\n\t\t/**\n\t\t * Value for input that is parsed to create an internal state in the `date` format.\n\t\t */\n\t\tstrValue: PropTypes.string,\n\t\t/**\n\t\t * Instance an internal state in the `date` format.\n\t\t */\n\t\tvalue: PropTypes.instanceOf(Date),\n\t};\n\n\tstatic defaultProps = {\n\t\tformatter(date) {\n\t\t\tif (date) {\n\t\t\t\treturn date.toLocaleTimeString(navigator.language, {\n\t\t\t\t\thour: '2-digit',\n\t\t\t\t\tminute: '2-digit',\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn null;\n\t\t},\n\t\tparser(timeStr) {\n\t\t\tconst date = new Date();\n\t\t\tconst dateStr = date.toLocaleString(navigator.language, {\n\t\t\t\tyear: 'numeric',\n\t\t\t\tmonth: 'numeric',\n\t\t\t\tday: 'numeric',\n\t\t\t});\n\t\t\treturn new Date(`${dateStr} ${timeStr}`);\n\t\t},\n\t\tmenuPosition: 'absolute',\n\t\tvalue: null,\n\t\tstepInMinutes: 30,\n\t};\n\n\tstate = {\n\t\tvalue: this.props.value,\n\t\tstrValue: this.props.strValue,\n\t\toptions: getOptions({ props: this.props }),\n\t};\n\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\t// `checkProps` issues warnings to developers about properties (similar to React's built in development tools)\n\t\tcheckProps(TIME_PICKER, props, componentDoc);\n\t}\n\n\t// eslint-disable-next-line camelcase, react/sort-comp\n\tUNSAFE_componentWillReceiveProps(nextProps) {\n\t\tif (nextProps.value && this.props.value) {\n\t\t\tconst currentTime = this.props.value.getTime();\n\t\t\tconst nextTime = nextProps.value.getTime();\n\n\t\t\tif (currentTime !== nextTime) {\n\t\t\t\tthis.setState({\n\t\t\t\t\tvalue: nextProps.value,\n\t\t\t\t\tstrValue: this.props.formatter(nextProps.value),\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\tif (nextProps.strValue !== this.props.value) {\n\t\t\tthis.setState({ strValue: nextProps.strValue });\n\t\t}\n\t}\n\n\tparseDate = (strValue) => {\n\t\tconst newDate = this.props.parser(strValue);\n\n\t\tif (isDate(newDate)) {\n\t\t\tif (!isNaN(newDate.getTime())) {\n\t\t\t\treturn newDate;\n\t\t\t}\n\t\t}\n\n\t\treturn new Date();\n\t};\n\n\thandleChange = (date, strValue) => {\n\t\tthis.setState({\n\t\t\tvalue: date,\n\t\t\tstrValue,\n\t\t});\n\n\t\tif (this.props.onDateChange) {\n\t\t\tthis.props.onDateChange(date, strValue);\n\t\t}\n\t};\n\n\thandleSelect = (val) => {\n\t\tif (val && val.value) {\n\t\t\tthis.handleChange(val.value, val.label);\n\t\t}\n\t};\n\n\thandleInputChange = (event) => {\n\t\tconst strValue = event.target.value;\n\n\t\tthis.setState({\n\t\t\tstrValue,\n\t\t});\n\n\t\tif (this.props.onDateChange) {\n\t\t\tconst parsedDate = this.props.parser(strValue);\n\t\t\tthis.props.onDateChange(parsedDate, strValue);\n\t\t}\n\t};\n\n\t// ### Render\n\trender() {\n\t\treturn (\n\t\t\t<MenuDropdown\n\t\t\t\tcheckmark={false}\n\t\t\t\tconstrainToScrollParent={this.props.constrainToScrollParent}\n\t\t\t\tdisabled={this.props.disabled}\n\t\t\t\tinheritTargetWidth={this.props.inheritTargetWidth}\n\t\t\t\tlabel={this.props.label}\n\t\t\t\tlistItemRenderer={this.props.listItemRenderer}\n\t\t\t\t// inline style override\n\t\t\t\tmenuStyle={{\n\t\t\t\t\tmaxHeight: '20em',\n\t\t\t\t\toverflowX: 'hidden',\n\t\t\t\t\tminWidth: '100%',\n\t\t\t\t}}\n\t\t\t\tmenuPosition={this.props.menuPosition}\n\t\t\t\tonSelect={this.handleSelect}\n\t\t\t\toptions={this.state.options}\n\t\t\t>\n\t\t\t\t<TimepickerDropdownTrigger\n\t\t\t\t\ticonRight={<InputIcon category=\"utility\" name=\"clock\" />}\n\t\t\t\t\tonChange={this.handleInputChange}\n\t\t\t\t\tplaceholder={this.props.placeholder}\n\t\t\t\t\trequired={this.props.required}\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tvalue={this.state.strValue}\n\t\t\t\t/>\n\t\t\t</MenuDropdown>\n\t\t);\n\t}\n}\n\nexport default Timepicker;\n"]},"metadata":{},"sourceType":"module"}