{"ast":null,"code":"/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\nimport React from 'react'; // Constants to specify directions: Left-to-Right (ltr) or Right-to-Left (rtl)\n\nvar DIRECTIONS = {};\nDIRECTIONS.LTR = 'ltr';\nDIRECTIONS.RTL = 'rtl';\n/*\n * Use this React context to wrap your component(s) to specify direction. Use either `DIRECTIONS.LTR` (ltr) or `DIRECTIONS.LTR` (rtl).\n * It's also expected that the `HTML` document of your markup has `dir='ltr'` or `dir='rtl'` attribute set.\n * The dir attribute is essential to set the direction of text to display and enable HTML in right-to-left.\n * For instance, setting `dir='rtl'` will cause block elements and table columns to start on the right and flow from right to left.\n *\n * Note: (1) This context is prefixed with UNSAFE because it is not a publicly supported feature.\n *       (2) When testing this feature in the storybooks, styles consumed from `salesforce-lightning-design-system.css` may appear broken.\n *           This is expected since Design System React loads only the LTR version since SLDS doesn't ship a static version of RTL.\n * Example on how to use the context to set your component right-to-left:\n * <UNSAFE_DirectionSettings.Provider value=\"rtl\">\n *      <Combobox ... />\n * </UNSAFE_DirectionSettings.Provider>\n */\n// eslint-disable-next-line camelcase\n\nvar UNSAFE_DirectionSettings = /*#__PURE__*/React.createContext('ltr'); // eslint-disable-next-line camelcase\n\nexport { UNSAFE_DirectionSettings as default, DIRECTIONS };","map":{"version":3,"sources":["../../../../.tmp-es/components/utilities/UNSAFE_direction/index.jsx"],"names":["DIRECTIONS","UNSAFE_DirectionSettings","React"],"mappings":"AAAA;;AACA;AAEA,OAAA,KAAA,MAAA,OAAA,C,CAEA;;AACA,IAAMA,UAAU,GAAhB,EAAA;AACAA,UAAU,CAAVA,GAAAA,GAAAA,KAAAA;AACAA,UAAU,CAAVA,GAAAA,GAAAA,KAAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAMC,wBAAwB,GAAA,aAAGC,KAAK,CAALA,aAAAA,CAAjC,KAAiCA,CAAjC,C,CAEA;;AACA,SAASD,wBAAwB,IAAjC,OAAA,EAAA,UAAA","sourcesContent":["/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\nimport React from 'react';\n\n// Constants to specify directions: Left-to-Right (ltr) or Right-to-Left (rtl)\nconst DIRECTIONS = {};\nDIRECTIONS.LTR = 'ltr';\nDIRECTIONS.RTL = 'rtl';\n\n/*\n * Use this React context to wrap your component(s) to specify direction. Use either `DIRECTIONS.LTR` (ltr) or `DIRECTIONS.LTR` (rtl).\n * It's also expected that the `HTML` document of your markup has `dir='ltr'` or `dir='rtl'` attribute set.\n * The dir attribute is essential to set the direction of text to display and enable HTML in right-to-left.\n * For instance, setting `dir='rtl'` will cause block elements and table columns to start on the right and flow from right to left.\n *\n * Note: (1) This context is prefixed with UNSAFE because it is not a publicly supported feature.\n *       (2) When testing this feature in the storybooks, styles consumed from `salesforce-lightning-design-system.css` may appear broken.\n *           This is expected since Design System React loads only the LTR version since SLDS doesn't ship a static version of RTL.\n * Example on how to use the context to set your component right-to-left:\n * <UNSAFE_DirectionSettings.Provider value=\"rtl\">\n *      <Combobox ... />\n * </UNSAFE_DirectionSettings.Provider>\n */\n// eslint-disable-next-line camelcase\nconst UNSAFE_DirectionSettings = React.createContext('ltr');\n\n// eslint-disable-next-line camelcase\nexport { UNSAFE_DirectionSettings as default, DIRECTIONS };\n"]},"metadata":{},"sourceType":"module"}