{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n/* eslint-disable max-lines */\n\n/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\n/* eslint-disable max-lines */\n\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport assign from 'lodash.assign';\nimport find from 'lodash.find';\nimport reject from 'lodash.reject';\nimport isEqual from 'lodash.isequal';\nimport findIndex from 'lodash.findindex';\nimport isFunction from 'lodash.isfunction';\nimport classNames from 'classnames';\nimport shortid from 'shortid';\nimport Button from '../button';\nimport Dialog from '../utilities/dialog';\nimport InnerInput from '../../components/input/private/inner-input';\nimport InputIcon from '../icon/input-icon';\nimport Menu from './private/menu';\nimport Label from '../forms/private/label';\nimport Popover from '../popover';\nimport SelectedListBox from '../pill-container/private/selected-listbox';\nimport FieldLevelHelpTooltip from '../tooltip/private/field-level-help-tooltip';\nimport KEYS from '../../utilities/key-code';\nimport KeyBuffer from '../../utilities/key-buffer';\nimport keyLetterMenuItemSelect from '../../utilities/key-letter-menu-item-select';\nimport mapKeyEventCallbacks from '../../utilities/key-callbacks';\nimport menuItemSelectScroll from '../../utilities/menu-item-select-scroll';\nimport checkProps from './check-props';\nimport { COMBOBOX } from '../../utilities/constants';\nimport componentDoc from './component.json';\nimport { IconSettingsContext } from '../icon-settings';\nvar currentOpenDropdown;\nvar documentDefined = typeof document !== 'undefined';\nvar propTypes = {\n  /**\n   * **Assistive text for accessibility**\n   * This object is merged with the default props object on every render.\n   * * `label`: This is used as a visually hidden label if, no `labels.label` is provided.\n   * * `loading`: Text added to loading spinner.\n   * * `optionSelectedInMenu`: Added before selected menu items in Read-only variants (Picklists). The default is `Current Selection:`.\n   * * `popoverLabel`: Used by popover variant, assistive text for the Popover aria-label.\n   * * `removeSingleSelectedOption`: Used by inline-listbox, single-select variant to remove the selected item (pill). This is a button with focus. The default is `Remove selected option`.\n   * * `removePill`: Used by multiple selection Comboboxes to remove a selected item (pill). Focus is on the pill. This is not a button. The default  is `, Press delete or backspace to remove`.\n   * * `selectedListboxLabel`: This is a label for the selected listbox. The grouping of pills for multiple selection Comboboxes. The default is `Selected Options:`.\n   * _Tested with snapshot testing._\n   */\n  assistiveText: PropTypes.shape({\n    label: PropTypes.string,\n    loadingMenuItems: PropTypes.string,\n    optionSelectedInMenu: PropTypes.string,\n    popoverLabel: PropTypes.string,\n    removeSingleSelectedOption: PropTypes.string,\n    removePill: PropTypes.string,\n    selectedListboxLabel: PropTypes.string\n  }),\n\n  /**\n   * The `aria-describedby` attribute is used to indicate the IDs of the elements that describe the object. It is used to establish a relationship between widgets or groups and text that described them.\n   * This is very similar to aria-labelledby: a label describes the essence of an object, while a description provides more information that the user might need. _Tested with snapshot testing._\n   */\n  'aria-describedby': PropTypes.string,\n\n  /**\n   * CSS classes to be added to tag with `.slds-combobox`. Uses `classNames` [API](https://github.com/JedWatson/classnames). _Tested with snapshot testing._\n   */\n  className: PropTypes.oneOfType([PropTypes.array, PropTypes.object, PropTypes.string]),\n\n  /**\n   * CSS classes to be added to top level tag with `.slds-form-element` and not on `.slds-combobox_container`. Uses `classNames` [API](https://github.com/JedWatson/classnames). _Tested with snapshot testing._\n   */\n  classNameContainer: PropTypes.oneOfType([PropTypes.array, PropTypes.object, PropTypes.string]),\n\n  /**\n   * CSS classes to be added to tag with `.slds-dropdown`. Uses `classNames` [API](https://github.com/JedWatson/classnames). Autocomplete/bass variant menu height should not scroll and should be determined by number items which should be no more than 10. _Tested with snapshot testing._\n   */\n  classNameMenu: PropTypes.oneOfType([PropTypes.array, PropTypes.object, PropTypes.string]),\n\n  /**\n   * CSS classes to be added to tag with `.slds-dropdown__header`. Uses `classNames` [API](https://github.com/JedWatson/classnames).\n   */\n  classNameMenuSubHeader: PropTypes.oneOfType([PropTypes.array, PropTypes.object, PropTypes.string]),\n\n  /**\n   * Event Callbacks\n   * * `onBlur`: Called when `input` removes focus.\n   * * `onChange`: Called when keyboard events occur within `input`\n   * * `onClose`: Triggered when the menu has closed.\n   * * `onFocus`: Called when `input` receives focus.\n   * * `onOpen`: Triggered when the menu has opened.\n   * * `onRequestClose`: Function called when the menu would like to hide. Please use with `isOpen`.\n   * * `onRequestOpen`:  Function called when the menu would like to show. Please use with `isOpen`.\n   * * `onRequestRemoveSelectedOption`: Function called when a single selection option is to be removed.\n   * * `onSelect`: Function called when a menu item is selected. This includes header and footer items.\n   * * `onSubmit`: Function called when user presses enter or submits the `input`\n   * _Tested with Mocha testing._\n   */\n  events: PropTypes.shape({\n    onBlur: PropTypes.func,\n    onChange: PropTypes.func,\n    onClose: PropTypes.func,\n    onFocus: PropTypes.func,\n    onOpen: PropTypes.func,\n    onRequestClose: PropTypes.func,\n    onRequestOpen: PropTypes.func,\n    onRequestRemoveSelectedOption: PropTypes.func,\n    onSelect: PropTypes.func,\n    onSubmit: PropTypes.func\n  }),\n\n  /**\n   * Message to display when the input is in an error state. When this is present, also visually highlights the component as in error. _Tested with snapshot testing._\n   */\n  errorText: PropTypes.string,\n\n  /**\n   * A [Tooltip](https://react.lightningdesignsystem.com/components/tooltips/) component that is displayed next to the `labels.label`. The props from the component will be merged and override any default props.\n   */\n  fieldLevelHelpTooltip: PropTypes.node,\n\n  /**\n   * If true, loading spinner appears inside input on right hand side.\n   */\n  hasInputSpinner: PropTypes.bool,\n\n  /**\n   * Add loading spinner below the options\n   */\n  hasMenuSpinner: PropTypes.bool,\n\n  /**\n   * By default, dialogs will flip their alignment (such as bottom to top) if they extend beyond a boundary element such as a scrolling parent or a window/viewpoint. `hasStaticAlignment` disables this behavior and allows this component to extend beyond boundary elements. _Not tested._\n   */\n  hasStaticAlignment: PropTypes.bool,\n\n  /**\n   * HTML id for component. _Tested with snapshot testing._\n   */\n  id: PropTypes.string,\n\n  /**\n   * An [Input](https://react.lightningdesignsystem.com/components/inputs) component.\n   * The props from this component will override any default props.\n   */\n  input: PropTypes.node,\n\n  /**\n   * **Text labels for internationalization**\n   * This object is merged with the default props object on every render.\n   * * `label`: This label appears above the input.\n   * * `cancelButton`: This label is only used by the dialog variant for the cancel button in the footer of the dialog. The default is `Cancel`\n   * * `doneButton`: This label is only used by the dialog variant for the done button in the footer of the dialog. The default is `Done`\n   * * `multipleOptionsSelected`: This label is used by the readonly variant when multiple options are selected. The default is `${props.selection.length} options selected`. This will override the entire string.\n   * * `noOptionsFound`: Custom message that renders when no matches found. The default empty state is just text that says, 'No matches found.'.\n   * * `placeholder`: Input placeholder\n   * * `placeholderReadOnly`: Placeholder for Picklist-like Combobox\n   * * `removePillTitle`: Title on `X` icon\n   * _Tested with snapshot testing._\n   */\n  labels: PropTypes.shape({\n    label: PropTypes.oneOfType([PropTypes.node, PropTypes.string]),\n    multipleOptionsSelected: PropTypes.string,\n    noOptionsFound: PropTypes.oneOfType([PropTypes.node, PropTypes.string]),\n    placeholder: PropTypes.string,\n    placeholderReadOnly: PropTypes.string,\n    removePillTitle: PropTypes.string\n  }),\n\n  /**\n   * Forces the dropdown to be open or closed. See controlled/uncontrolled callback/prop pattern for more on suggested use view [Concepts and Best Practices](https://github.com/salesforce-ux/design-system-react/blob/master/CONTRIBUTING.md#concepts-and-best-practices) _Tested with snapshot testing._\n   */\n  isOpen: PropTypes.bool,\n\n  /**\n   * Sets the dialog width to the width of one of the following:\n   * * `target`: Sets the dialog width to the width of the target. (Menus attached to `input` typically follow this UX pattern),\n   * * `menu`: Consider setting a `menuMaxWidth` if using this value. If not, width will be set to width of largest menu item.\n   * * `none`: Does not set a width on the dialog. _Tested with snapshot testing._\n   */\n  inheritWidthOf: PropTypes.oneOf(['target', 'menu', 'none']),\n\n  /**\n   * Accepts a custom menu item rendering function that becomes a custom component. It should return a React node. The checkmark is still rendered in readonly variants. This function is passed the following props:\n   * * `assistiveText`: Object, `assistiveText` prop that is passed into Combobox\n   * * `option`: Object, option data for item being rendered that is passed into Combobox\n   * * `selected`: Boolean, allows rendering of `assistiveText.optionSelectedInMenu` in Readonly Combobox\n   *\n   * _Tested with snapshot testing._\n   */\n  onRenderMenuItem: PropTypes.func,\n\n  /**\n   * Please select one of the following:\n   * * `absolute` - (default) The dialog will use `position: absolute` and style attributes to position itself. This allows inverted placement or flipping of the dialog.\n   * * `overflowBoundaryElement` - The dialog will overflow scrolling parents. Use on elements that are aligned to the left or right of their target and don't care about the target being within a scrolling parent. Typically this is a popover or tooltip. Dropdown menus can usually open up and down if no room exists. In order to achieve this a portal element will be created and attached to `body`. This element will render into that detached render tree.\n   * * `relative` - No styling or portals will be used. Menus will be positioned relative to their triggers. This is a great choice for HTML snapshot testing.\n   */\n  menuPosition: PropTypes.oneOf(['absolute', 'overflowBoundaryElement', 'relative']),\n\n  /**\n   * Sets a maximum width that the menu will be used if `inheritWidthOf` is set to `menu`. (Example: 500px) _Tested with snapshot testing._\n   *\n   */\n  menuMaxWidth: PropTypes.string,\n\n  /**\n   * Allows multiple selections _Tested with mocha testing._\n   */\n  multiple: PropTypes.bool,\n\n  /**\n   * **Array of item objects in the dropdown menu.**\n   * Each object can contain:\n   * * `icon`: An `Icon` component. (not used in read-only variant)\n   * * `id`: A unique identifier string.\n   * * `label`: A primary string of text for a menu item or group separator.\n   * * `subTitle`: A secondary string of text added for clarity. (optional)\n   * * `type`: 'separator' is the only type currently used\n   * * `disabled`: Set to true to disable this menu item.\n   * * `tooltipContent`: Content that is displayed in tooltip when item is disabled\n   * ```\n   * {\n   * \tid: '2',\n   * \tlabel: 'Salesforce.com, Inc.',\n   * \tsubTitle: 'Account • San Francisco',\n   * \ttype: 'account',\n   *  disabled: true,\n   *  tooltipContent: \"You don't have permission to select this item.\"\n   * },\n   * ```\n   * Note: At the moment, Combobox does not support two consecutive separators. _Tested with snapshot testing._\n   */\n  options: PropTypes.arrayOf(PropTypes.PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    icon: PropTypes.node,\n    label: PropTypes.string,\n    subTitle: PropTypes.string,\n    type: PropTypes.string,\n    disabled: PropTypes.boolean,\n    tooltipContent: PropTypes.node\n  })),\n\n  /**\n   * Determines the height of the menu based on SLDS CSS classes. This is a `number`. The default for a `readonly` variant is `5`.\n   */\n  menuItemVisibleLength: PropTypes.oneOf([5, 7, 10]),\n\n  /**\n   * Limits auto-complete input submission to one of the provided options. _Tested with mocha testing._\n   */\n  predefinedOptionsOnly: PropTypes.bool,\n\n  /**\n   * A `Popover` component. The props from this popover will be merged and override any default props. This also allows a Combobox's Popover dialog to be a controlled component. _Tested with snapshot testing._\n   */\n  popover: PropTypes.node,\n\n  /**\n   * Applies label styling for a required form element. _Tested with snapshot testing._\n   */\n  required: PropTypes.bool,\n\n  /**\n   * Accepts an array of item objects. For single selection, pass in an array of one object. For item object keys, see `options` prop. _Tested with snapshot testing._\n   */\n  selection: PropTypes.arrayOf(PropTypes.PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    icon: PropTypes.node,\n    label: PropTypes.string,\n    subTitle: PropTypes.string,\n    type: PropTypes.string\n  })).isRequired,\n\n  /**\n   * This callback exposes the selected listbox reference / DOM node to parent components.\n   */\n  selectedListboxRef: PropTypes.func,\n\n  /**\n   * Disables the input and prevents editing the contents. This only applies for single readonly and inline-listbox variants.\n   */\n  singleInputDisabled: PropTypes.bool,\n\n  /**\n   * Accepts a tooltip that is displayed when hovering on disabled menu items.\n   */\n  tooltipMenuItemDisabled: PropTypes.element,\n\n  /**\n   * Value of input. _This is a controlled component,_ so you will need to control the input value by passing the `value` from `onChange` to a parent component or state manager, and then pass it back into the componet with this prop. Please see examples for more clarification. _Tested with snapshot testing._\n   */\n  value: PropTypes.string,\n\n  /**\n   * Changes styles of the input and menu. Currently `entity` is not supported.\n   * The options are:\n   * * `base`: An autocomplete Combobox also allows a user to select an option from a list, but that list can be affected by what the user types into the input of the Combobox. The SLDS website used to call the autocomplete Combobox its `base` variant.\n   * * `inline-listbox`: An Entity Autocomplete Combobox or Lookup, is used to search for and select Salesforce Entities.\n   * * `popover`: A dialog Combobox is best used when a listbox, tree, grid, or tree-grid is not the best solution. This variant allows custom content.\n   * * `readonly`: A readonly text input that allows a user to select an option from a pre-defined list of options. It does not allow free form user input, nor does it allow the user to modify the selected value.\n   *\n   *  _Tested with snapshot testing._\n   */\n\n  /**\n   * Default value of input. Provide uncontroled behaviour\n   */\n  defaultValue: PropTypes.string,\n\n  /**\n   * **Array of item objects in the dropdown menu that is displayed below the list of `options`. `onSelect` fires when selected.**\n   * Each object can contain:\n   * * `id`: A unique identifier string.\n   * * `icon`: An [Icon](/components/icons/) component to be displayed to the left of the menu item `label`.\n   * * `label`: A primary string of text for a menu item or a function that receives `inputValue` as function parameter and returns text to be displayed in for a menu item.\n   * ```\n   * {\n   * \tid: '1',\n   * \ticon: (\n   *  \t<Icon\n   * \t\t\tassistiveText={{ label: 'add' }}\n   * \t\t\tcategory=\"utility\"\n   * \t\t\tsize=\"x-small\"\n   * \t\t\tname=\"add\"\n   * \t\t/>\n   * \t),\n   * \tlabel: 'New Entity'\n   * }\n   * ```\n   * _Tested with snapshot testing._\n   */\n  optionsAddItem: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string,\n    icon: PropTypes.node,\n    label: PropTypes.oneOfType([PropTypes.string, PropTypes.func])\n  })),\n\n  /**\n   * **Array of item objects in the dropdown menu that is displayed above the list of `options`. `onSelect` fires when selected. **\n   * Each object can contain:\n   * * `id`: A unique identifier string.\n   * * `icon`: An [Icon](/components/icons/) component to be displayed to the left of the menu item `label`.\n   * * `label`: A primary string of text for a menu item or a function that receives `inputValue` as function parameter and returns text to be displayed in for a menu item.\n   * ```\n   * {\n   *\tid: '1',\n   *\ticon: (\n   *\t\t<Icon\n   *\t\t\tassistiveText={{ label: 'Add in Accounts' }}\n   *\t\t\tsize=\"x-small\"\n   *\t\t\tcategory=\"utility\"\n   *\t\t\tname=\"search\"\n   *\t\t/>\n   *\t),\n   *\tlabel: (searchTerm) => {\n   *\t\treturn `${searchTerm} in Accounts`;\n   *\t},\n   * }\n   * ```\n   * _Tested with snapshot testing._\n   */\n  optionsSearchEntity: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string,\n    icon: PropTypes.node,\n    label: PropTypes.oneOfType([PropTypes.string, PropTypes.func])\n  })),\n\n  /**\n   * Node of type [Combobox](/components/comboboxes/) for creating grouped comboboxes.\n   */\n  entityCombobox: PropTypes.node,\n\n  /**\n   * Defines Combobox variant styling and functionality\n   */\n  variant: PropTypes.oneOf(['base', 'inline-listbox', 'popover', 'readonly'])\n};\nvar defaultProps = {\n  assistiveText: {\n    loadingMenuItems: 'Loading',\n    optionSelectedInMenu: 'Current Selection:',\n    removeSingleSelectedOption: 'Remove selected option',\n    removePill: ', Press delete or backspace to remove',\n    selectedListboxLabel: 'Selected Options:'\n  },\n  events: {},\n  labels: {\n    cancelButton: 'Cancel',\n    doneButton: \"Done\",\n    noOptionsFound: 'No matches found.',\n    optionDisabledTooltipLabel: 'This option is disabled.',\n    placeholderReadOnly: 'Select an Option',\n    removePillTitle: 'Remove'\n  },\n  inheritWidthOf: 'target',\n  menuPosition: 'absolute',\n  optionsSearchEntity: [],\n  optionsAddItem: [],\n  required: false,\n  selection: [],\n  singleInputDisabled: false,\n  variant: 'base'\n};\n/**\n * A widget that provides a user with an input field that is either an autocomplete or readonly, accompanied with a listbox of pre-definfined options.\n */\n\nvar Combobox = /*#__PURE__*/function (_React$Component) {\n  _inherits(Combobox, _React$Component);\n\n  var _super = _createSuper(Combobox);\n\n  function Combobox(_props) {\n    var _this;\n\n    _classCallCheck(this, Combobox);\n\n    _this = _super.call(this, _props);\n\n    _defineProperty(_assertThisInitialized(_this), \"getCustomPopoverProps\", function (body, _ref) {\n      var assistiveText = _ref.assistiveText,\n          labels = _ref.labels;\n      /*\n       * Generate the popover props based on passed in popover props. Using the default behavior if not provided by passed in popover\n       */\n\n      var popoverBody = /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"slds-assistive-text\",\n        id: \"\".concat(_this.getId(), \"-label\")\n      }, assistiveText.popoverLabel), body);\n      var popoverFooter = /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(Button, {\n        label: labels.cancelButton,\n        onClick: function onClick(e) {\n          _this.handleClose(e, {\n            trigger: 'cancel'\n          });\n        }\n      }), /*#__PURE__*/React.createElement(Button, {\n        label: labels.doneButton,\n        variant: \"brand\",\n        onClick: _this.handleClose\n      }));\n      var defaultPopoverProps = {\n        ariaLabelledby: \"\".concat(_this.getId(), \"-label\"),\n        align: 'bottom',\n        body: popoverBody,\n        className: 'slds-popover_full-width',\n        footer: popoverFooter,\n        footerClassName: 'slds-popover__footer_form',\n        hasNoNubbin: true,\n        id: _this.getId(),\n        isOpen: _this.state.isOpen,\n        hasNoTriggerStyles: true,\n        onOpen: _this.handleOpen,\n        onClose: _this.handleClose,\n        onRequestClose: _this.handleClose\n      };\n      /* Merge in passed popover's props if there is any to override the default popover props */\n\n      var popoverProps = assign(defaultPopoverProps, _this.props.popover ? _this.props.popover.props : {});\n      popoverProps.body = popoverBody; // eslint-disable-next-line fp/no-delete\n\n      delete popoverProps.children;\n      return popoverProps;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getId\", function () {\n      return _this.props.id || _this.generatedId;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getIsActiveOption\", function () {\n      return _this.state.activeOption && _this.state.activeOptionIndex !== -1;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getIsOpen\", function () {\n      return !!(typeof _this.props.isOpen === 'boolean' ? _this.props.isOpen : _this.state.isOpen);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getNewActiveOptionIndex\", function (_ref2) {\n      var activeOptionIndex = _ref2.activeOptionIndex,\n          offset = _ref2.offset,\n          options = _ref2.options; // used by menu listbox and selected options listbox\n\n      var nextIndex = activeOptionIndex + offset;\n      var skipIndex = options.length > nextIndex && nextIndex >= 0 && options[nextIndex].type === 'separator';\n      var newIndex = skipIndex ? nextIndex + offset : nextIndex;\n      var hasNewIndex = options.length > nextIndex && nextIndex >= 0;\n      return hasNewIndex ? newIndex : activeOptionIndex;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getOptions\", function () {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _this.props;\n      var localProps = props;\n      var options = [];\n\n      if (localProps.optionsSearchEntity.length > 0) {\n        // eslint-disable-next-line fp/no-mutating-methods\n        options.push.apply(options, _toConsumableArray(localProps.optionsSearchEntity));\n      }\n\n      if (localProps.options) {\n        // eslint-disable-next-line fp/no-mutating-methods\n        options.push.apply(options, _toConsumableArray(localProps.options));\n      }\n\n      if (localProps.optionsAddItem.length > 0) {\n        // eslint-disable-next-line fp/no-mutating-methods\n        options.push.apply(options, _toConsumableArray(localProps.optionsAddItem));\n      }\n\n      return options;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getTargetElement\", function () {\n      return _this.inputRef;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"setInputRef\", function (component) {\n      _this.inputRef = component; // yes, this is a render triggered by a render.\n      // Dialog/Popper.js cannot place the menu until\n      // the trigger/target DOM node is mounted. This\n      // way `findDOMNode` is not called and parent\n      // DOM nodes are not queried.\n\n      if (!_this.state.inputRendered) {\n        _this.setState({\n          inputRendered: true\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"setSelectedListboxRef\", function (ref) {\n      _this.selectedListboxRef = ref;\n\n      if (_this.props.selectedListboxRef) {\n        _this.props.selectedListboxRef(ref);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleBlurPill\", function () {\n      _this.setState({\n        listboxHasFocus: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleClickOutside\", function (event) {\n      _this.handleRequestClose(event, {});\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleClose\", function (event) {\n      var _ref3 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n          trigger = _ref3.trigger;\n\n      var isOpen = _this.getIsOpen();\n\n      if (isOpen) {\n        if (currentOpenDropdown === _assertThisInitialized(_this)) {\n          currentOpenDropdown = undefined;\n        }\n\n        _this.setState({\n          activeOption: undefined,\n          activeOptionIndex: -1,\n          isOpen: false\n        });\n\n        if (_this.props.variant === 'popover' && trigger === 'cancel') {\n          if (_this.props.popover.props.onClose) {\n            _this.props.popover.props.onClose(event, {\n              trigger: trigger\n            });\n          }\n        }\n\n        if (_this.props.events.onClose) {\n          _this.props.events.onClose(event, {});\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleInputBlur\", function (event) {\n      // If menu is open when the input's onBlur event fires, it will close before the onClick of the menu item can fire.\n      setTimeout(function () {\n        var activeElement = documentDefined ? document.activeElement : false; // detect if the scrollbar of the combobox-autocomplete/lookup menu is clicked in IE11. If it is, return focus to input, and do not close menu.\n\n        if (activeElement && activeElement.tagName === 'DIV' && activeElement.id === \"\".concat(_this.getId(), \"-listbox\")) {\n          if (_this.inputRef) {\n            _this.inputRef.focus();\n          }\n        } else if (!_this.props.popover) {\n          _this.handleClose(event);\n        }\n      }, 200);\n\n      if (_this.props.events.onBlur) {\n        _this.props.events.onBlur(event);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleInputChange\", function (event) {\n      _this.requestOpenMenu();\n\n      if (_this.props.events && _this.props.events.onChange) {\n        _this.props.events.onChange(event, {\n          value: event.target.value\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleInputFocus\", function (event) {\n      if (_this.props.events.onFocus) {\n        _this.props.events.onFocus(event, {});\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleInputSubmit\", function (event) {\n      if (_this.state.activeOption && _this.state.activeOption.disabled) {\n        return;\n      }\n\n      if (_this.state.activeOption && (_this.state.activeOption.type === 'header' || _this.state.activeOption.type === 'footer')) {\n        _this.state.activeOption.onClick(event);\n\n        return;\n      } // use menu options\n\n\n      if (_this.getIsActiveOption()) {\n        _this.handleSelect(event, {\n          option: _this.state.activeOption,\n          selection: _this.props.selection\n        }); // use input value, if not limited to predefined options (in the menu)\n\n      } else if (!_this.props.predefinedOptionsOnly && event.target.value !== '' && _this.props.events.onSubmit) {\n        _this.props.events.onSubmit(event, {\n          value: event.target.value\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleKeyDown\", function (event) {\n      var _callbacks;\n\n      var callbacks = (_callbacks = {}, _defineProperty(_callbacks, KEYS.DOWN, {\n        callback: _this.handleKeyDownDown\n      }), _defineProperty(_callbacks, KEYS.ENTER, {\n        callback: _this.handleInputSubmit\n      }), _defineProperty(_callbacks, KEYS.ESCAPE, {\n        callback: _this.handleClose\n      }), _defineProperty(_callbacks, KEYS.UP, {\n        callback: _this.handleKeyDownUp\n      }), _callbacks);\n\n      if (_this.props.variant === 'readonly') {\n        if (_this.props.selection.length > 2) {\n          callbacks[KEYS.TAB] = {\n            callback: _this.handleKeyDownTab\n          };\n        } else {\n          callbacks[KEYS.TAB] = undefined;\n        }\n\n        callbacks.other = {\n          callback: _this.handleKeyDownOther,\n          stopPropagation: false\n        };\n      } // Helper function that takes an object literal of callbacks that are triggered with a key event\n\n\n      mapKeyEventCallbacks(event, {\n        callbacks: callbacks\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleKeyDownDown\", function (event) {\n      // Don't open if user is selecting text\n      if (!event.shiftKey) {\n        _this.openDialog();\n      }\n\n      if (_this.props.variant !== 'popover') {\n        _this.handleNavigateListboxMenu(event, {\n          direction: 'next'\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleKeyDownTab\", function () {\n      if (_this.selectedListboxRef) {\n        _this.setState({\n          listboxHasFocus: true\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleKeyDownUp\", function (event) {\n      // Don't open if user is selecting text\n      if (!event.shiftKey && _this.getIsOpen()) {\n        _this.handleNavigateListboxMenu(event, {\n          direction: 'previous'\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleKeyDownOther\", function (event) {\n      var activeOptionIndex = keyLetterMenuItemSelect({\n        key: event.key,\n        keyBuffer: _this.menuKeyBuffer,\n        keyCode: event.keyCode,\n        options: _this.getOptions()\n      });\n\n      if (activeOptionIndex !== undefined) {\n        if (_this.getIsOpen()) {\n          menuItemSelectScroll({\n            container: _this.menuRef,\n            focusedIndex: activeOptionIndex\n          });\n        }\n\n        _this.setState({\n          activeOption: _this.getOptions()[activeOptionIndex],\n          activeOptionIndex: activeOptionIndex\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleNavigateListboxMenu\", function (event, _ref4) {\n      var direction = _ref4.direction;\n      var offsets = {\n        next: 1,\n        previous: -1\n      }; // takes current/previous state and returns an object with the new state\n\n      _this.setState(function (prevState) {\n        var newIndex = _this.getNewActiveOptionIndex({\n          activeOptionIndex: prevState.activeOptionIndex,\n          offset: offsets[direction],\n          options: _this.getOptions()\n        }); // eslint-disable-next-line react/no-access-state-in-setstate\n\n\n        if (_this.getIsOpen()) {\n          menuItemSelectScroll({\n            container: _this.menuRef,\n            focusedIndex: newIndex\n          });\n        }\n\n        return {\n          activeOption: _this.getOptions()[newIndex],\n          activeOptionIndex: newIndex\n        };\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleNavigateSelectedListbox\", function (event, _ref5) {\n      var direction = _ref5.direction;\n      var offsets = {\n        next: 1,\n        previous: -1\n      };\n\n      _this.setState(function (prevState) {\n        var isLastOptionAndRightIsPressed = prevState.activeSelectedOptionIndex + 1 === _this.props.selection.length && direction === 'next';\n        var isFirstOptionAndLeftIsPressed = prevState.activeSelectedOptionIndex === 0 && direction === 'previous';\n        var newState;\n\n        if (isLastOptionAndRightIsPressed) {\n          newState = {\n            activeSelectedOption: _this.props.selection[0],\n            activeSelectedOptionIndex: 0,\n            listboxHasFocus: true\n          };\n        } else if (isFirstOptionAndLeftIsPressed) {\n          newState = {\n            activeSelectedOption: _this.props.selection[_this.props.selection.length - 1],\n            activeSelectedOptionIndex: _this.props.selection.length - 1,\n            listboxHasFocus: true\n          };\n        } else {\n          var newIndex = _this.getNewActiveOptionIndex({\n            activeOptionIndex: prevState.activeSelectedOptionIndex,\n            offset: offsets[direction],\n            options: _this.props.selection\n          });\n\n          newState = {\n            activeSelectedOption: _this.props.selection[newIndex],\n            activeSelectedOptionIndex: newIndex,\n            listboxHasFocus: true\n          };\n        }\n\n        return newState;\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleOpen\", function (event, data) {\n      var isOpen = _this.getIsOpen();\n\n      if (!isOpen) {\n        if (currentOpenDropdown && isFunction(currentOpenDropdown.handleClose)) {\n          currentOpenDropdown.handleClose();\n        }\n      } else {\n        currentOpenDropdown = _assertThisInitialized(_this);\n\n        _this.setState({\n          isOpen: true\n        });\n\n        if (_this.props.events.onOpen) {\n          _this.props.events.onOpen(event, data);\n        }\n\n        if (_this.props.variant === 'readonly' && _this.menuRef !== null) {\n          var activeOptionIndex = findIndex(_this.getOptions(), function (item) {\n            return isEqual(item, _this.props.selection[0]);\n          });\n\n          _this.setState({\n            activeOptionIndex: activeOptionIndex\n          });\n\n          menuItemSelectScroll({\n            container: _this.menuRef,\n            focusedIndex: activeOptionIndex\n          });\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handlePillFocus\", function (event, _ref6) {\n      var option = _ref6.option,\n          index = _ref6.index;\n\n      if (!_this.state.listboxHasFocus) {\n        _this.setState({\n          activeSelectedOption: option,\n          activeSelectedOptionIndex: index,\n          listboxHasFocus: true\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleRemoveSelectedOption\", function (event, _ref7) {\n      var option = _ref7.option,\n          index = _ref7.index;\n      event.preventDefault();\n      var onlyOnePillAndInputExists = _this.props.selection.length === 1;\n      var isReadOnlyAndTwoPillsExists = _this.props.selection.length === 2 && _this.props.variant === 'readonly' && _this.props.multiple;\n      var lastPillWasRemoved = index + 1 === _this.props.selection.length;\n\n      if ((onlyOnePillAndInputExists || isReadOnlyAndTwoPillsExists) && _this.inputRef) {\n        _this.inputRef.focus();\n      } else if (lastPillWasRemoved) {\n        // set focus to previous option and index\n        _this.setState({\n          activeSelectedOption: _this.props.selection[index - 1],\n          activeSelectedOptionIndex: index - 1,\n          listboxHasFocus: true\n        });\n      } else {\n        // set focus to next option, but same index\n        _this.setState({\n          activeSelectedOption: _this.props.selection[index + 1],\n          activeSelectedOptionIndex: index,\n          listboxHasFocus: true\n        });\n      }\n\n      if (_this.props.events.onRequestRemoveSelectedOption) {\n        _this.props.events.onRequestRemoveSelectedOption(event, {\n          selection: reject(_this.props.selection, option)\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleRequestClose\", function (event, data) {\n      if (_this.props.events.onRequestClose) {\n        _this.props.events.onRequestClose(event, data);\n      }\n\n      if (_this.getIsOpen()) {\n        _this.handleClose(event, {\n          trigger: 'cancel'\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleRequestFocusSelectedListbox\", function (event, _ref8) {\n      var ref = _ref8.ref;\n\n      if (ref) {\n        _this.activeSelectedOptionRef = ref;\n\n        _this.activeSelectedOptionRef.focus();\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSelect\", function (event, _ref9) {\n      var selection = _ref9.selection,\n          option = _ref9.option;\n      var newSelection;\n\n      var isSelected = _this.isSelected({\n        selection: selection,\n        option: option\n      });\n\n      var singleSelectAndSelectedWasNotClicked = !_this.props.multiple && !isSelected;\n      var multiSelectAndSelectedWasNotClicked = _this.props.multiple && !isSelected;\n\n      if (singleSelectAndSelectedWasNotClicked) {\n        newSelection = [option];\n      } else if (multiSelectAndSelectedWasNotClicked) {\n        newSelection = [].concat(_toConsumableArray(_this.props.selection), [option]);\n      } else {\n        newSelection = reject(_this.props.selection, option);\n      }\n\n      if (_this.props.events.onSelect) {\n        _this.props.events.onSelect(event, {\n          selection: newSelection\n        });\n      }\n\n      _this.handleClose(); // if (this.inputRef) {\n      // \tthis.inputRef.focus();\n      // }\n\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"isSelected\", function (_ref10) {\n      var selection = _ref10.selection,\n          option = _ref10.option;\n      return !!find(selection, option);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"openDialog\", function () {\n      if (_this.props.events.onRequestOpen) {\n        _this.props.events.onRequestOpen();\n      } else {\n        _this.setState({\n          isOpen: true\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"requestOpenMenu\", function () {\n      var isInlineSingleSelectionAndIsNotSelected = !_this.props.multiple && _this.props.selection.length === 0 && _this.props.variant === 'inline-listbox';\n\n      if (isInlineSingleSelectionAndIsNotSelected || _this.props.multiple || _this.props.variant === 'readonly') {\n        _this.openDialog();\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderBase\", function (_ref11) {\n      var assistiveText = _ref11.assistiveText,\n          labels = _ref11.labels,\n          props = _ref11.props,\n          userDefinedProps = _ref11.userDefinedProps;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"slds-form-element__control\"\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"slds-combobox_container\"\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: classNames('slds-combobox', 'slds-dropdown-trigger', 'slds-dropdown-trigger_click', 'ignore-react-onclickoutside', {\n          'slds-is-open': _this.getIsOpen()\n        }, {\n          'slds-has-error': props.errorText\n        }, props.className) // Not in ARIA 1.2 spec, temporary for SLDS styles\n        ,\n        role: \"combobox\" // eslint-disable-line jsx-a11y/role-supports-aria-props, jsx-a11y/role-has-required-aria-props\n\n      }, /*#__PURE__*/React.createElement(InnerInput, _extends({\n        \"aria-autocomplete\": \"list\",\n        \"aria-controls\": _this.getIsOpen() ? \"\".concat(_this.getId(), \"-listbox\") : undefined,\n        \"aria-activedescendant\": _this.state.activeOption ? \"\".concat(_this.getId(), \"-listbox-option-\").concat(_this.state.activeOption.id) : null,\n        \"aria-describedby\": _this.getErrorId(),\n        \"aria-expanded\": _this.getIsOpen(),\n        \"aria-haspopup\": \"listbox\",\n        role: \"combobox\",\n        autoComplete: \"off\",\n        className: \"slds-combobox__input\",\n        containerProps: {\n          className: 'slds-combobox__form-element',\n          role: 'none'\n        },\n        hasSpinner: _this.props.hasInputSpinner,\n        iconRight: /*#__PURE__*/React.createElement(InputIcon, {\n          category: \"utility\",\n          name: \"search\",\n          title: labels.inputIconTitle\n        }),\n        id: _this.getId(),\n        onFocus: _this.handleInputFocus,\n        onBlur: _this.handleInputBlur,\n        onKeyDown: _this.handleKeyDown,\n        inputRef: _this.setInputRef,\n        onClick: function onClick() {\n          _this.openDialog();\n        },\n        onChange: _this.handleInputChange,\n        placeholder: labels.placeholder,\n        defaultValue: props.defaultValue,\n        readOnly: !!(props.predefinedOptionsOnly && _this.state.activeOption),\n        required: props.required,\n        value: props.predefinedOptionsOnly ? _this.state.activeOption && _this.state.activeOption.label || props.value : props.value\n      }, userDefinedProps.input)), _this.getDialog({\n        menuRenderer: _this.renderMenu({\n          assistiveText: assistiveText,\n          labels: labels\n        })\n      }))), /*#__PURE__*/React.createElement(SelectedListBox, {\n        activeOption: _this.state.activeSelectedOption,\n        activeOptionIndex: _this.state.activeSelectedOptionIndex,\n        assistiveText: assistiveText,\n        events: {\n          onBlurPill: _this.handleBlurPill,\n          onPillFocus: _this.handlePillFocus,\n          onRequestFocus: _this.handleRequestFocusSelectedListbox,\n          onRequestFocusOnNextPill: _this.handleNavigateSelectedListbox,\n          onRequestFocusOnPreviousPill: _this.handleNavigateSelectedListbox,\n          onRequestRemove: _this.handleRemoveSelectedOption\n        },\n        id: \"\".concat(_this.getId(), \"-selected-listbox\"),\n        labels: labels,\n        selectedListboxRef: _this.setSelectedListboxRef,\n        selection: props.selection,\n        listboxHasFocus: _this.state.listboxHasFocus\n      }), props.errorText && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"slds-has-error\"\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        id: _this.getErrorId(),\n        className: \"slds-form-element__help slds-has-error\"\n      }, props.errorText)));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderInlineMultiple\", function (_ref12) {\n      var assistiveText = _ref12.assistiveText,\n          labels = _ref12.labels,\n          props = _ref12.props,\n          userDefinedProps = _ref12.userDefinedProps;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"slds-form-element__control\"\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: classNames('slds-combobox_container', {\n          'slds-has-inline-listbox': props.selection.length\n        })\n      }, props.selection.length ? /*#__PURE__*/React.createElement(SelectedListBox, {\n        activeOption: _this.state.activeSelectedOption,\n        activeOptionIndex: _this.state.activeSelectedOptionIndex,\n        assistiveText: assistiveText,\n        containerRole: \"listbox\",\n        containerAriaOrientation: \"horizontal\",\n        listboxRole: \"group\",\n        listboxAriaOrientation: null,\n        events: {\n          onBlurPill: _this.handleBlurPill,\n          onPillFocus: _this.handlePillFocus,\n          onRequestFocus: _this.handleRequestFocusSelectedListbox,\n          onRequestFocusOnNextPill: _this.handleNavigateSelectedListbox,\n          onRequestFocusOnPreviousPill: _this.handleNavigateSelectedListbox,\n          onRequestRemove: _this.handleRemoveSelectedOption\n        },\n        id: \"\".concat(_this.getId(), \"-selected-listbox\"),\n        labels: labels,\n        selectedListboxRef: _this.setSelectedListboxRef,\n        selection: props.selection,\n        listboxHasFocus: _this.state.listboxHasFocus\n      }) : null, /*#__PURE__*/React.createElement(\"div\", {\n        className: classNames('slds-combobox', 'slds-dropdown-trigger', 'slds-dropdown-trigger_click', 'ignore-react-onclickoutside', {\n          'slds-is-open': _this.getIsOpen()\n        }, {\n          'slds-has-error': props.errorText\n        }, props.className) // Not in ARIA 1.2 spec, temporary for SLDS styles\n        ,\n        role: \"combobox\" // eslint-disable-line jsx-a11y/role-supports-aria-props, jsx-a11y/role-has-required-aria-props\n\n      }, /*#__PURE__*/React.createElement(InnerInput, _extends({\n        \"aria-autocomplete\": \"list\",\n        \"aria-controls\": _this.getIsOpen() ? \"\".concat(_this.getId(), \"-listbox\") : undefined,\n        \"aria-activedescendant\": _this.state.activeOption ? \"\".concat(_this.getId(), \"-listbox-option-\").concat(_this.state.activeOption.id) : null,\n        \"aria-describedby\": _this.getErrorId(),\n        \"aria-expanded\": _this.getIsOpen(),\n        \"aria-haspopup\": \"listbox\" // eslint-disable-line jsx-a11y/aria-proptypes\n        ,\n        role: \"combobox\",\n        defaultValue: props.defaultValue,\n        autoComplete: \"off\",\n        className: \"slds-combobox__input\",\n        containerProps: {\n          className: 'slds-combobox__form-element',\n          role: 'none'\n        },\n        hasSpinner: _this.props.hasInputSpinner,\n        iconRight: /*#__PURE__*/React.createElement(InputIcon, {\n          category: \"utility\",\n          name: \"search\",\n          title: labels.inputIconTitle\n        }),\n        id: _this.getId(),\n        onFocus: _this.handleInputFocus,\n        onBlur: _this.handleInputBlur,\n        onKeyDown: _this.handleKeyDown,\n        inputRef: _this.setInputRef,\n        onClick: function onClick() {\n          _this.openDialog();\n        },\n        onChange: _this.handleInputChange,\n        placeholder: labels.placeholder,\n        readOnly: !!(props.predefinedOptionsOnly && _this.state.activeOption),\n        required: props.required,\n        value: props.predefinedOptionsOnly ? _this.state.activeOption && _this.state.activeOption.label || props.value : props.value\n      }, userDefinedProps.input)), _this.getDialog({\n        menuRenderer: _this.renderMenu({\n          assistiveText: assistiveText,\n          labels: labels\n        })\n      }), props.errorText && /*#__PURE__*/React.createElement(\"div\", {\n        id: _this.getErrorId(),\n        className: \"slds-form-element__help\"\n      }, props.errorText))));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderInlineSingle\", function (_ref13) {\n      var assistiveText = _ref13.assistiveText,\n          labels = _ref13.labels,\n          props = _ref13.props,\n          userDefinedProps = _ref13.userDefinedProps;\n      var iconLeft = props.selection[0] && props.selection[0].icon ? /*#__PURE__*/React.cloneElement(props.selection[0].icon, {\n        containerClassName: 'slds-combobox__input-entity-icon'\n      }) : null;\n      var value = props.selection[0] && props.selection[0].label ? props.selection[0].label : props.value;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"slds-form-element__control\"\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: classNames('slds-combobox_container', {\n          'slds-has-inline-listbox': props.selection.length\n        })\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: classNames('slds-combobox', 'slds-dropdown-trigger', 'slds-dropdown-trigger_click', 'ignore-react-onclickoutside', {\n          'slds-is-open': _this.getIsOpen()\n        }, {\n          'slds-has-error': props.errorText\n        }, props.className) // Not in ARIA 1.2 spec, temporary for SLDS styles\n        ,\n        role: \"combobox\" // eslint-disable-line jsx-a11y/role-supports-aria-props, jsx-a11y/role-has-required-aria-props\n\n      }, /*#__PURE__*/React.createElement(InnerInput, _extends({\n        defaultValue: props.defaultValue,\n        \"aria-autocomplete\": \"list\",\n        \"aria-controls\": _this.getIsOpen() ? \"\".concat(_this.getId(), \"-listbox\") : undefined,\n        \"aria-activedescendant\": _this.state.activeOption ? \"\".concat(_this.getId(), \"-listbox-option-\").concat(_this.state.activeOption.id) : null,\n        \"aria-describedby\": _this.getErrorId(),\n        \"aria-expanded\": _this.getIsOpen(),\n        \"aria-haspopup\": \"listbox\" // eslint-disable-line jsx-a11y/aria-proptypes\n        ,\n        role: \"combobox\",\n        autoComplete: \"off\",\n        className: \"slds-combobox__input\",\n        containerProps: {\n          className: 'slds-combobox__form-element',\n          role: 'none'\n        },\n        disabled: _this.props.singleInputDisabled,\n        hasSpinner: _this.props.hasInputSpinner,\n        iconRight: props.selection.length ? /*#__PURE__*/React.createElement(InputIcon, {\n          assistiveText: {\n            icon: assistiveText.removeSingleSelectedOption\n          },\n          buttonRef: function buttonRef(component) {\n            _this.buttonRef = component;\n          },\n          category: \"utility\",\n          iconPosition: \"right\",\n          name: \"close\",\n          onClick: function onClick(event) {\n            _this.handleRemoveSelectedOption(event, {\n              option: props.selection[0]\n            });\n          }\n        }) : /*#__PURE__*/React.createElement(InputIcon, {\n          category: \"utility\",\n          name: \"search\"\n        }),\n        iconLeft: iconLeft,\n        id: _this.getId(),\n        onFocus: _this.handleInputFocus,\n        onBlur: _this.handleInputBlur,\n        onKeyDown: _this.handleKeyDown,\n        inputRef: _this.setInputRef,\n        onClick: function onClick() {\n          _this.requestOpenMenu();\n        },\n        onChange: function onChange(event) {\n          if (!props.selection.length) {\n            _this.handleInputChange(event);\n          }\n        },\n        placeholder: labels.placeholder,\n        readOnly: !!(props.predefinedOptionsOnly && _this.state.activeOption) || !!props.selection.length,\n        required: props.required,\n        value: props.predefinedOptionsOnly ? _this.state.activeOption && _this.state.activeOption.label || props.value : value\n      }, userDefinedProps.input)), _this.getDialog({\n        menuRenderer: _this.renderMenu({\n          assistiveText: assistiveText,\n          labels: labels\n        })\n      }), props.errorText && /*#__PURE__*/React.createElement(\"div\", {\n        id: _this.getErrorId(),\n        className: \"slds-form-element__help\"\n      }, props.errorText))));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderMenu\", function (_ref14) {\n      var assistiveText = _ref14.assistiveText,\n          labels = _ref14.labels;\n      var menuVariant = {\n        base: 'icon-title-subtitle',\n        'inline-listbox': 'icon-title-subtitle',\n        readonly: 'checkbox'\n      };\n      var readonlyItemVisibleLength = _this.props.variant === 'readonly' ? 5 : null;\n      return /*#__PURE__*/React.createElement(Menu, {\n        assistiveText: assistiveText,\n        activeOption: _this.state.activeOption,\n        activeOptionIndex: _this.state.activeOptionIndex,\n        classNameMenu: _this.props.classNameMenu,\n        classNameMenuSubHeader: _this.props.classNameMenuSubHeader,\n        clearActiveOption: _this.clearActiveOption,\n        inheritWidthOf: _this.props.inheritWidthOf,\n        inputId: _this.getId(),\n        inputValue: _this.props.value,\n        isSelected: _this.isSelected,\n        itemVisibleLength: _this.props.menuItemVisibleLength || readonlyItemVisibleLength,\n        labels: labels,\n        hasMenuSpinner: _this.props.hasMenuSpinner,\n        menuItem: _this.props.menuItem,\n        menuPosition: _this.props.menuPosition,\n        menuRef: function menuRef(ref) {\n          _this.menuRef = ref;\n        },\n        maxWidth: _this.props.menuMaxWidth,\n        options: _this.props.options,\n        optionsAddItem: _this.props.optionsAddItem,\n        optionsSearchEntity: _this.props.optionsSearchEntity,\n        onSelect: _this.handleSelect // For backward compatibility, 'menuItem' prop will be deprecated soon\n        ,\n        onRenderMenuItem: _this.props.onRenderMenuItem ? _this.props.onRenderMenuItem : _this.props.menuItem,\n        selection: _this.props.selection,\n        tooltipMenuItemDisabled: _this.props.tooltipMenuItemDisabled,\n        variant: menuVariant[_this.props.variant]\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderPopover\", function (_ref15) {\n      var assistiveText = _ref15.assistiveText,\n          labels = _ref15.labels,\n          props = _ref15.props;\n\n      var popoverProps = _this.getCustomPopoverProps(_this.props.popover.props.body, {\n        assistiveText: assistiveText,\n        labels: labels\n      });\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"slds-form-element__control\"\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"slds-combobox_container\"\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: classNames('slds-combobox', 'slds-dropdown-trigger', 'slds-dropdown-trigger_click', 'ignore-react-onclickoutside', {\n          'slds-is-open': _this.getIsOpen()\n        }, {\n          'slds-has-error': props.errorText\n        }, props.className) // Not in ARIA 1.2 spec, temporary for SLDS styles\n        ,\n        role: \"combobox\" // eslint-disable-line jsx-a11y/role-supports-aria-props, jsx-a11y/role-has-required-aria-props\n\n      }, /*#__PURE__*/React.createElement(Popover, popoverProps, /*#__PURE__*/React.createElement(InnerInput, {\n        \"aria-autocomplete\": \"none\",\n        \"aria-controls\": _this.getIsOpen() ? \"\".concat(_this.getId(), \"-popover\") : undefined,\n        \"aria-describedby\": _this.getErrorId(),\n        \"aria-expanded\": _this.getIsOpen(),\n        \"aria-haspopup\": \"dialog\" // eslint-disable-line jsx-a11y/aria-proptypes\n        ,\n        role: \"combobox\",\n        autoComplete: \"off\",\n        className: \"slds-combobox__input\",\n        containerProps: {\n          className: 'slds-combobox__form-element',\n          role: 'none'\n        },\n        iconRight: /*#__PURE__*/React.createElement(InputIcon, {\n          category: \"utility\",\n          name: \"down\",\n          variant: \"combobox\"\n        }),\n        id: _this.getId(),\n        onFocus: _this.handleInputFocus,\n        onBlur: _this.handleInputBlur,\n        onKeyDown: _this.handleKeyDown,\n        inputRef: _this.setInputRef,\n        onClick: function onClick() {\n          _this.openDialog();\n        },\n        onChange: _this.handleInputChange,\n        placeholder: labels.placeholder,\n        readOnly: true,\n        required: props.required,\n        value: props.value\n      })))), props.errorText && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"slds-has-error\"\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        id: _this.getErrorId(),\n        className: \"slds-form-element__help slds-has-error\"\n      }, props.errorText)));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderReadOnlyMultiple\", function (_ref16) {\n      var assistiveText = _ref16.assistiveText,\n          labels = _ref16.labels,\n          props = _ref16.props,\n          userDefinedProps = _ref16.userDefinedProps;\n      var value = props.selection.length > 1 ? labels.multipleOptionsSelected || \"\".concat(props.selection.length, \" options selected\") : props.selection[0] && props.selection[0].label || '';\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"slds-form-element__control\"\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"slds-combobox_container\"\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: classNames('slds-combobox', 'slds-dropdown-trigger', 'slds-dropdown-trigger_click', 'ignore-react-onclickoutside', {\n          'slds-is-open': _this.getIsOpen()\n        }, {\n          'slds-has-error': props.errorText\n        }, props.className) // Not in ARIA 1.2 spec, temporary for SLDS styles\n        ,\n        role: \"combobox\" // eslint-disable-line jsx-a11y/role-supports-aria-props, jsx-a11y/role-has-required-aria-props\n\n      }, /*#__PURE__*/React.createElement(InnerInput, _extends({\n        defaultValue: props.defaultValue,\n        \"aria-autocomplete\": \"list\",\n        \"aria-controls\": _this.getIsOpen() ? \"\".concat(_this.getId(), \"-listbox\") : undefined,\n        \"aria-activedescendant\": _this.state.activeOption ? \"\".concat(_this.getId(), \"-listbox-option-\").concat(_this.state.activeOption.id) : null,\n        \"aria-describedby\": _this.getErrorId(),\n        \"aria-expanded\": _this.getIsOpen(),\n        \"aria-haspopup\": \"listbox\" // eslint-disable-line jsx-a11y/aria-proptypes\n        ,\n        role: \"combobox\",\n        autoComplete: \"off\",\n        className: \"slds-combobox__input\",\n        containerProps: {\n          className: 'slds-combobox__form-element',\n          role: 'none'\n        },\n        iconRight: /*#__PURE__*/React.createElement(InputIcon, {\n          category: \"utility\",\n          name: \"down\",\n          variant: \"combobox\"\n        }),\n        id: _this.getId(),\n        onFocus: _this.handleInputFocus,\n        onBlur: _this.handleInputBlur,\n        onKeyDown: _this.handleKeyDown,\n        inputRef: _this.setInputRef,\n        onClick: function onClick() {\n          _this.requestOpenMenu();\n        },\n        onChange: function onChange(event) {\n          if (!props.selection.length) {\n            _this.handleInputChange(event);\n          }\n        },\n        placeholder: labels.placeholderReadOnly,\n        readOnly: true,\n        required: props.required,\n        value: value\n      }, userDefinedProps.input)), _this.getDialog({\n        menuRenderer: _this.renderMenu({\n          assistiveText: assistiveText,\n          labels: labels\n        })\n      }))), /*#__PURE__*/React.createElement(SelectedListBox, {\n        activeOption: _this.state.activeSelectedOption,\n        activeOptionIndex: _this.state.activeSelectedOptionIndex,\n        assistiveText: assistiveText,\n        events: {\n          onBlurPill: _this.handleBlurPill,\n          onPillFocus: _this.handlePillFocus,\n          onRequestFocus: _this.handleRequestFocusSelectedListbox,\n          onRequestFocusOnNextPill: _this.handleNavigateSelectedListbox,\n          onRequestFocusOnPreviousPill: _this.handleNavigateSelectedListbox,\n          onRequestRemove: _this.handleRemoveSelectedOption\n        },\n        id: \"\".concat(_this.getId(), \"-selected-listbox\"),\n        labels: labels,\n        selectedListboxRef: _this.setSelectedListboxRef,\n        selection: props.selection,\n        listboxHasFocus: _this.state.listboxHasFocus,\n        variant: _this.props.variant,\n        renderAtSelectionLength: 2\n      }), props.errorText && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"slds-has-error\"\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        id: _this.getErrorId(),\n        className: \"slds-form-element__help slds-has-error\"\n      }, props.errorText)));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderReadOnlySingle\", function (_ref17) {\n      var assistiveText = _ref17.assistiveText,\n          labels = _ref17.labels,\n          props = _ref17.props,\n          userDefinedProps = _ref17.userDefinedProps;\n      var value = props.selection[0] && props.selection[0].label || '';\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"slds-form-element__control\"\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"slds-combobox_container\"\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        // aria attributes have been moved to the `div` wrapping `input` to comply with ARIA 1.1.\n        className: classNames('slds-combobox', 'slds-dropdown-trigger', 'slds-dropdown-trigger_click', 'ignore-react-onclickoutside', {\n          'slds-is-open': _this.getIsOpen()\n        }, {\n          'slds-has-error': props.errorText\n        }, props.className) // Not in ARIA 1.2 spec, temporary for SLDS styles\n        ,\n        role: \"combobox\" // eslint-disable-line jsx-a11y/role-supports-aria-props, jsx-a11y/role-has-required-aria-props\n\n      }, /*#__PURE__*/React.createElement(InnerInput, _extends({\n        defaultValue: props.defaultValue,\n        \"aria-autocomplete\": \"list\",\n        \"aria-controls\": _this.getIsOpen() ? \"\".concat(_this.getId(), \"-listbox\") : undefined,\n        \"aria-activedescendant\": _this.state.activeOption ? \"\".concat(_this.getId(), \"-listbox-option-\").concat(_this.state.activeOption.id) : null,\n        \"aria-describedby\": _this.getErrorId(),\n        \"aria-expanded\": _this.getIsOpen(),\n        \"aria-haspopup\": \"listbox\" // eslint-disable-line jsx-a11y/aria-proptypes\n        ,\n        role: \"combobox\",\n        autoComplete: \"off\",\n        className: \"slds-combobox__input\",\n        containerProps: {\n          className: 'slds-combobox__form-element',\n          role: 'none'\n        },\n        disabled: _this.props.singleInputDisabled,\n        iconRight: /*#__PURE__*/React.createElement(InputIcon, {\n          category: \"utility\",\n          name: \"down\",\n          variant: \"combobox\"\n        }),\n        id: _this.getId(),\n        onFocus: _this.handleInputFocus,\n        onBlur: _this.handleInputBlur,\n        onKeyDown: _this.handleKeyDown,\n        inputRef: _this.setInputRef,\n        onClick: function onClick() {\n          _this.requestOpenMenu();\n        },\n        onChange: function onChange(event) {\n          if (!props.selection.length) {\n            _this.handleInputChange(event);\n          }\n        },\n        placeholder: labels.placeholderReadOnly,\n        readOnly: true,\n        required: props.required,\n        value: _this.state.activeOption && _this.state.activeOption.label || value\n      }, userDefinedProps.input)), _this.getDialog({\n        menuRenderer: _this.renderMenu({\n          assistiveText: assistiveText,\n          labels: labels\n        })\n      }), props.errorText && /*#__PURE__*/React.createElement(\"div\", {\n        id: _this.getErrorId(),\n        className: \"slds-form-element__help\"\n      }, props.errorText))));\n    });\n\n    _this.state = {\n      activeOption: undefined,\n      activeOptionIndex: -1,\n      // seeding initial state with this.props.selection[0]\n      activeSelectedOption: _this.props.selection && _this.props.selection[0] || undefined,\n      activeSelectedOptionIndex: 0,\n      listboxHasFocus: false,\n      isOpen: typeof _props.isOpen === 'boolean' ? _props.isOpen : false\n    };\n    _this.menuKeyBuffer = new KeyBuffer();\n    _this.menuRef = undefined;\n    _this.selectedListboxRef = null; // `checkProps` issues warnings to developers about properties (similar to React's built in development tools)\n\n    checkProps(COMBOBOX, _props, componentDoc);\n    _this.generatedId = shortid.generate();\n    _this.generatedErrorId = shortid.generate();\n    return _this;\n  }\n  /**\n   * Lifecycle methods\n   */\n\n\n  _createClass(Combobox, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(nextProps) {\n      var _this2 = this; // This logic will maintain the active highlight even when the\n      // option order changes. One example would be the server pushes\n      // data out as the user has the menu open. This logic clears\n      // `activeOption` if the active option is no longer in the options\n      // list. If it's in the options list, then find the new index and\n      // set `activeOptionIndex`\n\n\n      if (!isEqual(this.getOptions(), this.getOptions(nextProps))) {\n        var index = findIndex(this.getOptions(nextProps), function (item) {\n          return isEqual(item, _this2.state.activeOption);\n        });\n\n        if (index !== -1) {\n          // eslint-disable-next-line react/no-did-update-set-state\n          this.setState({\n            activeOptionIndex: index\n          });\n        } else {\n          // eslint-disable-next-line react/no-did-update-set-state\n          this.setState({\n            activeOption: undefined,\n            activeOptionIndex: -1\n          });\n        }\n      } else if (this.props.isOpen !== nextProps.isOpen) {\n        // eslint-disable-next-line react/no-did-update-set-state\n        this.setState({\n          activeOption: undefined,\n          activeOptionIndex: -1,\n          isOpen: nextProps.isOpen\n        });\n      } // there may be issues with tabindex/focus if the app removes an item\n      // from selection while the user is using the listbox\n\n\n      var selectedOptionsRenderIsInitialRender = this.props.selection && this.props.selection.length === 0 && nextProps.selection.length > 0;\n\n      if (selectedOptionsRenderIsInitialRender) {\n        // eslint-disable-next-line react/no-did-update-set-state\n        this.setState({\n          activeSelectedOption: nextProps.selection[0],\n          activeSelectedOptionIndex: 0\n        });\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (currentOpenDropdown === this) {\n        currentOpenDropdown = undefined;\n      }\n    }\n  }, {\n    key: \"getDialog\",\n    value: function getDialog(_ref18) {\n      var menuRenderer = _ref18.menuRenderer; // FOR BACKWARDS COMPATIBILITY\n\n      var menuPosition = this.props.isInline ? 'relative' : this.props.menuPosition; // eslint-disable-line react/prop-types\n\n      return !this.props.disabled && this.getIsOpen() ? /*#__PURE__*/React.createElement(Dialog, {\n        align: \"bottom left\",\n        context: this.context,\n        hasStaticAlignment: this.props.hasStaticAlignment,\n        inheritWidthOf: this.props.inheritWidthOf,\n        onClose: this.handleClose,\n        onMouseDown: function onMouseDown(event) {\n          // prevent onBlur\n          event.preventDefault();\n        },\n        onOpen: this.handleOpen,\n        onRequestTargetElement: this.getTargetElement,\n        position: menuPosition,\n        containerProps: {\n          id: \"\".concat(this.getId(), \"-listbox\"),\n          role: 'listbox'\n        }\n      }, menuRenderer) : null;\n    }\n  }, {\n    key: \"getErrorId\",\n    value: function getErrorId() {\n      return this.props['aria-describedby'] || this.props.errorText && this.generatedErrorId;\n    }\n    /**\n     * Shared class property getter methods\n     */\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var props = this.props; // Merge objects of strings with their default object\n\n      var assistiveText = assign({}, defaultProps.assistiveText, props.assistiveText);\n      var labels = assign({}, defaultProps.labels, this.props.labels);\n      var hasRenderedLabel = labels.label || assistiveText && assistiveText.label; // declare user defined props\n\n      var userDefinedProps = {};\n\n      if (props.input) {\n        // at the moment we only support overriding the input props\n        userDefinedProps.input = props.input.props;\n      }\n\n      var subRenderParameters = {\n        assistiveText: assistiveText,\n        labels: labels,\n        props: this.props,\n        userDefinedProps: userDefinedProps\n      };\n      var multipleOrSingle = this.props.multiple ? 'multiple' : 'single';\n      var subRenders = {\n        base: {\n          multiple: this.renderBase,\n          // same\n          single: this.renderBase\n        },\n        'inline-listbox': {\n          multiple: this.renderInlineMultiple,\n          single: this.renderInlineSingle\n        },\n        popover: {\n          multiple: this.renderPopover,\n          // same\n          single: this.renderPopover\n        },\n        readonly: {\n          multiple: this.renderReadOnlyMultiple,\n          single: this.renderReadOnlySingle\n        }\n      };\n      var variantExists = subRenders[this.props.variant][multipleOrSingle];\n      var mainCombobox = /*#__PURE__*/React.createElement(\"div\", {\n        className: classNames('slds-form-element', props.classNameContainer)\n      }, props.entityCombobox ? null : /*#__PURE__*/React.createElement(Label, {\n        assistiveText: this.props.assistiveText,\n        htmlFor: this.getId(),\n        label: labels.label,\n        required: props.required\n      }), this.props.fieldLevelHelpTooltip && hasRenderedLabel ? /*#__PURE__*/React.createElement(FieldLevelHelpTooltip, {\n        fieldLevelHelpTooltip: this.props.fieldLevelHelpTooltip\n      }) : null, variantExists ? subRenders[this.props.variant][multipleOrSingle](subRenderParameters) : subRenders.base.multiple(subRenderParameters));\n      return props.entityCombobox ? /*#__PURE__*/React.createElement(\"div\", {\n        className: \"slds-form-element\"\n      }, /*#__PURE__*/React.createElement(Label, {\n        assistiveText: props.assistiveText,\n        htmlFor: this.getId(),\n        label: labels.label,\n        required: props.required\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"slds-form-element__control\"\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"slds-combobox-group\"\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"slds-combobox_object-switcher slds-combobox-addon_start\"\n      }, props.entityCombobox), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"slds-combobox_container slds-combobox-addon_end\"\n      }, mainCombobox)))) : mainCombobox;\n    }\n  }]);\n\n  return Combobox;\n}(React.Component);\n\nCombobox.contextType = IconSettingsContext;\nCombobox.displayName = COMBOBOX;\nCombobox.propTypes = propTypes;\nCombobox.defaultProps = defaultProps;\nexport default Combobox;","map":{"version":3,"sources":["../../../.tmp-es/components/combobox/combobox.jsx"],"names":["documentDefined","propTypes","assistiveText","label","PropTypes","loadingMenuItems","optionSelectedInMenu","popoverLabel","removeSingleSelectedOption","removePill","selectedListboxLabel","string","className","classNameContainer","classNameMenu","classNameMenuSubHeader","events","onBlur","onChange","onClose","onFocus","onOpen","onRequestClose","onRequestOpen","onRequestRemoveSelectedOption","onSelect","onSubmit","func","errorText","fieldLevelHelpTooltip","hasInputSpinner","hasMenuSpinner","hasStaticAlignment","id","input","labels","multipleOptionsSelected","noOptionsFound","placeholder","placeholderReadOnly","removePillTitle","isOpen","inheritWidthOf","onRenderMenuItem","menuPosition","menuMaxWidth","multiple","options","icon","subTitle","type","disabled","tooltipContent","node","menuItemVisibleLength","predefinedOptionsOnly","popover","required","selection","selectedListboxRef","singleInputDisabled","tooltipMenuItemDisabled","value","defaultValue","optionsAddItem","optionsSearchEntity","entityCombobox","variant","defaultProps","cancelButton","doneButton","optionDisabledTooltipLabel","Combobox","React","Component","activeOption","activeOptionIndex","activeSelectedOption","activeSelectedOptionIndex","listboxHasFocus","props","checkProps","shortid","nextProps","isEqual","index","findIndex","selectedOptionsRenderIsInitialRender","currentOpenDropdown","popoverBody","popoverFooter","trigger","handleClose","defaultPopoverProps","ariaLabelledby","align","body","footer","footerClassName","hasNoNubbin","hasNoTriggerStyles","popoverProps","assign","menuRenderer","event","role","offset","nextIndex","skipIndex","newIndex","hasNewIndex","localProps","inputRendered","setTimeout","activeElement","document","option","callbacks","KEYS","callback","handleKeyDownDown","handleInputSubmit","handleKeyDownUp","handleKeyDownTab","stopPropagation","mapKeyEventCallbacks","direction","keyLetterMenuItemSelect","key","keyBuffer","keyCode","menuItemSelectScroll","container","focusedIndex","offsets","next","previous","prevState","isLastOptionAndRightIsPressed","isFirstOptionAndLeftIsPressed","newState","isFunction","onlyOnePillAndInputExists","isReadOnlyAndTwoPillsExists","lastPillWasRemoved","reject","ref","isSelected","singleSelectAndSelectedWasNotClicked","multiSelectAndSelectedWasNotClicked","newSelection","find","isInlineSingleSelectionAndIsNotSelected","userDefinedProps","classNames","inputIconTitle","onBlurPill","onPillFocus","onRequestFocus","onRequestFocusOnNextPill","onRequestFocusOnPreviousPill","onRequestRemove","handleRemoveSelectedOption","length","iconLeft","containerClassName","menuVariant","base","readonly","readonlyItemVisibleLength","hasRenderedLabel","subRenderParameters","multipleOrSingle","subRenders","single","renderBase","renderInlineSingle","renderPopover","renderReadOnlySingle","variantExists","mainCombobox"],"mappings":"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","sourcesContent":["/* eslint-disable max-lines */\n/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\n/* eslint-disable max-lines */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport assign from 'lodash.assign';\nimport find from 'lodash.find';\nimport reject from 'lodash.reject';\nimport isEqual from 'lodash.isequal';\nimport findIndex from 'lodash.findindex';\nimport isFunction from 'lodash.isfunction';\n\nimport classNames from 'classnames';\n\nimport shortid from 'shortid';\n\nimport Button from '../button';\nimport Dialog from '../utilities/dialog';\nimport InnerInput from '../../components/input/private/inner-input';\nimport InputIcon from '../icon/input-icon';\nimport Menu from './private/menu';\nimport Label from '../forms/private/label';\nimport Popover from '../popover';\nimport SelectedListBox from '../pill-container/private/selected-listbox';\n\nimport FieldLevelHelpTooltip from '../tooltip/private/field-level-help-tooltip';\nimport KEYS from '../../utilities/key-code';\nimport KeyBuffer from '../../utilities/key-buffer';\nimport keyLetterMenuItemSelect from '../../utilities/key-letter-menu-item-select';\nimport mapKeyEventCallbacks from '../../utilities/key-callbacks';\nimport menuItemSelectScroll from '../../utilities/menu-item-select-scroll';\n\nimport checkProps from './check-props';\n\nimport { COMBOBOX } from '../../utilities/constants';\nimport componentDoc from './component.json';\nimport { IconSettingsContext } from '../icon-settings';\n\nlet currentOpenDropdown;\nconst documentDefined = typeof document !== 'undefined';\n\nconst propTypes = {\n\t/**\n\t * **Assistive text for accessibility**\n\t * This object is merged with the default props object on every render.\n\t * * `label`: This is used as a visually hidden label if, no `labels.label` is provided.\n\t * * `loading`: Text added to loading spinner.\n\t * * `optionSelectedInMenu`: Added before selected menu items in Read-only variants (Picklists). The default is `Current Selection:`.\n\t * * `popoverLabel`: Used by popover variant, assistive text for the Popover aria-label.\n\t * * `removeSingleSelectedOption`: Used by inline-listbox, single-select variant to remove the selected item (pill). This is a button with focus. The default is `Remove selected option`.\n\t * * `removePill`: Used by multiple selection Comboboxes to remove a selected item (pill). Focus is on the pill. This is not a button. The default  is `, Press delete or backspace to remove`.\n\t * * `selectedListboxLabel`: This is a label for the selected listbox. The grouping of pills for multiple selection Comboboxes. The default is `Selected Options:`.\n\t * _Tested with snapshot testing._\n\t */\n\tassistiveText: PropTypes.shape({\n\t\tlabel: PropTypes.string,\n\t\tloadingMenuItems: PropTypes.string,\n\t\toptionSelectedInMenu: PropTypes.string,\n\t\tpopoverLabel: PropTypes.string,\n\t\tremoveSingleSelectedOption: PropTypes.string,\n\t\tremovePill: PropTypes.string,\n\t\tselectedListboxLabel: PropTypes.string,\n\t}),\n\t/**\n\t * The `aria-describedby` attribute is used to indicate the IDs of the elements that describe the object. It is used to establish a relationship between widgets or groups and text that described them.\n\t * This is very similar to aria-labelledby: a label describes the essence of an object, while a description provides more information that the user might need. _Tested with snapshot testing._\n\t */\n\t'aria-describedby': PropTypes.string,\n\t/**\n\t * CSS classes to be added to tag with `.slds-combobox`. Uses `classNames` [API](https://github.com/JedWatson/classnames). _Tested with snapshot testing._\n\t */\n\tclassName: PropTypes.oneOfType([\n\t\tPropTypes.array,\n\t\tPropTypes.object,\n\t\tPropTypes.string,\n\t]),\n\t/**\n\t * CSS classes to be added to top level tag with `.slds-form-element` and not on `.slds-combobox_container`. Uses `classNames` [API](https://github.com/JedWatson/classnames). _Tested with snapshot testing._\n\t */\n\tclassNameContainer: PropTypes.oneOfType([\n\t\tPropTypes.array,\n\t\tPropTypes.object,\n\t\tPropTypes.string,\n\t]),\n\t/**\n\t * CSS classes to be added to tag with `.slds-dropdown`. Uses `classNames` [API](https://github.com/JedWatson/classnames). Autocomplete/bass variant menu height should not scroll and should be determined by number items which should be no more than 10. _Tested with snapshot testing._\n\t */\n\tclassNameMenu: PropTypes.oneOfType([\n\t\tPropTypes.array,\n\t\tPropTypes.object,\n\t\tPropTypes.string,\n\t]),\n\t/**\n\t * CSS classes to be added to tag with `.slds-dropdown__header`. Uses `classNames` [API](https://github.com/JedWatson/classnames).\n\t */\n\tclassNameMenuSubHeader: PropTypes.oneOfType([\n\t\tPropTypes.array,\n\t\tPropTypes.object,\n\t\tPropTypes.string,\n\t]),\n\t/**\n\t * Event Callbacks\n\t * * `onBlur`: Called when `input` removes focus.\n\t * * `onChange`: Called when keyboard events occur within `input`\n\t * * `onClose`: Triggered when the menu has closed.\n\t * * `onFocus`: Called when `input` receives focus.\n\t * * `onOpen`: Triggered when the menu has opened.\n\t * * `onRequestClose`: Function called when the menu would like to hide. Please use with `isOpen`.\n\t * * `onRequestOpen`:  Function called when the menu would like to show. Please use with `isOpen`.\n\t * * `onRequestRemoveSelectedOption`: Function called when a single selection option is to be removed.\n\t * * `onSelect`: Function called when a menu item is selected. This includes header and footer items.\n\t * * `onSubmit`: Function called when user presses enter or submits the `input`\n\t * _Tested with Mocha testing._\n\t */\n\tevents: PropTypes.shape({\n\t\tonBlur: PropTypes.func,\n\t\tonChange: PropTypes.func,\n\t\tonClose: PropTypes.func,\n\t\tonFocus: PropTypes.func,\n\t\tonOpen: PropTypes.func,\n\t\tonRequestClose: PropTypes.func,\n\t\tonRequestOpen: PropTypes.func,\n\t\tonRequestRemoveSelectedOption: PropTypes.func,\n\t\tonSelect: PropTypes.func,\n\t\tonSubmit: PropTypes.func,\n\t}),\n\t/**\n\t * Message to display when the input is in an error state. When this is present, also visually highlights the component as in error. _Tested with snapshot testing._\n\t */\n\terrorText: PropTypes.string,\n\t/**\n\t * A [Tooltip](https://react.lightningdesignsystem.com/components/tooltips/) component that is displayed next to the `labels.label`. The props from the component will be merged and override any default props.\n\t */\n\tfieldLevelHelpTooltip: PropTypes.node,\n\t/**\n\t * If true, loading spinner appears inside input on right hand side.\n\t */\n\thasInputSpinner: PropTypes.bool,\n\t/**\n\t * Add loading spinner below the options\n\t */\n\thasMenuSpinner: PropTypes.bool,\n\t/**\n\t * By default, dialogs will flip their alignment (such as bottom to top) if they extend beyond a boundary element such as a scrolling parent or a window/viewpoint. `hasStaticAlignment` disables this behavior and allows this component to extend beyond boundary elements. _Not tested._\n\t */\n\thasStaticAlignment: PropTypes.bool,\n\t/**\n\t * HTML id for component. _Tested with snapshot testing._\n\t */\n\tid: PropTypes.string,\n\t/**\n\t * An [Input](https://react.lightningdesignsystem.com/components/inputs) component.\n\t * The props from this component will override any default props.\n\t */\n\tinput: PropTypes.node,\n\t/**\n\t * **Text labels for internationalization**\n\t * This object is merged with the default props object on every render.\n\t * * `label`: This label appears above the input.\n\t * * `cancelButton`: This label is only used by the dialog variant for the cancel button in the footer of the dialog. The default is `Cancel`\n\t * * `doneButton`: This label is only used by the dialog variant for the done button in the footer of the dialog. The default is `Done`\n\t * * `multipleOptionsSelected`: This label is used by the readonly variant when multiple options are selected. The default is `${props.selection.length} options selected`. This will override the entire string.\n\t * * `noOptionsFound`: Custom message that renders when no matches found. The default empty state is just text that says, 'No matches found.'.\n\t * * `placeholder`: Input placeholder\n\t * * `placeholderReadOnly`: Placeholder for Picklist-like Combobox\n\t * * `removePillTitle`: Title on `X` icon\n\t * _Tested with snapshot testing._\n\t */\n\tlabels: PropTypes.shape({\n\t\tlabel: PropTypes.oneOfType([PropTypes.node, PropTypes.string]),\n\t\tmultipleOptionsSelected: PropTypes.string,\n\t\tnoOptionsFound: PropTypes.oneOfType([PropTypes.node, PropTypes.string]),\n\t\tplaceholder: PropTypes.string,\n\t\tplaceholderReadOnly: PropTypes.string,\n\t\tremovePillTitle: PropTypes.string,\n\t}),\n\t/**\n\t * Forces the dropdown to be open or closed. See controlled/uncontrolled callback/prop pattern for more on suggested use view [Concepts and Best Practices](https://github.com/salesforce-ux/design-system-react/blob/master/CONTRIBUTING.md#concepts-and-best-practices) _Tested with snapshot testing._\n\t */\n\tisOpen: PropTypes.bool,\n\t/**\n\t * Sets the dialog width to the width of one of the following:\n\t * * `target`: Sets the dialog width to the width of the target. (Menus attached to `input` typically follow this UX pattern),\n\t * * `menu`: Consider setting a `menuMaxWidth` if using this value. If not, width will be set to width of largest menu item.\n\t * * `none`: Does not set a width on the dialog. _Tested with snapshot testing._\n\t */\n\tinheritWidthOf: PropTypes.oneOf(['target', 'menu', 'none']),\n\t/**\n\t * Accepts a custom menu item rendering function that becomes a custom component. It should return a React node. The checkmark is still rendered in readonly variants. This function is passed the following props:\n\t * * `assistiveText`: Object, `assistiveText` prop that is passed into Combobox\n\t * * `option`: Object, option data for item being rendered that is passed into Combobox\n\t * * `selected`: Boolean, allows rendering of `assistiveText.optionSelectedInMenu` in Readonly Combobox\n\t *\n\t * _Tested with snapshot testing._\n\t */\n\tonRenderMenuItem: PropTypes.func,\n\t/**\n\t * Please select one of the following:\n\t * * `absolute` - (default) The dialog will use `position: absolute` and style attributes to position itself. This allows inverted placement or flipping of the dialog.\n\t * * `overflowBoundaryElement` - The dialog will overflow scrolling parents. Use on elements that are aligned to the left or right of their target and don't care about the target being within a scrolling parent. Typically this is a popover or tooltip. Dropdown menus can usually open up and down if no room exists. In order to achieve this a portal element will be created and attached to `body`. This element will render into that detached render tree.\n\t * * `relative` - No styling or portals will be used. Menus will be positioned relative to their triggers. This is a great choice for HTML snapshot testing.\n\t */\n\tmenuPosition: PropTypes.oneOf([\n\t\t'absolute',\n\t\t'overflowBoundaryElement',\n\t\t'relative',\n\t]),\n\t/**\n\t * Sets a maximum width that the menu will be used if `inheritWidthOf` is set to `menu`. (Example: 500px) _Tested with snapshot testing._\n\t *\n\t */\n\tmenuMaxWidth: PropTypes.string,\n\t/**\n\t * Allows multiple selections _Tested with mocha testing._\n\t */\n\tmultiple: PropTypes.bool,\n\t/**\n\t * **Array of item objects in the dropdown menu.**\n\t * Each object can contain:\n\t * * `icon`: An `Icon` component. (not used in read-only variant)\n\t * * `id`: A unique identifier string.\n\t * * `label`: A primary string of text for a menu item or group separator.\n\t * * `subTitle`: A secondary string of text added for clarity. (optional)\n\t * * `type`: 'separator' is the only type currently used\n\t * * `disabled`: Set to true to disable this menu item.\n\t * * `tooltipContent`: Content that is displayed in tooltip when item is disabled\n\t * ```\n\t * {\n\t * \tid: '2',\n\t * \tlabel: 'Salesforce.com, Inc.',\n\t * \tsubTitle: 'Account • San Francisco',\n\t * \ttype: 'account',\n\t *  disabled: true,\n\t *  tooltipContent: \"You don't have permission to select this item.\"\n\t * },\n\t * ```\n\t * Note: At the moment, Combobox does not support two consecutive separators. _Tested with snapshot testing._\n\t */\n\toptions: PropTypes.arrayOf(\n\t\tPropTypes.PropTypes.shape({\n\t\t\tid: PropTypes.string.isRequired,\n\t\t\ticon: PropTypes.node,\n\t\t\tlabel: PropTypes.string,\n\t\t\tsubTitle: PropTypes.string,\n\t\t\ttype: PropTypes.string,\n\t\t\tdisabled: PropTypes.boolean,\n\t\t\ttooltipContent: PropTypes.node,\n\t\t})\n\t),\n\t/**\n\t * Determines the height of the menu based on SLDS CSS classes. This is a `number`. The default for a `readonly` variant is `5`.\n\t */\n\tmenuItemVisibleLength: PropTypes.oneOf([5, 7, 10]),\n\t/**\n\t * Limits auto-complete input submission to one of the provided options. _Tested with mocha testing._\n\t */\n\tpredefinedOptionsOnly: PropTypes.bool,\n\t/**\n\t * A `Popover` component. The props from this popover will be merged and override any default props. This also allows a Combobox's Popover dialog to be a controlled component. _Tested with snapshot testing._\n\t */\n\tpopover: PropTypes.node,\n\t/**\n\t * Applies label styling for a required form element. _Tested with snapshot testing._\n\t */\n\trequired: PropTypes.bool,\n\t/**\n\t * Accepts an array of item objects. For single selection, pass in an array of one object. For item object keys, see `options` prop. _Tested with snapshot testing._\n\t */\n\tselection: PropTypes.arrayOf(\n\t\tPropTypes.PropTypes.shape({\n\t\t\tid: PropTypes.string.isRequired,\n\t\t\ticon: PropTypes.node,\n\t\t\tlabel: PropTypes.string,\n\t\t\tsubTitle: PropTypes.string,\n\t\t\ttype: PropTypes.string,\n\t\t})\n\t).isRequired,\n\t/**\n\t * This callback exposes the selected listbox reference / DOM node to parent components.\n\t */\n\tselectedListboxRef: PropTypes.func,\n\t/**\n\t * Disables the input and prevents editing the contents. This only applies for single readonly and inline-listbox variants.\n\t */\n\tsingleInputDisabled: PropTypes.bool,\n\t/**\n\t * Accepts a tooltip that is displayed when hovering on disabled menu items.\n\t */\n\ttooltipMenuItemDisabled: PropTypes.element,\n\t/**\n\t * Value of input. _This is a controlled component,_ so you will need to control the input value by passing the `value` from `onChange` to a parent component or state manager, and then pass it back into the componet with this prop. Please see examples for more clarification. _Tested with snapshot testing._\n\t */\n\tvalue: PropTypes.string,\n\t/**\n\t * Changes styles of the input and menu. Currently `entity` is not supported.\n\t * The options are:\n\t * * `base`: An autocomplete Combobox also allows a user to select an option from a list, but that list can be affected by what the user types into the input of the Combobox. The SLDS website used to call the autocomplete Combobox its `base` variant.\n\t * * `inline-listbox`: An Entity Autocomplete Combobox or Lookup, is used to search for and select Salesforce Entities.\n\t * * `popover`: A dialog Combobox is best used when a listbox, tree, grid, or tree-grid is not the best solution. This variant allows custom content.\n\t * * `readonly`: A readonly text input that allows a user to select an option from a pre-defined list of options. It does not allow free form user input, nor does it allow the user to modify the selected value.\n\t *\n\t *  _Tested with snapshot testing._\n\t */\n\t/**\n\t * Default value of input. Provide uncontroled behaviour\n\t */\n\tdefaultValue: PropTypes.string,\n\t/**\n\t * **Array of item objects in the dropdown menu that is displayed below the list of `options`. `onSelect` fires when selected.**\n\t * Each object can contain:\n\t * * `id`: A unique identifier string.\n\t * * `icon`: An [Icon](/components/icons/) component to be displayed to the left of the menu item `label`.\n\t * * `label`: A primary string of text for a menu item or a function that receives `inputValue` as function parameter and returns text to be displayed in for a menu item.\n\t * ```\n\t * {\n\t * \tid: '1',\n\t * \ticon: (\n\t *  \t<Icon\n\t * \t\t\tassistiveText={{ label: 'add' }}\n\t * \t\t\tcategory=\"utility\"\n\t * \t\t\tsize=\"x-small\"\n\t * \t\t\tname=\"add\"\n\t * \t\t/>\n\t * \t),\n\t * \tlabel: 'New Entity'\n\t * }\n\t * ```\n\t * _Tested with snapshot testing._\n\t */\n\toptionsAddItem: PropTypes.arrayOf(\n\t\tPropTypes.shape({\n\t\t\tid: PropTypes.string,\n\t\t\ticon: PropTypes.node,\n\t\t\tlabel: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n\t\t})\n\t),\n\t/**\n\t * **Array of item objects in the dropdown menu that is displayed above the list of `options`. `onSelect` fires when selected. **\n\t * Each object can contain:\n\t * * `id`: A unique identifier string.\n\t * * `icon`: An [Icon](/components/icons/) component to be displayed to the left of the menu item `label`.\n\t * * `label`: A primary string of text for a menu item or a function that receives `inputValue` as function parameter and returns text to be displayed in for a menu item.\n\t * ```\n\t * {\n\t *\tid: '1',\n\t *\ticon: (\n\t *\t\t<Icon\n\t *\t\t\tassistiveText={{ label: 'Add in Accounts' }}\n\t *\t\t\tsize=\"x-small\"\n\t *\t\t\tcategory=\"utility\"\n\t *\t\t\tname=\"search\"\n\t *\t\t/>\n\t *\t),\n\t *\tlabel: (searchTerm) => {\n\t *\t\treturn `${searchTerm} in Accounts`;\n\t *\t},\n\t * }\n\t * ```\n\t * _Tested with snapshot testing._\n\t */\n\toptionsSearchEntity: PropTypes.arrayOf(\n\t\tPropTypes.shape({\n\t\t\tid: PropTypes.string,\n\t\t\ticon: PropTypes.node,\n\t\t\tlabel: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n\t\t})\n\t),\n\t/**\n\t * Node of type [Combobox](/components/comboboxes/) for creating grouped comboboxes.\n\t */\n\tentityCombobox: PropTypes.node,\n\t/**\n\t * Defines Combobox variant styling and functionality\n\t */\n\tvariant: PropTypes.oneOf(['base', 'inline-listbox', 'popover', 'readonly']),\n};\n\nconst defaultProps = {\n\tassistiveText: {\n\t\tloadingMenuItems: 'Loading',\n\t\toptionSelectedInMenu: 'Current Selection:',\n\t\tremoveSingleSelectedOption: 'Remove selected option',\n\t\tremovePill: ', Press delete or backspace to remove',\n\t\tselectedListboxLabel: 'Selected Options:',\n\t},\n\tevents: {},\n\tlabels: {\n\t\tcancelButton: 'Cancel',\n\t\tdoneButton: `Done`,\n\t\tnoOptionsFound: 'No matches found.',\n\t\toptionDisabledTooltipLabel: 'This option is disabled.',\n\t\tplaceholderReadOnly: 'Select an Option',\n\t\tremovePillTitle: 'Remove',\n\t},\n\tinheritWidthOf: 'target',\n\tmenuPosition: 'absolute',\n\toptionsSearchEntity: [],\n\toptionsAddItem: [],\n\trequired: false,\n\tselection: [],\n\tsingleInputDisabled: false,\n\tvariant: 'base',\n};\n\n/**\n * A widget that provides a user with an input field that is either an autocomplete or readonly, accompanied with a listbox of pre-definfined options.\n */\nclass Combobox extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tactiveOption: undefined,\n\t\t\tactiveOptionIndex: -1,\n\t\t\t// seeding initial state with this.props.selection[0]\n\t\t\tactiveSelectedOption:\n\t\t\t\t(this.props.selection && this.props.selection[0]) || undefined,\n\t\t\tactiveSelectedOptionIndex: 0,\n\t\t\tlistboxHasFocus: false,\n\t\t\tisOpen: typeof props.isOpen === 'boolean' ? props.isOpen : false,\n\t\t};\n\n\t\tthis.menuKeyBuffer = new KeyBuffer();\n\t\tthis.menuRef = undefined;\n\t\tthis.selectedListboxRef = null;\n\n\t\t// `checkProps` issues warnings to developers about properties (similar to React's built in development tools)\n\t\tcheckProps(COMBOBOX, props, componentDoc);\n\n\t\tthis.generatedId = shortid.generate();\n\t\tthis.generatedErrorId = shortid.generate();\n\t}\n\n\t/**\n\t * Lifecycle methods\n\t */\n\n\tcomponentDidUpdate(nextProps) {\n\t\t// This logic will maintain the active highlight even when the\n\t\t// option order changes. One example would be the server pushes\n\t\t// data out as the user has the menu open. This logic clears\n\t\t// `activeOption` if the active option is no longer in the options\n\t\t// list. If it's in the options list, then find the new index and\n\t\t// set `activeOptionIndex`\n\t\tif (!isEqual(this.getOptions(), this.getOptions(nextProps))) {\n\t\t\tconst index = findIndex(this.getOptions(nextProps), (item) =>\n\t\t\t\tisEqual(item, this.state.activeOption)\n\t\t\t);\n\t\t\tif (index !== -1) {\n\t\t\t\t// eslint-disable-next-line react/no-did-update-set-state\n\t\t\t\tthis.setState({ activeOptionIndex: index });\n\t\t\t} else {\n\t\t\t\t// eslint-disable-next-line react/no-did-update-set-state\n\t\t\t\tthis.setState({ activeOption: undefined, activeOptionIndex: -1 });\n\t\t\t}\n\t\t} else if (this.props.isOpen !== nextProps.isOpen) {\n\t\t\t// eslint-disable-next-line react/no-did-update-set-state\n\t\t\tthis.setState({\n\t\t\t\tactiveOption: undefined,\n\t\t\t\tactiveOptionIndex: -1,\n\t\t\t\tisOpen: nextProps.isOpen,\n\t\t\t});\n\t\t}\n\n\t\t// there may be issues with tabindex/focus if the app removes an item\n\t\t// from selection while the user is using the listbox\n\t\tconst selectedOptionsRenderIsInitialRender =\n\t\t\tthis.props.selection &&\n\t\t\tthis.props.selection.length === 0 &&\n\t\t\tnextProps.selection.length > 0;\n\t\tif (selectedOptionsRenderIsInitialRender) {\n\t\t\t// eslint-disable-next-line react/no-did-update-set-state\n\t\t\tthis.setState({\n\t\t\t\tactiveSelectedOption: nextProps.selection[0],\n\t\t\t\tactiveSelectedOptionIndex: 0,\n\t\t\t});\n\t\t}\n\t}\n\n\tcomponentWillUnmount() {\n\t\tif (currentOpenDropdown === this) {\n\t\t\tcurrentOpenDropdown = undefined;\n\t\t}\n\t}\n\n\tgetCustomPopoverProps = (body, { assistiveText, labels }) => {\n\t\t/*\n\t\t * Generate the popover props based on passed in popover props. Using the default behavior if not provided by passed in popover\n\t\t */\n\t\tconst popoverBody = (\n\t\t\t<div>\n\t\t\t\t<div className=\"slds-assistive-text\" id={`${this.getId()}-label`}>\n\t\t\t\t\t{assistiveText.popoverLabel}\n\t\t\t\t</div>\n\t\t\t\t{body}\n\t\t\t</div>\n\t\t);\n\n\t\tconst popoverFooter = (\n\t\t\t<div>\n\t\t\t\t<Button\n\t\t\t\t\tlabel={labels.cancelButton}\n\t\t\t\t\tonClick={(e) => {\n\t\t\t\t\t\tthis.handleClose(e, { trigger: 'cancel' });\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t\t<Button\n\t\t\t\t\tlabel={labels.doneButton}\n\t\t\t\t\tvariant=\"brand\"\n\t\t\t\t\tonClick={this.handleClose}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\n\t\tconst defaultPopoverProps = {\n\t\t\tariaLabelledby: `${this.getId()}-label`,\n\t\t\talign: 'bottom',\n\t\t\tbody: popoverBody,\n\t\t\tclassName: 'slds-popover_full-width',\n\t\t\tfooter: popoverFooter,\n\t\t\tfooterClassName: 'slds-popover__footer_form',\n\t\t\thasNoNubbin: true,\n\t\t\tid: this.getId(),\n\t\t\tisOpen: this.state.isOpen,\n\t\t\thasNoTriggerStyles: true,\n\t\t\tonOpen: this.handleOpen,\n\t\t\tonClose: this.handleClose,\n\t\t\tonRequestClose: this.handleClose,\n\t\t};\n\n\t\t/* Merge in passed popover's props if there is any to override the default popover props */\n\t\tconst popoverProps = assign(\n\t\t\tdefaultPopoverProps,\n\t\t\tthis.props.popover ? this.props.popover.props : {}\n\t\t);\n\t\tpopoverProps.body = popoverBody;\n\n\t\t// eslint-disable-next-line fp/no-delete\n\t\tdelete popoverProps.children;\n\t\treturn popoverProps;\n\t};\n\n\tgetDialog({ menuRenderer }) {\n\t\t// FOR BACKWARDS COMPATIBILITY\n\t\tconst menuPosition = this.props.isInline\n\t\t\t? 'relative'\n\t\t\t: this.props.menuPosition; // eslint-disable-line react/prop-types\n\n\t\treturn !this.props.disabled && this.getIsOpen() ? (\n\t\t\t<Dialog\n\t\t\t\talign=\"bottom left\"\n\t\t\t\tcontext={this.context}\n\t\t\t\thasStaticAlignment={this.props.hasStaticAlignment}\n\t\t\t\tinheritWidthOf={this.props.inheritWidthOf}\n\t\t\t\tonClose={this.handleClose}\n\t\t\t\tonMouseDown={(event) => {\n\t\t\t\t\t// prevent onBlur\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t}}\n\t\t\t\tonOpen={this.handleOpen}\n\t\t\t\tonRequestTargetElement={this.getTargetElement}\n\t\t\t\tposition={menuPosition}\n\t\t\t\tcontainerProps={{\n\t\t\t\t\tid: `${this.getId()}-listbox`,\n\t\t\t\t\trole: 'listbox',\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{menuRenderer}\n\t\t\t</Dialog>\n\t\t) : null;\n\t}\n\n\tgetErrorId() {\n\t\treturn (\n\t\t\tthis.props['aria-describedby'] ||\n\t\t\t(this.props.errorText && this.generatedErrorId)\n\t\t);\n\t}\n\n\t/**\n\t * Shared class property getter methods\n\t */\n\n\tgetId = () => this.props.id || this.generatedId;\n\n\tgetIsActiveOption = () =>\n\t\tthis.state.activeOption && this.state.activeOptionIndex !== -1;\n\n\tgetIsOpen = () =>\n\t\t!!(typeof this.props.isOpen === 'boolean'\n\t\t\t? this.props.isOpen\n\t\t\t: this.state.isOpen);\n\n\tgetNewActiveOptionIndex = ({ activeOptionIndex, offset, options }) => {\n\t\t// used by menu listbox and selected options listbox\n\t\tconst nextIndex = activeOptionIndex + offset;\n\t\tconst skipIndex =\n\t\t\toptions.length > nextIndex &&\n\t\t\tnextIndex >= 0 &&\n\t\t\toptions[nextIndex].type === 'separator';\n\t\tconst newIndex = skipIndex ? nextIndex + offset : nextIndex;\n\t\tconst hasNewIndex = options.length > nextIndex && nextIndex >= 0;\n\t\treturn hasNewIndex ? newIndex : activeOptionIndex;\n\t};\n\n\tgetOptions = (props = this.props) => {\n\t\tconst localProps = props;\n\t\tconst options = [];\n\t\tif (localProps.optionsSearchEntity.length > 0) {\n\t\t\t// eslint-disable-next-line fp/no-mutating-methods\n\t\t\toptions.push(...localProps.optionsSearchEntity);\n\t\t}\n\n\t\tif (localProps.options) {\n\t\t\t// eslint-disable-next-line fp/no-mutating-methods\n\t\t\toptions.push(...localProps.options);\n\t\t}\n\t\tif (localProps.optionsAddItem.length > 0) {\n\t\t\t// eslint-disable-next-line fp/no-mutating-methods\n\t\t\toptions.push(...localProps.optionsAddItem);\n\t\t}\n\t\treturn options;\n\t};\n\n\tgetTargetElement = () => this.inputRef;\n\n\tsetInputRef = (component) => {\n\t\tthis.inputRef = component;\n\t\t// yes, this is a render triggered by a render.\n\t\t// Dialog/Popper.js cannot place the menu until\n\t\t// the trigger/target DOM node is mounted. This\n\t\t// way `findDOMNode` is not called and parent\n\t\t// DOM nodes are not queried.\n\t\tif (!this.state.inputRendered) {\n\t\t\tthis.setState({ inputRendered: true });\n\t\t}\n\t};\n\n\tsetSelectedListboxRef = (ref) => {\n\t\tthis.selectedListboxRef = ref;\n\t\tif (this.props.selectedListboxRef) {\n\t\t\tthis.props.selectedListboxRef(ref);\n\t\t}\n\t};\n\n\thandleBlurPill = () => {\n\t\tthis.setState({ listboxHasFocus: false });\n\t};\n\n\t/**\n\t * Menu open/close and sub-render methods\n\t */\n\thandleClickOutside = (event) => {\n\t\tthis.handleRequestClose(event, {});\n\t};\n\n\thandleClose = (event, { trigger } = {}) => {\n\t\tconst isOpen = this.getIsOpen();\n\n\t\tif (isOpen) {\n\t\t\tif (currentOpenDropdown === this) {\n\t\t\t\tcurrentOpenDropdown = undefined;\n\t\t\t}\n\n\t\t\tthis.setState({\n\t\t\t\tactiveOption: undefined,\n\t\t\t\tactiveOptionIndex: -1,\n\t\t\t\tisOpen: false,\n\t\t\t});\n\n\t\t\tif (this.props.variant === 'popover' && trigger === 'cancel') {\n\t\t\t\tif (this.props.popover.props.onClose) {\n\t\t\t\t\tthis.props.popover.props.onClose(event, { trigger });\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.props.events.onClose) {\n\t\t\t\tthis.props.events.onClose(event, {});\n\t\t\t}\n\t\t}\n\t};\n\n\thandleInputBlur = (event) => {\n\t\t// If menu is open when the input's onBlur event fires, it will close before the onClick of the menu item can fire.\n\t\tsetTimeout(() => {\n\t\t\tconst activeElement = documentDefined ? document.activeElement : false;\n\t\t\t// detect if the scrollbar of the combobox-autocomplete/lookup menu is clicked in IE11. If it is, return focus to input, and do not close menu.\n\t\t\tif (\n\t\t\t\tactiveElement &&\n\t\t\t\tactiveElement.tagName === 'DIV' &&\n\t\t\t\tactiveElement.id === `${this.getId()}-listbox`\n\t\t\t) {\n\t\t\t\tif (this.inputRef) {\n\t\t\t\t\tthis.inputRef.focus();\n\t\t\t\t}\n\t\t\t} else if (!this.props.popover) {\n\t\t\t\tthis.handleClose(event);\n\t\t\t}\n\t\t}, 200);\n\n\t\tif (this.props.events.onBlur) {\n\t\t\tthis.props.events.onBlur(event);\n\t\t}\n\t};\n\n\thandleInputChange = (event) => {\n\t\tthis.requestOpenMenu();\n\t\tif (this.props.events && this.props.events.onChange) {\n\t\t\tthis.props.events.onChange(event, { value: event.target.value });\n\t\t}\n\t};\n\n\thandleInputFocus = (event) => {\n\t\tif (this.props.events.onFocus) {\n\t\t\tthis.props.events.onFocus(event, {});\n\t\t}\n\t};\n\n\thandleInputSubmit = (event) => {\n\t\tif (this.state.activeOption && this.state.activeOption.disabled) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (\n\t\t\tthis.state.activeOption &&\n\t\t\t(this.state.activeOption.type === 'header' ||\n\t\t\t\tthis.state.activeOption.type === 'footer')\n\t\t) {\n\t\t\tthis.state.activeOption.onClick(event);\n\t\t\treturn;\n\t\t}\n\n\t\t// use menu options\n\t\tif (this.getIsActiveOption()) {\n\t\t\tthis.handleSelect(event, {\n\t\t\t\toption: this.state.activeOption,\n\t\t\t\tselection: this.props.selection,\n\t\t\t});\n\t\t\t// use input value, if not limited to predefined options (in the menu)\n\t\t} else if (\n\t\t\t!this.props.predefinedOptionsOnly &&\n\t\t\tevent.target.value !== '' &&\n\t\t\tthis.props.events.onSubmit\n\t\t) {\n\t\t\tthis.props.events.onSubmit(event, {\n\t\t\t\tvalue: event.target.value,\n\t\t\t});\n\t\t}\n\t};\n\n\t/**\n\t * Input and menu keyboard event methods\n\t */\n\n\thandleKeyDown = (event) => {\n\t\tconst callbacks = {\n\t\t\t[KEYS.DOWN]: { callback: this.handleKeyDownDown },\n\t\t\t[KEYS.ENTER]: { callback: this.handleInputSubmit },\n\t\t\t[KEYS.ESCAPE]: { callback: this.handleClose },\n\t\t\t[KEYS.UP]: { callback: this.handleKeyDownUp },\n\t\t};\n\n\t\tif (this.props.variant === 'readonly') {\n\t\t\tif (this.props.selection.length > 2) {\n\t\t\t\tcallbacks[KEYS.TAB] = { callback: this.handleKeyDownTab };\n\t\t\t} else {\n\t\t\t\tcallbacks[KEYS.TAB] = undefined;\n\t\t\t}\n\t\t\tcallbacks.other = {\n\t\t\t\tcallback: this.handleKeyDownOther,\n\t\t\t\tstopPropagation: false,\n\t\t\t};\n\t\t}\n\n\t\t// Helper function that takes an object literal of callbacks that are triggered with a key event\n\t\tmapKeyEventCallbacks(event, { callbacks });\n\t};\n\n\thandleKeyDownDown = (event) => {\n\t\t// Don't open if user is selecting text\n\t\tif (!event.shiftKey) {\n\t\t\tthis.openDialog();\n\t\t}\n\n\t\tif (this.props.variant !== 'popover') {\n\t\t\tthis.handleNavigateListboxMenu(event, { direction: 'next' });\n\t\t}\n\t};\n\n\thandleKeyDownTab = () => {\n\t\tif (this.selectedListboxRef) {\n\t\t\tthis.setState({\n\t\t\t\tlistboxHasFocus: true,\n\t\t\t});\n\t\t}\n\t};\n\n\thandleKeyDownUp = (event) => {\n\t\t// Don't open if user is selecting text\n\t\tif (!event.shiftKey && this.getIsOpen()) {\n\t\t\tthis.handleNavigateListboxMenu(event, { direction: 'previous' });\n\t\t}\n\t};\n\n\thandleKeyDownOther = (event) => {\n\t\tconst activeOptionIndex = keyLetterMenuItemSelect({\n\t\t\tkey: event.key,\n\t\t\tkeyBuffer: this.menuKeyBuffer,\n\t\t\tkeyCode: event.keyCode,\n\t\t\toptions: this.getOptions(),\n\t\t});\n\n\t\tif (activeOptionIndex !== undefined) {\n\t\t\tif (this.getIsOpen()) {\n\t\t\t\tmenuItemSelectScroll({\n\t\t\t\t\tcontainer: this.menuRef,\n\t\t\t\t\tfocusedIndex: activeOptionIndex,\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tthis.setState({\n\t\t\t\tactiveOption: this.getOptions()[activeOptionIndex],\n\t\t\t\tactiveOptionIndex,\n\t\t\t});\n\t\t}\n\t};\n\n\thandleNavigateListboxMenu = (event, { direction }) => {\n\t\tconst offsets = { next: 1, previous: -1 };\n\t\t// takes current/previous state and returns an object with the new state\n\t\tthis.setState((prevState) => {\n\t\t\tconst newIndex = this.getNewActiveOptionIndex({\n\t\t\t\tactiveOptionIndex: prevState.activeOptionIndex,\n\t\t\t\toffset: offsets[direction],\n\t\t\t\toptions: this.getOptions(),\n\t\t\t});\n\n\t\t\t// eslint-disable-next-line react/no-access-state-in-setstate\n\t\t\tif (this.getIsOpen()) {\n\t\t\t\tmenuItemSelectScroll({\n\t\t\t\t\tcontainer: this.menuRef,\n\t\t\t\t\tfocusedIndex: newIndex,\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tactiveOption: this.getOptions()[newIndex],\n\t\t\t\tactiveOptionIndex: newIndex,\n\t\t\t};\n\t\t});\n\t};\n\n\thandleNavigateSelectedListbox = (event, { direction }) => {\n\t\tconst offsets = { next: 1, previous: -1 };\n\t\tthis.setState((prevState) => {\n\t\t\tconst isLastOptionAndRightIsPressed =\n\t\t\t\tprevState.activeSelectedOptionIndex + 1 ===\n\t\t\t\t\tthis.props.selection.length && direction === 'next';\n\t\t\tconst isFirstOptionAndLeftIsPressed =\n\t\t\t\tprevState.activeSelectedOptionIndex === 0 && direction === 'previous';\n\t\t\tlet newState;\n\n\t\t\tif (isLastOptionAndRightIsPressed) {\n\t\t\t\tnewState = {\n\t\t\t\t\tactiveSelectedOption: this.props.selection[0],\n\t\t\t\t\tactiveSelectedOptionIndex: 0,\n\t\t\t\t\tlistboxHasFocus: true,\n\t\t\t\t};\n\t\t\t} else if (isFirstOptionAndLeftIsPressed) {\n\t\t\t\tnewState = {\n\t\t\t\t\tactiveSelectedOption: this.props.selection[\n\t\t\t\t\t\tthis.props.selection.length - 1\n\t\t\t\t\t],\n\t\t\t\t\tactiveSelectedOptionIndex: this.props.selection.length - 1,\n\t\t\t\t\tlistboxHasFocus: true,\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tconst newIndex = this.getNewActiveOptionIndex({\n\t\t\t\t\tactiveOptionIndex: prevState.activeSelectedOptionIndex,\n\t\t\t\t\toffset: offsets[direction],\n\t\t\t\t\toptions: this.props.selection,\n\t\t\t\t});\n\t\t\t\tnewState = {\n\t\t\t\t\tactiveSelectedOption: this.props.selection[newIndex],\n\t\t\t\t\tactiveSelectedOptionIndex: newIndex,\n\t\t\t\t\tlistboxHasFocus: true,\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn newState;\n\t\t});\n\t};\n\n\thandleOpen = (event, data) => {\n\t\tconst isOpen = this.getIsOpen();\n\n\t\tif (!isOpen) {\n\t\t\tif (currentOpenDropdown && isFunction(currentOpenDropdown.handleClose)) {\n\t\t\t\tcurrentOpenDropdown.handleClose();\n\t\t\t}\n\t\t} else {\n\t\t\tcurrentOpenDropdown = this;\n\n\t\t\tthis.setState({\n\t\t\t\tisOpen: true,\n\t\t\t});\n\n\t\t\tif (this.props.events.onOpen) {\n\t\t\t\tthis.props.events.onOpen(event, data);\n\t\t\t}\n\n\t\t\tif (this.props.variant === 'readonly' && this.menuRef !== null) {\n\t\t\t\tconst activeOptionIndex = findIndex(this.getOptions(), (item) =>\n\t\t\t\t\tisEqual(item, this.props.selection[0])\n\t\t\t\t);\n\n\t\t\t\tthis.setState({\n\t\t\t\t\tactiveOptionIndex,\n\t\t\t\t});\n\n\t\t\t\tmenuItemSelectScroll({\n\t\t\t\t\tcontainer: this.menuRef,\n\t\t\t\t\tfocusedIndex: activeOptionIndex,\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t};\n\n\thandlePillFocus = (event, { option, index }) => {\n\t\tif (!this.state.listboxHasFocus) {\n\t\t\tthis.setState({\n\t\t\t\tactiveSelectedOption: option,\n\t\t\t\tactiveSelectedOptionIndex: index,\n\t\t\t\tlistboxHasFocus: true,\n\t\t\t});\n\t\t}\n\t};\n\n\t/**\n\t * Selected options with selected listbox event methods\n\t */\n\n\thandleRemoveSelectedOption = (event, { option, index }) => {\n\t\tevent.preventDefault();\n\t\tconst onlyOnePillAndInputExists = this.props.selection.length === 1;\n\t\tconst isReadOnlyAndTwoPillsExists =\n\t\t\tthis.props.selection.length === 2 &&\n\t\t\tthis.props.variant === 'readonly' &&\n\t\t\tthis.props.multiple;\n\t\tconst lastPillWasRemoved = index + 1 === this.props.selection.length;\n\n\t\tif (\n\t\t\t(onlyOnePillAndInputExists || isReadOnlyAndTwoPillsExists) &&\n\t\t\tthis.inputRef\n\t\t) {\n\t\t\tthis.inputRef.focus();\n\t\t} else if (lastPillWasRemoved) {\n\t\t\t// set focus to previous option and index\n\t\t\tthis.setState({\n\t\t\t\tactiveSelectedOption: this.props.selection[index - 1],\n\t\t\t\tactiveSelectedOptionIndex: index - 1,\n\t\t\t\tlistboxHasFocus: true,\n\t\t\t});\n\t\t} else {\n\t\t\t// set focus to next option, but same index\n\t\t\tthis.setState({\n\t\t\t\tactiveSelectedOption: this.props.selection[index + 1],\n\t\t\t\tactiveSelectedOptionIndex: index,\n\t\t\t\tlistboxHasFocus: true,\n\t\t\t});\n\t\t}\n\n\t\tif (this.props.events.onRequestRemoveSelectedOption) {\n\t\t\tthis.props.events.onRequestRemoveSelectedOption(event, {\n\t\t\t\tselection: reject(this.props.selection, option),\n\t\t\t});\n\t\t}\n\t};\n\n\thandleRequestClose = (event, data) => {\n\t\tif (this.props.events.onRequestClose) {\n\t\t\tthis.props.events.onRequestClose(event, data);\n\t\t}\n\t\tif (this.getIsOpen()) {\n\t\t\tthis.handleClose(event, { trigger: 'cancel' });\n\t\t}\n\t};\n\n\thandleRequestFocusSelectedListbox = (event, { ref }) => {\n\t\tif (ref) {\n\t\t\tthis.activeSelectedOptionRef = ref;\n\t\t\tthis.activeSelectedOptionRef.focus();\n\t\t}\n\t};\n\n\thandleSelect = (event, { selection, option }) => {\n\t\tlet newSelection;\n\t\tconst isSelected = this.isSelected({ selection, option });\n\t\tconst singleSelectAndSelectedWasNotClicked =\n\t\t\t!this.props.multiple && !isSelected;\n\t\tconst multiSelectAndSelectedWasNotClicked =\n\t\t\tthis.props.multiple && !isSelected;\n\n\t\tif (singleSelectAndSelectedWasNotClicked) {\n\t\t\tnewSelection = [option];\n\t\t} else if (multiSelectAndSelectedWasNotClicked) {\n\t\t\tnewSelection = [...this.props.selection, option];\n\t\t} else {\n\t\t\tnewSelection = reject(this.props.selection, option);\n\t\t}\n\n\t\tif (this.props.events.onSelect) {\n\t\t\tthis.props.events.onSelect(event, { selection: newSelection });\n\t\t}\n\n\t\tthis.handleClose();\n\n\t\t// if (this.inputRef) {\n\t\t// \tthis.inputRef.focus();\n\t\t// }\n\t};\n\n\tisSelected = ({ selection, option }) => !!find(selection, option);\n\n\topenDialog = () => {\n\t\tif (this.props.events.onRequestOpen) {\n\t\t\tthis.props.events.onRequestOpen();\n\t\t} else {\n\t\t\tthis.setState({\n\t\t\t\tisOpen: true,\n\t\t\t});\n\t\t}\n\t};\n\n\trequestOpenMenu = () => {\n\t\tconst isInlineSingleSelectionAndIsNotSelected =\n\t\t\t!this.props.multiple &&\n\t\t\tthis.props.selection.length === 0 &&\n\t\t\tthis.props.variant === 'inline-listbox';\n\n\t\tif (\n\t\t\tisInlineSingleSelectionAndIsNotSelected ||\n\t\t\tthis.props.multiple ||\n\t\t\tthis.props.variant === 'readonly'\n\t\t) {\n\t\t\tthis.openDialog();\n\t\t}\n\t};\n\n\t/**\n\t * Combobox variant subrenders\n\t * (these can probably be broken into function components\n\t * if state is passed in as a prop)\n\t */\n\n\trenderBase = ({ assistiveText, labels, props, userDefinedProps }) => (\n\t\t<div className=\"slds-form-element__control\">\n\t\t\t<div className=\"slds-combobox_container\">\n\t\t\t\t<div\n\t\t\t\t\tclassName={classNames(\n\t\t\t\t\t\t'slds-combobox',\n\t\t\t\t\t\t'slds-dropdown-trigger',\n\t\t\t\t\t\t'slds-dropdown-trigger_click',\n\t\t\t\t\t\t'ignore-react-onclickoutside',\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t'slds-is-open': this.getIsOpen(),\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t'slds-has-error': props.errorText,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tprops.className\n\t\t\t\t\t)}\n\t\t\t\t\t// Not in ARIA 1.2 spec, temporary for SLDS styles\n\t\t\t\t\trole=\"combobox\" // eslint-disable-line jsx-a11y/role-supports-aria-props, jsx-a11y/role-has-required-aria-props\n\t\t\t\t>\n\t\t\t\t\t<InnerInput\n\t\t\t\t\t\taria-autocomplete=\"list\"\n\t\t\t\t\t\taria-controls={\n\t\t\t\t\t\t\tthis.getIsOpen() ? `${this.getId()}-listbox` : undefined\n\t\t\t\t\t\t}\n\t\t\t\t\t\taria-activedescendant={\n\t\t\t\t\t\t\tthis.state.activeOption\n\t\t\t\t\t\t\t\t? `${this.getId()}-listbox-option-${this.state.activeOption.id}`\n\t\t\t\t\t\t\t\t: null\n\t\t\t\t\t\t}\n\t\t\t\t\t\taria-describedby={this.getErrorId()}\n\t\t\t\t\t\taria-expanded={this.getIsOpen()}\n\t\t\t\t\t\taria-haspopup=\"listbox\"\n\t\t\t\t\t\trole=\"combobox\"\n\t\t\t\t\t\tautoComplete=\"off\"\n\t\t\t\t\t\tclassName=\"slds-combobox__input\"\n\t\t\t\t\t\tcontainerProps={{\n\t\t\t\t\t\t\tclassName: 'slds-combobox__form-element',\n\t\t\t\t\t\t\trole: 'none',\n\t\t\t\t\t\t}}\n\t\t\t\t\t\thasSpinner={this.props.hasInputSpinner}\n\t\t\t\t\t\ticonRight={\n\t\t\t\t\t\t\t<InputIcon\n\t\t\t\t\t\t\t\tcategory=\"utility\"\n\t\t\t\t\t\t\t\tname=\"search\"\n\t\t\t\t\t\t\t\ttitle={labels.inputIconTitle}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t}\n\t\t\t\t\t\tid={this.getId()}\n\t\t\t\t\t\tonFocus={this.handleInputFocus}\n\t\t\t\t\t\tonBlur={this.handleInputBlur}\n\t\t\t\t\t\tonKeyDown={this.handleKeyDown}\n\t\t\t\t\t\tinputRef={this.setInputRef}\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tthis.openDialog();\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tonChange={this.handleInputChange}\n\t\t\t\t\t\tplaceholder={labels.placeholder}\n\t\t\t\t\t\tdefaultValue={props.defaultValue}\n\t\t\t\t\t\treadOnly={\n\t\t\t\t\t\t\t!!(props.predefinedOptionsOnly && this.state.activeOption)\n\t\t\t\t\t\t}\n\t\t\t\t\t\trequired={props.required}\n\t\t\t\t\t\tvalue={\n\t\t\t\t\t\t\tprops.predefinedOptionsOnly\n\t\t\t\t\t\t\t\t? (this.state.activeOption && this.state.activeOption.label) ||\n\t\t\t\t\t\t\t\t  props.value\n\t\t\t\t\t\t\t\t: props.value\n\t\t\t\t\t\t}\n\t\t\t\t\t\t{...userDefinedProps.input}\n\t\t\t\t\t/>\n\t\t\t\t\t{this.getDialog({\n\t\t\t\t\t\tmenuRenderer: this.renderMenu({ assistiveText, labels }),\n\t\t\t\t\t})}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<SelectedListBox\n\t\t\t\tactiveOption={this.state.activeSelectedOption}\n\t\t\t\tactiveOptionIndex={this.state.activeSelectedOptionIndex}\n\t\t\t\tassistiveText={assistiveText}\n\t\t\t\tevents={{\n\t\t\t\t\tonBlurPill: this.handleBlurPill,\n\t\t\t\t\tonPillFocus: this.handlePillFocus,\n\t\t\t\t\tonRequestFocus: this.handleRequestFocusSelectedListbox,\n\t\t\t\t\tonRequestFocusOnNextPill: this.handleNavigateSelectedListbox,\n\t\t\t\t\tonRequestFocusOnPreviousPill: this.handleNavigateSelectedListbox,\n\t\t\t\t\tonRequestRemove: this.handleRemoveSelectedOption,\n\t\t\t\t}}\n\t\t\t\tid={`${this.getId()}-selected-listbox`}\n\t\t\t\tlabels={labels}\n\t\t\t\tselectedListboxRef={this.setSelectedListboxRef}\n\t\t\t\tselection={props.selection}\n\t\t\t\tlistboxHasFocus={this.state.listboxHasFocus}\n\t\t\t/>\n\t\t\t{props.errorText && (\n\t\t\t\t<div className=\"slds-has-error\">\n\t\t\t\t\t<div\n\t\t\t\t\t\tid={this.getErrorId()}\n\t\t\t\t\t\tclassName=\"slds-form-element__help slds-has-error\"\n\t\t\t\t\t>\n\t\t\t\t\t\t{props.errorText}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</div>\n\t);\n\n\trenderInlineMultiple = ({\n\t\tassistiveText,\n\t\tlabels,\n\t\tprops,\n\t\tuserDefinedProps,\n\t}) => (\n\t\t<div className=\"slds-form-element__control\">\n\t\t\t<div\n\t\t\t\tclassName={classNames('slds-combobox_container', {\n\t\t\t\t\t'slds-has-inline-listbox': props.selection.length,\n\t\t\t\t})}\n\t\t\t>\n\t\t\t\t{props.selection.length ? (\n\t\t\t\t\t<SelectedListBox\n\t\t\t\t\t\tactiveOption={this.state.activeSelectedOption}\n\t\t\t\t\t\tactiveOptionIndex={this.state.activeSelectedOptionIndex}\n\t\t\t\t\t\tassistiveText={assistiveText}\n\t\t\t\t\t\tcontainerRole=\"listbox\"\n\t\t\t\t\t\tcontainerAriaOrientation=\"horizontal\"\n\t\t\t\t\t\tlistboxRole=\"group\"\n\t\t\t\t\t\tlistboxAriaOrientation={null}\n\t\t\t\t\t\tevents={{\n\t\t\t\t\t\t\tonBlurPill: this.handleBlurPill,\n\t\t\t\t\t\t\tonPillFocus: this.handlePillFocus,\n\t\t\t\t\t\t\tonRequestFocus: this.handleRequestFocusSelectedListbox,\n\t\t\t\t\t\t\tonRequestFocusOnNextPill: this.handleNavigateSelectedListbox,\n\t\t\t\t\t\t\tonRequestFocusOnPreviousPill: this.handleNavigateSelectedListbox,\n\t\t\t\t\t\t\tonRequestRemove: this.handleRemoveSelectedOption,\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tid={`${this.getId()}-selected-listbox`}\n\t\t\t\t\t\tlabels={labels}\n\t\t\t\t\t\tselectedListboxRef={this.setSelectedListboxRef}\n\t\t\t\t\t\tselection={props.selection}\n\t\t\t\t\t\tlistboxHasFocus={this.state.listboxHasFocus}\n\t\t\t\t\t/>\n\t\t\t\t) : null}\n\t\t\t\t<div\n\t\t\t\t\tclassName={classNames(\n\t\t\t\t\t\t'slds-combobox',\n\t\t\t\t\t\t'slds-dropdown-trigger',\n\t\t\t\t\t\t'slds-dropdown-trigger_click',\n\t\t\t\t\t\t'ignore-react-onclickoutside',\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t'slds-is-open': this.getIsOpen(),\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t'slds-has-error': props.errorText,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tprops.className\n\t\t\t\t\t)}\n\t\t\t\t\t// Not in ARIA 1.2 spec, temporary for SLDS styles\n\t\t\t\t\trole=\"combobox\" // eslint-disable-line jsx-a11y/role-supports-aria-props, jsx-a11y/role-has-required-aria-props\n\t\t\t\t>\n\t\t\t\t\t<InnerInput\n\t\t\t\t\t\taria-autocomplete=\"list\"\n\t\t\t\t\t\taria-controls={\n\t\t\t\t\t\t\tthis.getIsOpen() ? `${this.getId()}-listbox` : undefined\n\t\t\t\t\t\t}\n\t\t\t\t\t\taria-activedescendant={\n\t\t\t\t\t\t\tthis.state.activeOption\n\t\t\t\t\t\t\t\t? `${this.getId()}-listbox-option-${this.state.activeOption.id}`\n\t\t\t\t\t\t\t\t: null\n\t\t\t\t\t\t}\n\t\t\t\t\t\taria-describedby={this.getErrorId()}\n\t\t\t\t\t\taria-expanded={this.getIsOpen()}\n\t\t\t\t\t\taria-haspopup=\"listbox\" // eslint-disable-line jsx-a11y/aria-proptypes\n\t\t\t\t\t\trole=\"combobox\"\n\t\t\t\t\t\tdefaultValue={props.defaultValue}\n\t\t\t\t\t\tautoComplete=\"off\"\n\t\t\t\t\t\tclassName=\"slds-combobox__input\"\n\t\t\t\t\t\tcontainerProps={{\n\t\t\t\t\t\t\tclassName: 'slds-combobox__form-element',\n\t\t\t\t\t\t\trole: 'none',\n\t\t\t\t\t\t}}\n\t\t\t\t\t\thasSpinner={this.props.hasInputSpinner}\n\t\t\t\t\t\ticonRight={\n\t\t\t\t\t\t\t<InputIcon\n\t\t\t\t\t\t\t\tcategory=\"utility\"\n\t\t\t\t\t\t\t\tname=\"search\"\n\t\t\t\t\t\t\t\ttitle={labels.inputIconTitle}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t}\n\t\t\t\t\t\tid={this.getId()}\n\t\t\t\t\t\tonFocus={this.handleInputFocus}\n\t\t\t\t\t\tonBlur={this.handleInputBlur}\n\t\t\t\t\t\tonKeyDown={this.handleKeyDown}\n\t\t\t\t\t\tinputRef={this.setInputRef}\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tthis.openDialog();\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tonChange={this.handleInputChange}\n\t\t\t\t\t\tplaceholder={labels.placeholder}\n\t\t\t\t\t\treadOnly={\n\t\t\t\t\t\t\t!!(props.predefinedOptionsOnly && this.state.activeOption)\n\t\t\t\t\t\t}\n\t\t\t\t\t\trequired={props.required}\n\t\t\t\t\t\tvalue={\n\t\t\t\t\t\t\tprops.predefinedOptionsOnly\n\t\t\t\t\t\t\t\t? (this.state.activeOption && this.state.activeOption.label) ||\n\t\t\t\t\t\t\t\t  props.value\n\t\t\t\t\t\t\t\t: props.value\n\t\t\t\t\t\t}\n\t\t\t\t\t\t{...userDefinedProps.input}\n\t\t\t\t\t/>\n\t\t\t\t\t{this.getDialog({\n\t\t\t\t\t\tmenuRenderer: this.renderMenu({ assistiveText, labels }),\n\t\t\t\t\t})}\n\t\t\t\t\t{props.errorText && (\n\t\t\t\t\t\t<div id={this.getErrorId()} className=\"slds-form-element__help\">\n\t\t\t\t\t\t\t{props.errorText}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n\n\trenderInlineSingle = ({ assistiveText, labels, props, userDefinedProps }) => {\n\t\tconst iconLeft =\n\t\t\tprops.selection[0] && props.selection[0].icon\n\t\t\t\t? React.cloneElement(props.selection[0].icon, {\n\t\t\t\t\t\tcontainerClassName: 'slds-combobox__input-entity-icon',\n\t\t\t\t  })\n\t\t\t\t: null;\n\n\t\tconst value =\n\t\t\tprops.selection[0] && props.selection[0].label\n\t\t\t\t? props.selection[0].label\n\t\t\t\t: props.value;\n\n\t\treturn (\n\t\t\t<div className=\"slds-form-element__control\">\n\t\t\t\t<div\n\t\t\t\t\tclassName={classNames('slds-combobox_container', {\n\t\t\t\t\t\t'slds-has-inline-listbox': props.selection.length,\n\t\t\t\t\t})}\n\t\t\t\t>\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName={classNames(\n\t\t\t\t\t\t\t'slds-combobox',\n\t\t\t\t\t\t\t'slds-dropdown-trigger',\n\t\t\t\t\t\t\t'slds-dropdown-trigger_click',\n\t\t\t\t\t\t\t'ignore-react-onclickoutside',\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t'slds-is-open': this.getIsOpen(),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t'slds-has-error': props.errorText,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tprops.className\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t// Not in ARIA 1.2 spec, temporary for SLDS styles\n\t\t\t\t\t\trole=\"combobox\" // eslint-disable-line jsx-a11y/role-supports-aria-props, jsx-a11y/role-has-required-aria-props\n\t\t\t\t\t>\n\t\t\t\t\t\t<InnerInput\n\t\t\t\t\t\t\tdefaultValue={props.defaultValue}\n\t\t\t\t\t\t\taria-autocomplete=\"list\"\n\t\t\t\t\t\t\taria-controls={\n\t\t\t\t\t\t\t\tthis.getIsOpen() ? `${this.getId()}-listbox` : undefined\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\taria-activedescendant={\n\t\t\t\t\t\t\t\tthis.state.activeOption\n\t\t\t\t\t\t\t\t\t? `${this.getId()}-listbox-option-${\n\t\t\t\t\t\t\t\t\t\t\tthis.state.activeOption.id\n\t\t\t\t\t\t\t\t\t  }`\n\t\t\t\t\t\t\t\t\t: null\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\taria-describedby={this.getErrorId()}\n\t\t\t\t\t\t\taria-expanded={this.getIsOpen()}\n\t\t\t\t\t\t\taria-haspopup=\"listbox\" // eslint-disable-line jsx-a11y/aria-proptypes\n\t\t\t\t\t\t\trole=\"combobox\"\n\t\t\t\t\t\t\tautoComplete=\"off\"\n\t\t\t\t\t\t\tclassName=\"slds-combobox__input\"\n\t\t\t\t\t\t\tcontainerProps={{\n\t\t\t\t\t\t\t\tclassName: 'slds-combobox__form-element',\n\t\t\t\t\t\t\t\trole: 'none',\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tdisabled={this.props.singleInputDisabled}\n\t\t\t\t\t\t\thasSpinner={this.props.hasInputSpinner}\n\t\t\t\t\t\t\ticonRight={\n\t\t\t\t\t\t\t\tprops.selection.length ? (\n\t\t\t\t\t\t\t\t\t<InputIcon\n\t\t\t\t\t\t\t\t\t\tassistiveText={{\n\t\t\t\t\t\t\t\t\t\t\ticon: assistiveText.removeSingleSelectedOption,\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\tbuttonRef={(component) => {\n\t\t\t\t\t\t\t\t\t\t\tthis.buttonRef = component;\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\tcategory=\"utility\"\n\t\t\t\t\t\t\t\t\t\ticonPosition=\"right\"\n\t\t\t\t\t\t\t\t\t\tname=\"close\"\n\t\t\t\t\t\t\t\t\t\tonClick={(event) => {\n\t\t\t\t\t\t\t\t\t\t\tthis.handleRemoveSelectedOption(event, {\n\t\t\t\t\t\t\t\t\t\t\t\toption: props.selection[0],\n\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t<InputIcon category=\"utility\" name=\"search\" />\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ticonLeft={iconLeft}\n\t\t\t\t\t\t\tid={this.getId()}\n\t\t\t\t\t\t\tonFocus={this.handleInputFocus}\n\t\t\t\t\t\t\tonBlur={this.handleInputBlur}\n\t\t\t\t\t\t\tonKeyDown={this.handleKeyDown}\n\t\t\t\t\t\t\tinputRef={this.setInputRef}\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\tthis.requestOpenMenu();\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tonChange={(event) => {\n\t\t\t\t\t\t\t\tif (!props.selection.length) {\n\t\t\t\t\t\t\t\t\tthis.handleInputChange(event);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tplaceholder={labels.placeholder}\n\t\t\t\t\t\t\treadOnly={\n\t\t\t\t\t\t\t\t!!(props.predefinedOptionsOnly && this.state.activeOption) ||\n\t\t\t\t\t\t\t\t!!props.selection.length\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\trequired={props.required}\n\t\t\t\t\t\t\tvalue={\n\t\t\t\t\t\t\t\tprops.predefinedOptionsOnly\n\t\t\t\t\t\t\t\t\t? (this.state.activeOption &&\n\t\t\t\t\t\t\t\t\t\t\tthis.state.activeOption.label) ||\n\t\t\t\t\t\t\t\t\t  props.value\n\t\t\t\t\t\t\t\t\t: value\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t{...userDefinedProps.input}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{this.getDialog({\n\t\t\t\t\t\t\tmenuRenderer: this.renderMenu({ assistiveText, labels }),\n\t\t\t\t\t\t})}\n\t\t\t\t\t\t{props.errorText && (\n\t\t\t\t\t\t\t<div id={this.getErrorId()} className=\"slds-form-element__help\">\n\t\t\t\t\t\t\t\t{props.errorText}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t};\n\n\trenderMenu = ({ assistiveText, labels }) => {\n\t\tconst menuVariant = {\n\t\t\tbase: 'icon-title-subtitle',\n\t\t\t'inline-listbox': 'icon-title-subtitle',\n\t\t\treadonly: 'checkbox',\n\t\t};\n\n\t\tconst readonlyItemVisibleLength =\n\t\t\tthis.props.variant === 'readonly' ? 5 : null;\n\n\t\treturn (\n\t\t\t<Menu\n\t\t\t\tassistiveText={assistiveText}\n\t\t\t\tactiveOption={this.state.activeOption}\n\t\t\t\tactiveOptionIndex={this.state.activeOptionIndex}\n\t\t\t\tclassNameMenu={this.props.classNameMenu}\n\t\t\t\tclassNameMenuSubHeader={this.props.classNameMenuSubHeader}\n\t\t\t\tclearActiveOption={this.clearActiveOption}\n\t\t\t\tinheritWidthOf={this.props.inheritWidthOf}\n\t\t\t\tinputId={this.getId()}\n\t\t\t\tinputValue={this.props.value}\n\t\t\t\tisSelected={this.isSelected}\n\t\t\t\titemVisibleLength={\n\t\t\t\t\tthis.props.menuItemVisibleLength || readonlyItemVisibleLength\n\t\t\t\t}\n\t\t\t\tlabels={labels}\n\t\t\t\thasMenuSpinner={this.props.hasMenuSpinner}\n\t\t\t\tmenuItem={this.props.menuItem}\n\t\t\t\tmenuPosition={this.props.menuPosition}\n\t\t\t\tmenuRef={(ref) => {\n\t\t\t\t\tthis.menuRef = ref;\n\t\t\t\t}}\n\t\t\t\tmaxWidth={this.props.menuMaxWidth}\n\t\t\t\toptions={this.props.options}\n\t\t\t\toptionsAddItem={this.props.optionsAddItem}\n\t\t\t\toptionsSearchEntity={this.props.optionsSearchEntity}\n\t\t\t\tonSelect={this.handleSelect}\n\t\t\t\t// For backward compatibility, 'menuItem' prop will be deprecated soon\n\t\t\t\tonRenderMenuItem={\n\t\t\t\t\tthis.props.onRenderMenuItem\n\t\t\t\t\t\t? this.props.onRenderMenuItem\n\t\t\t\t\t\t: this.props.menuItem\n\t\t\t\t}\n\t\t\t\tselection={this.props.selection}\n\t\t\t\ttooltipMenuItemDisabled={this.props.tooltipMenuItemDisabled}\n\t\t\t\tvariant={menuVariant[this.props.variant]}\n\t\t\t/>\n\t\t);\n\t};\n\n\trenderPopover = ({ assistiveText, labels, props }) => {\n\t\tconst popoverProps = this.getCustomPopoverProps(\n\t\t\tthis.props.popover.props.body,\n\t\t\t{ assistiveText, labels }\n\t\t);\n\n\t\treturn (\n\t\t\t<div className=\"slds-form-element__control\">\n\t\t\t\t<div className=\"slds-combobox_container\">\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName={classNames(\n\t\t\t\t\t\t\t'slds-combobox',\n\t\t\t\t\t\t\t'slds-dropdown-trigger',\n\t\t\t\t\t\t\t'slds-dropdown-trigger_click',\n\t\t\t\t\t\t\t'ignore-react-onclickoutside',\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t'slds-is-open': this.getIsOpen(),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t'slds-has-error': props.errorText,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tprops.className\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t// Not in ARIA 1.2 spec, temporary for SLDS styles\n\t\t\t\t\t\trole=\"combobox\" // eslint-disable-line jsx-a11y/role-supports-aria-props, jsx-a11y/role-has-required-aria-props\n\t\t\t\t\t>\n\t\t\t\t\t\t<Popover {...popoverProps}>\n\t\t\t\t\t\t\t<InnerInput\n\t\t\t\t\t\t\t\taria-autocomplete=\"none\"\n\t\t\t\t\t\t\t\taria-controls={\n\t\t\t\t\t\t\t\t\tthis.getIsOpen() ? `${this.getId()}-popover` : undefined\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\taria-describedby={this.getErrorId()}\n\t\t\t\t\t\t\t\taria-expanded={this.getIsOpen()}\n\t\t\t\t\t\t\t\taria-haspopup=\"dialog\" // eslint-disable-line jsx-a11y/aria-proptypes\n\t\t\t\t\t\t\t\trole=\"combobox\"\n\t\t\t\t\t\t\t\tautoComplete=\"off\"\n\t\t\t\t\t\t\t\tclassName=\"slds-combobox__input\"\n\t\t\t\t\t\t\t\tcontainerProps={{\n\t\t\t\t\t\t\t\t\tclassName: 'slds-combobox__form-element',\n\t\t\t\t\t\t\t\t\trole: 'none',\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\ticonRight={\n\t\t\t\t\t\t\t\t\t<InputIcon\n\t\t\t\t\t\t\t\t\t\tcategory=\"utility\"\n\t\t\t\t\t\t\t\t\t\tname=\"down\"\n\t\t\t\t\t\t\t\t\t\tvariant=\"combobox\"\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tid={this.getId()}\n\t\t\t\t\t\t\t\tonFocus={this.handleInputFocus}\n\t\t\t\t\t\t\t\tonBlur={this.handleInputBlur}\n\t\t\t\t\t\t\t\tonKeyDown={this.handleKeyDown}\n\t\t\t\t\t\t\t\tinputRef={this.setInputRef}\n\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\tthis.openDialog();\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tonChange={this.handleInputChange}\n\t\t\t\t\t\t\t\tplaceholder={labels.placeholder}\n\t\t\t\t\t\t\t\treadOnly\n\t\t\t\t\t\t\t\trequired={props.required}\n\t\t\t\t\t\t\t\tvalue={props.value}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Popover>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t{props.errorText && (\n\t\t\t\t\t<div className=\"slds-has-error\">\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tid={this.getErrorId()}\n\t\t\t\t\t\t\tclassName=\"slds-form-element__help slds-has-error\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{props.errorText}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t);\n\t};\n\n\trenderReadOnlyMultiple = ({\n\t\tassistiveText,\n\t\tlabels,\n\t\tprops,\n\t\tuserDefinedProps,\n\t}) => {\n\t\tconst value =\n\t\t\tprops.selection.length > 1\n\t\t\t\t? labels.multipleOptionsSelected ||\n\t\t\t\t  `${props.selection.length} options selected`\n\t\t\t\t: (props.selection[0] && props.selection[0].label) || '';\n\n\t\treturn (\n\t\t\t<div className=\"slds-form-element__control\">\n\t\t\t\t<div className=\"slds-combobox_container\">\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName={classNames(\n\t\t\t\t\t\t\t'slds-combobox',\n\t\t\t\t\t\t\t'slds-dropdown-trigger',\n\t\t\t\t\t\t\t'slds-dropdown-trigger_click',\n\t\t\t\t\t\t\t'ignore-react-onclickoutside',\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t'slds-is-open': this.getIsOpen(),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t'slds-has-error': props.errorText,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tprops.className\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t// Not in ARIA 1.2 spec, temporary for SLDS styles\n\t\t\t\t\t\trole=\"combobox\" // eslint-disable-line jsx-a11y/role-supports-aria-props, jsx-a11y/role-has-required-aria-props\n\t\t\t\t\t>\n\t\t\t\t\t\t<InnerInput\n\t\t\t\t\t\t\tdefaultValue={props.defaultValue}\n\t\t\t\t\t\t\taria-autocomplete=\"list\"\n\t\t\t\t\t\t\taria-controls={\n\t\t\t\t\t\t\t\tthis.getIsOpen() ? `${this.getId()}-listbox` : undefined\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\taria-activedescendant={\n\t\t\t\t\t\t\t\tthis.state.activeOption\n\t\t\t\t\t\t\t\t\t? `${this.getId()}-listbox-option-${\n\t\t\t\t\t\t\t\t\t\t\tthis.state.activeOption.id\n\t\t\t\t\t\t\t\t\t  }`\n\t\t\t\t\t\t\t\t\t: null\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\taria-describedby={this.getErrorId()}\n\t\t\t\t\t\t\taria-expanded={this.getIsOpen()}\n\t\t\t\t\t\t\taria-haspopup=\"listbox\" // eslint-disable-line jsx-a11y/aria-proptypes\n\t\t\t\t\t\t\trole=\"combobox\"\n\t\t\t\t\t\t\tautoComplete=\"off\"\n\t\t\t\t\t\t\tclassName=\"slds-combobox__input\"\n\t\t\t\t\t\t\tcontainerProps={{\n\t\t\t\t\t\t\t\tclassName: 'slds-combobox__form-element',\n\t\t\t\t\t\t\t\trole: 'none',\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\ticonRight={\n\t\t\t\t\t\t\t\t<InputIcon category=\"utility\" name=\"down\" variant=\"combobox\" />\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tid={this.getId()}\n\t\t\t\t\t\t\tonFocus={this.handleInputFocus}\n\t\t\t\t\t\t\tonBlur={this.handleInputBlur}\n\t\t\t\t\t\t\tonKeyDown={this.handleKeyDown}\n\t\t\t\t\t\t\tinputRef={this.setInputRef}\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\tthis.requestOpenMenu();\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tonChange={(event) => {\n\t\t\t\t\t\t\t\tif (!props.selection.length) {\n\t\t\t\t\t\t\t\t\tthis.handleInputChange(event);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tplaceholder={labels.placeholderReadOnly}\n\t\t\t\t\t\t\treadOnly\n\t\t\t\t\t\t\trequired={props.required}\n\t\t\t\t\t\t\tvalue={value}\n\t\t\t\t\t\t\t{...userDefinedProps.input}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{this.getDialog({\n\t\t\t\t\t\t\tmenuRenderer: this.renderMenu({ assistiveText, labels }),\n\t\t\t\t\t\t})}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<SelectedListBox\n\t\t\t\t\tactiveOption={this.state.activeSelectedOption}\n\t\t\t\t\tactiveOptionIndex={this.state.activeSelectedOptionIndex}\n\t\t\t\t\tassistiveText={assistiveText}\n\t\t\t\t\tevents={{\n\t\t\t\t\t\tonBlurPill: this.handleBlurPill,\n\t\t\t\t\t\tonPillFocus: this.handlePillFocus,\n\t\t\t\t\t\tonRequestFocus: this.handleRequestFocusSelectedListbox,\n\t\t\t\t\t\tonRequestFocusOnNextPill: this.handleNavigateSelectedListbox,\n\t\t\t\t\t\tonRequestFocusOnPreviousPill: this.handleNavigateSelectedListbox,\n\t\t\t\t\t\tonRequestRemove: this.handleRemoveSelectedOption,\n\t\t\t\t\t}}\n\t\t\t\t\tid={`${this.getId()}-selected-listbox`}\n\t\t\t\t\tlabels={labels}\n\t\t\t\t\tselectedListboxRef={this.setSelectedListboxRef}\n\t\t\t\t\tselection={props.selection}\n\t\t\t\t\tlistboxHasFocus={this.state.listboxHasFocus}\n\t\t\t\t\tvariant={this.props.variant}\n\t\t\t\t\trenderAtSelectionLength={2}\n\t\t\t\t/>\n\t\t\t\t{props.errorText && (\n\t\t\t\t\t<div className=\"slds-has-error\">\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tid={this.getErrorId()}\n\t\t\t\t\t\t\tclassName=\"slds-form-element__help slds-has-error\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{props.errorText}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t);\n\t};\n\n\trenderReadOnlySingle = ({\n\t\tassistiveText,\n\t\tlabels,\n\t\tprops,\n\t\tuserDefinedProps,\n\t}) => {\n\t\tconst value = (props.selection[0] && props.selection[0].label) || '';\n\n\t\treturn (\n\t\t\t<div className=\"slds-form-element__control\">\n\t\t\t\t<div className=\"slds-combobox_container\">\n\t\t\t\t\t<div // aria attributes have been moved to the `div` wrapping `input` to comply with ARIA 1.1.\n\t\t\t\t\t\tclassName={classNames(\n\t\t\t\t\t\t\t'slds-combobox',\n\t\t\t\t\t\t\t'slds-dropdown-trigger',\n\t\t\t\t\t\t\t'slds-dropdown-trigger_click',\n\t\t\t\t\t\t\t'ignore-react-onclickoutside',\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t'slds-is-open': this.getIsOpen(),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t'slds-has-error': props.errorText,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tprops.className\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t// Not in ARIA 1.2 spec, temporary for SLDS styles\n\t\t\t\t\t\trole=\"combobox\" // eslint-disable-line jsx-a11y/role-supports-aria-props, jsx-a11y/role-has-required-aria-props\n\t\t\t\t\t>\n\t\t\t\t\t\t<InnerInput\n\t\t\t\t\t\t\tdefaultValue={props.defaultValue}\n\t\t\t\t\t\t\taria-autocomplete=\"list\"\n\t\t\t\t\t\t\taria-controls={\n\t\t\t\t\t\t\t\tthis.getIsOpen() ? `${this.getId()}-listbox` : undefined\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\taria-activedescendant={\n\t\t\t\t\t\t\t\tthis.state.activeOption\n\t\t\t\t\t\t\t\t\t? `${this.getId()}-listbox-option-${\n\t\t\t\t\t\t\t\t\t\t\tthis.state.activeOption.id\n\t\t\t\t\t\t\t\t\t  }`\n\t\t\t\t\t\t\t\t\t: null\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\taria-describedby={this.getErrorId()}\n\t\t\t\t\t\t\taria-expanded={this.getIsOpen()}\n\t\t\t\t\t\t\taria-haspopup=\"listbox\" // eslint-disable-line jsx-a11y/aria-proptypes\n\t\t\t\t\t\t\trole=\"combobox\"\n\t\t\t\t\t\t\tautoComplete=\"off\"\n\t\t\t\t\t\t\tclassName=\"slds-combobox__input\"\n\t\t\t\t\t\t\tcontainerProps={{\n\t\t\t\t\t\t\t\tclassName: 'slds-combobox__form-element',\n\t\t\t\t\t\t\t\trole: 'none',\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tdisabled={this.props.singleInputDisabled}\n\t\t\t\t\t\t\ticonRight={\n\t\t\t\t\t\t\t\t<InputIcon category=\"utility\" name=\"down\" variant=\"combobox\" />\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tid={this.getId()}\n\t\t\t\t\t\t\tonFocus={this.handleInputFocus}\n\t\t\t\t\t\t\tonBlur={this.handleInputBlur}\n\t\t\t\t\t\t\tonKeyDown={this.handleKeyDown}\n\t\t\t\t\t\t\tinputRef={this.setInputRef}\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\tthis.requestOpenMenu();\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tonChange={(event) => {\n\t\t\t\t\t\t\t\tif (!props.selection.length) {\n\t\t\t\t\t\t\t\t\tthis.handleInputChange(event);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tplaceholder={labels.placeholderReadOnly}\n\t\t\t\t\t\t\treadOnly\n\t\t\t\t\t\t\trequired={props.required}\n\t\t\t\t\t\t\tvalue={\n\t\t\t\t\t\t\t\t(this.state.activeOption && this.state.activeOption.label) ||\n\t\t\t\t\t\t\t\tvalue\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t{...userDefinedProps.input}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{this.getDialog({\n\t\t\t\t\t\t\tmenuRenderer: this.renderMenu({ assistiveText, labels }),\n\t\t\t\t\t\t})}\n\t\t\t\t\t\t{props.errorText && (\n\t\t\t\t\t\t\t<div id={this.getErrorId()} className=\"slds-form-element__help\">\n\t\t\t\t\t\t\t\t{props.errorText}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t};\n\n\trender() {\n\t\tconst { props } = this;\n\t\t// Merge objects of strings with their default object\n\t\tconst assistiveText = assign(\n\t\t\t{},\n\t\t\tdefaultProps.assistiveText,\n\t\t\tprops.assistiveText\n\t\t);\n\t\tconst labels = assign({}, defaultProps.labels, this.props.labels);\n\t\tconst hasRenderedLabel =\n\t\t\tlabels.label || (assistiveText && assistiveText.label);\n\t\t// declare user defined props\n\t\tconst userDefinedProps = {};\n\t\tif (props.input) {\n\t\t\t// at the moment we only support overriding the input props\n\t\t\tuserDefinedProps.input = props.input.props;\n\t\t}\n\t\tconst subRenderParameters = {\n\t\t\tassistiveText,\n\t\t\tlabels,\n\t\t\tprops: this.props,\n\t\t\tuserDefinedProps,\n\t\t};\n\t\tconst multipleOrSingle = this.props.multiple ? 'multiple' : 'single';\n\t\tconst subRenders = {\n\t\t\tbase: {\n\t\t\t\tmultiple: this.renderBase, // same\n\t\t\t\tsingle: this.renderBase,\n\t\t\t},\n\t\t\t'inline-listbox': {\n\t\t\t\tmultiple: this.renderInlineMultiple,\n\t\t\t\tsingle: this.renderInlineSingle,\n\t\t\t},\n\t\t\tpopover: {\n\t\t\t\tmultiple: this.renderPopover, // same\n\t\t\t\tsingle: this.renderPopover,\n\t\t\t},\n\t\t\treadonly: {\n\t\t\t\tmultiple: this.renderReadOnlyMultiple,\n\t\t\t\tsingle: this.renderReadOnlySingle,\n\t\t\t},\n\t\t};\n\t\tconst variantExists = subRenders[this.props.variant][multipleOrSingle];\n\n\t\tconst mainCombobox = (\n\t\t\t<div\n\t\t\t\tclassName={classNames('slds-form-element', props.classNameContainer)}\n\t\t\t>\n\t\t\t\t{props.entityCombobox ? null : (\n\t\t\t\t\t<Label\n\t\t\t\t\t\tassistiveText={this.props.assistiveText}\n\t\t\t\t\t\thtmlFor={this.getId()}\n\t\t\t\t\t\tlabel={labels.label}\n\t\t\t\t\t\trequired={props.required}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t\t{this.props.fieldLevelHelpTooltip && hasRenderedLabel ? (\n\t\t\t\t\t<FieldLevelHelpTooltip\n\t\t\t\t\t\tfieldLevelHelpTooltip={this.props.fieldLevelHelpTooltip}\n\t\t\t\t\t/>\n\t\t\t\t) : null}\n\t\t\t\t{variantExists\n\t\t\t\t\t? subRenders[this.props.variant][multipleOrSingle](\n\t\t\t\t\t\t\tsubRenderParameters\n\t\t\t\t\t  )\n\t\t\t\t\t: subRenders.base.multiple(subRenderParameters)}\n\t\t\t</div>\n\t\t);\n\n\t\treturn props.entityCombobox ? (\n\t\t\t<div className=\"slds-form-element\">\n\t\t\t\t<Label\n\t\t\t\t\tassistiveText={props.assistiveText}\n\t\t\t\t\thtmlFor={this.getId()}\n\t\t\t\t\tlabel={labels.label}\n\t\t\t\t\trequired={props.required}\n\t\t\t\t/>\n\t\t\t\t<div className=\"slds-form-element__control\">\n\t\t\t\t\t<div className=\"slds-combobox-group\">\n\t\t\t\t\t\t<div className=\"slds-combobox_object-switcher slds-combobox-addon_start\">\n\t\t\t\t\t\t\t{props.entityCombobox}\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div className=\"slds-combobox_container slds-combobox-addon_end\">\n\t\t\t\t\t\t\t{mainCombobox}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t) : (\n\t\t\tmainCombobox\n\t\t);\n\t}\n}\n\nCombobox.contextType = IconSettingsContext;\nCombobox.displayName = COMBOBOX;\nCombobox.propTypes = propTypes;\nCombobox.defaultProps = defaultProps;\n\nexport default Combobox;\n"]},"metadata":{},"sourceType":"module"}