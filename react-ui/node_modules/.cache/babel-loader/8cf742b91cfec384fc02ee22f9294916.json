{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n// Implements the [Expression Formula design pattern](https://lightningdesignsystem.com/components/expression/) in React.\n\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport assign from 'lodash.assign';\nimport ContentEditable from 'react-contenteditable'; // ### shortid\n// [npmjs.com/package/shortid](https://www.npmjs.com/package/shortid)\n// shortid is a short, non-sequential, url-friendly, unique id generator\n\nimport shortid from 'shortid';\nimport { EXPRESSION_FORMULA } from '../../utilities/constants';\nimport Button from '../button';\nvar propTypes = {\n  /**\n   *  **Assistive text for accessibility.**\n   * * `help`: Assistive text for help icon\n   */\n  assistiveText: PropTypes.shape({\n    help: PropTypes.string\n  }),\n\n  /**\n   * HTML id for component.\n   */\n  id: PropTypes.string,\n\n  /**\n   * CSS classes to be added to the element with class `.slds-form-element`. Uses `classNames` [API](https://github.com/JedWatson/classnames).\n   */\n  className: PropTypes.oneOfType([PropTypes.array, PropTypes.object, PropTypes.string]),\n\n  /**\n   * Callbacks for various expression formula events such as text editor change, check syntax etc\n   */\n  events: PropTypes.shape({\n    onChangeTextEditor: PropTypes.func,\n    onClickHelp: PropTypes.func,\n    onClickCheckSyntax: PropTypes.func\n  }),\n\n  /**\n   * **Text labels for internationalization**\n   * This object is merged with the default props object on every render.\n   * * `label`: Label for the Expression Formula group.Defaults to \"Formula\"\n   * * `checkSyntax`: Label for the Check Syntax Button. Defaults to \"Check Syntax\"\n   * * `textArea`: Label for the `triggerType` selector. Defaults to \"Take Action When\"\n   */\n  labels: PropTypes.shape({\n    label: PropTypes.string,\n    checkSyntax: PropTypes.string,\n    textArea: PropTypes.string\n  }),\n\n  /**\n   *  Accepts a single combobox component, to select resource in the expression formula editor\n   */\n  resourceCombobox: PropTypes.node,\n\n  /**\n   *  Accepts a single combobox component, to select function in the expression formula editor\n   */\n  functionCombobox: PropTypes.node,\n\n  /**\n   *  Accepts a single input component, to enter operator in the expression formula editor\n   */\n  operatorInput: PropTypes.node,\n\n  /**\n   *  Value for the text editor in expression formula editor\n   */\n  textEditorValue: PropTypes.node\n};\nvar defaultProps = {\n  assistiveText: {\n    help: 'Help'\n  },\n  labels: {\n    label: 'Formula',\n    checkSyntax: 'Check Syntax',\n    textArea: 'Text Area'\n  }\n};\n/**\n * Expression Formula Component\n */\n\nvar ExpressionFormula = /*#__PURE__*/function (_React$Component) {\n  _inherits(ExpressionFormula, _React$Component);\n\n  var _super = _createSuper(ExpressionFormula);\n\n  function ExpressionFormula() {\n    var _this;\n\n    _classCallCheck(this, ExpressionFormula);\n\n    _this = _super.call(this);\n\n    _defineProperty(_assertThisInitialized(_this), \"handleTextEditorChange\", function (event) {\n      var textEditorValue = event.target.value;\n\n      if (_this.props.textEditorValue === undefined) {\n        _this.setState({\n          textEditorValue: textEditorValue\n        });\n      }\n\n      if (_this.props.events && _this.props.events.onChangeTextEditor) {\n        _this.props.events.onChangeTextEditor(event, {\n          textEditorValue: textEditorValue\n        });\n      }\n    });\n\n    _this.textEditorRef = /*#__PURE__*/React.createRef();\n    _this.state = {\n      textEditorValue: 'Compose formula...' // default is set here to preserve functionality if not controlled by props.textEditorValue\n\n    };\n    _this.generatedId = shortid.generate();\n    return _this;\n  }\n  /**\n   * Get the Expression Condition's HTML id. Generate a new one if no ID present.\n   */\n\n\n  _createClass(ExpressionFormula, [{\n    key: \"getId\",\n    value: function getId() {\n      return this.props.id || this.generatedId;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var assistiveText = assign({}, defaultProps.assistiveText, this.props.assistiveText);\n      var labels = assign({}, defaultProps.labels, this.props.labels);\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n        id: this.getId(),\n        className: classNames(\"slds-expression_formula__rte\", this.props.className)\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"slds-form-element\"\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"slds-form-element__label\"\n      }, labels.label), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"slds-form-element__control\"\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"slds-rich-text-editor slds-grid slds-grid_vertical slds-nowrap\"\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        role: \"toolbar\",\n        className: \"slds-rich-text-editor__toolbar slds-shrink-none\"\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"slds-rich-text-editor__col slds-rich-text-editor__col_grow\"\n      }, this.props.resourceCombobox), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"slds-rich-text-editor__col slds-rich-text-editor__col_grow\"\n      }, this.props.functionCombobox), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"slds-rich-text-editor__col slds-rich-text-editor__col_grow\"\n      }, this.props.operatorInput), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"slds-rich-text-editor__col\"\n      }, /*#__PURE__*/React.createElement(Button, {\n        assistiveText: {\n          icon: assistiveText.help\n        },\n        className: \"slds-button_icon-container\",\n        id: \"\".concat(this.getId(), \"-help-button\"),\n        variant: \"icon\",\n        iconCategory: \"utility\",\n        iconName: \"help\",\n        onClick: this.props.events.onClickHelp,\n        title: assistiveText.help\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"slds-rich-text-editor__textarea slds-grid\"\n      }, /*#__PURE__*/React.createElement(ContentEditable, {\n        id: \"\".concat(this.getId(), \"-content-editor\"),\n        \"aria-label\": this.props.labels.textArea,\n        className: \"slds-rich-text-area__content slds-text-color_weak slds-grow\",\n        innerRef: this.textEditorRef,\n        html: this.props.textEditorValue !== undefined ? this.props.textEditorValue : this.state.textEditorValue,\n        onChange: this.handleTextEditorChange,\n        disabled: false\n      })))))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"slds-m-top_small\"\n      }, /*#__PURE__*/React.createElement(Button, {\n        id: \"\".concat(this.getId(), \"-check-syntax-button\"),\n        variant: \"neutral\",\n        label: labels.checkSyntax,\n        onClick: this.props.events.onClickCheckSyntax\n      })));\n    }\n  }]);\n\n  return ExpressionFormula;\n}(React.Component);\n\nExpressionFormula.displayName = EXPRESSION_FORMULA;\nExpressionFormula.propTypes = propTypes;\nExpressionFormula.defaultProps = defaultProps;\nexport default ExpressionFormula;","map":{"version":3,"sources":["../../../.tmp-es/components/expression/formula.jsx"],"names":["propTypes","assistiveText","help","PropTypes","string","id","className","events","onChangeTextEditor","onClickHelp","onClickCheckSyntax","func","labels","label","checkSyntax","textArea","resourceCombobox","functionCombobox","operatorInput","textEditorValue","node","defaultProps","ExpressionFormula","React","Component","shortid","event","assign","classNames","icon"],"mappings":"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","sourcesContent":["/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\n// Implements the [Expression Formula design pattern](https://lightningdesignsystem.com/components/expression/) in React.\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport assign from 'lodash.assign';\nimport ContentEditable from 'react-contenteditable';\n\n// ### shortid\n// [npmjs.com/package/shortid](https://www.npmjs.com/package/shortid)\n// shortid is a short, non-sequential, url-friendly, unique id generator\nimport shortid from 'shortid';\n\nimport { EXPRESSION_FORMULA } from '../../utilities/constants';\n\nimport Button from '../button';\n\nconst propTypes = {\n\t/**\n\t *  **Assistive text for accessibility.**\n\t * * `help`: Assistive text for help icon\n\t */\n\tassistiveText: PropTypes.shape({\n\t\thelp: PropTypes.string,\n\t}),\n\t/**\n\t * HTML id for component.\n\t */\n\tid: PropTypes.string,\n\t/**\n\t * CSS classes to be added to the element with class `.slds-form-element`. Uses `classNames` [API](https://github.com/JedWatson/classnames).\n\t */\n\tclassName: PropTypes.oneOfType([\n\t\tPropTypes.array,\n\t\tPropTypes.object,\n\t\tPropTypes.string,\n\t]),\n\t/**\n\t * Callbacks for various expression formula events such as text editor change, check syntax etc\n\t */\n\tevents: PropTypes.shape({\n\t\tonChangeTextEditor: PropTypes.func,\n\t\tonClickHelp: PropTypes.func,\n\t\tonClickCheckSyntax: PropTypes.func,\n\t}),\n\t/**\n\t * **Text labels for internationalization**\n\t * This object is merged with the default props object on every render.\n\t * * `label`: Label for the Expression Formula group.Defaults to \"Formula\"\n\t * * `checkSyntax`: Label for the Check Syntax Button. Defaults to \"Check Syntax\"\n\t * * `textArea`: Label for the `triggerType` selector. Defaults to \"Take Action When\"\n\t */\n\tlabels: PropTypes.shape({\n\t\tlabel: PropTypes.string,\n\t\tcheckSyntax: PropTypes.string,\n\t\ttextArea: PropTypes.string,\n\t}),\n\t/**\n\t *  Accepts a single combobox component, to select resource in the expression formula editor\n\t */\n\tresourceCombobox: PropTypes.node,\n\t/**\n\t *  Accepts a single combobox component, to select function in the expression formula editor\n\t */\n\tfunctionCombobox: PropTypes.node,\n\t/**\n\t *  Accepts a single input component, to enter operator in the expression formula editor\n\t */\n\toperatorInput: PropTypes.node,\n\t/**\n\t *  Value for the text editor in expression formula editor\n\t */\n\ttextEditorValue: PropTypes.node,\n};\n\nconst defaultProps = {\n\tassistiveText: {\n\t\thelp: 'Help',\n\t},\n\tlabels: {\n\t\tlabel: 'Formula',\n\t\tcheckSyntax: 'Check Syntax',\n\t\ttextArea: 'Text Area',\n\t},\n};\n/**\n * Expression Formula Component\n */\nclass ExpressionFormula extends React.Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.textEditorRef = React.createRef();\n\t\tthis.state = {\n\t\t\ttextEditorValue: 'Compose formula...', // default is set here to preserve functionality if not controlled by props.textEditorValue\n\t\t};\n\t\tthis.generatedId = shortid.generate();\n\t}\n\n\t/**\n\t * Get the Expression Condition's HTML id. Generate a new one if no ID present.\n\t */\n\tgetId() {\n\t\treturn this.props.id || this.generatedId;\n\t}\n\n\thandleTextEditorChange = (event) => {\n\t\tconst textEditorValue = event.target.value;\n\n\t\tif (this.props.textEditorValue === undefined) {\n\t\t\tthis.setState({ textEditorValue });\n\t\t}\n\n\t\tif (this.props.events && this.props.events.onChangeTextEditor) {\n\t\t\tthis.props.events.onChangeTextEditor(event, { textEditorValue });\n\t\t}\n\t};\n\n\trender() {\n\t\tconst assistiveText = assign(\n\t\t\t{},\n\t\t\tdefaultProps.assistiveText,\n\t\t\tthis.props.assistiveText\n\t\t);\n\t\tconst labels = assign({}, defaultProps.labels, this.props.labels);\n\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<div\n\t\t\t\t\tid={this.getId()}\n\t\t\t\t\tclassName={classNames(\n\t\t\t\t\t\t`slds-expression_formula__rte`,\n\t\t\t\t\t\tthis.props.className\n\t\t\t\t\t)}\n\t\t\t\t>\n\t\t\t\t\t<div className=\"slds-form-element\">\n\t\t\t\t\t\t<span className=\"slds-form-element__label\">{labels.label}</span>\n\t\t\t\t\t\t<div className=\"slds-form-element__control\">\n\t\t\t\t\t\t\t<div className=\"slds-rich-text-editor slds-grid slds-grid_vertical slds-nowrap\">\n\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\trole=\"toolbar\"\n\t\t\t\t\t\t\t\t\tclassName=\"slds-rich-text-editor__toolbar slds-shrink-none\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<div className=\"slds-rich-text-editor__col slds-rich-text-editor__col_grow\">\n\t\t\t\t\t\t\t\t\t\t{this.props.resourceCombobox}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"slds-rich-text-editor__col slds-rich-text-editor__col_grow\">\n\t\t\t\t\t\t\t\t\t\t{this.props.functionCombobox}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"slds-rich-text-editor__col slds-rich-text-editor__col_grow\">\n\t\t\t\t\t\t\t\t\t\t{this.props.operatorInput}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"slds-rich-text-editor__col\">\n\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\tassistiveText={{\n\t\t\t\t\t\t\t\t\t\t\t\ticon: assistiveText.help,\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"slds-button_icon-container\"\n\t\t\t\t\t\t\t\t\t\t\tid={`${this.getId()}-help-button`}\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"icon\"\n\t\t\t\t\t\t\t\t\t\t\ticonCategory=\"utility\"\n\t\t\t\t\t\t\t\t\t\t\ticonName=\"help\"\n\t\t\t\t\t\t\t\t\t\t\tonClick={this.props.events.onClickHelp}\n\t\t\t\t\t\t\t\t\t\t\ttitle={assistiveText.help}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"slds-rich-text-editor__textarea slds-grid\">\n\t\t\t\t\t\t\t\t\t<ContentEditable\n\t\t\t\t\t\t\t\t\t\tid={`${this.getId()}-content-editor`}\n\t\t\t\t\t\t\t\t\t\taria-label={this.props.labels.textArea}\n\t\t\t\t\t\t\t\t\t\tclassName=\"slds-rich-text-area__content slds-text-color_weak slds-grow\"\n\t\t\t\t\t\t\t\t\t\tinnerRef={this.textEditorRef}\n\t\t\t\t\t\t\t\t\t\thtml={\n\t\t\t\t\t\t\t\t\t\t\tthis.props.textEditorValue !== undefined\n\t\t\t\t\t\t\t\t\t\t\t\t? this.props.textEditorValue\n\t\t\t\t\t\t\t\t\t\t\t\t: this.state.textEditorValue\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tonChange={this.handleTextEditorChange}\n\t\t\t\t\t\t\t\t\t\tdisabled={false}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"slds-m-top_small\">\n\t\t\t\t\t<Button\n\t\t\t\t\t\tid={`${this.getId()}-check-syntax-button`}\n\t\t\t\t\t\tvariant=\"neutral\"\n\t\t\t\t\t\tlabel={labels.checkSyntax}\n\t\t\t\t\t\tonClick={this.props.events.onClickCheckSyntax}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\n\nExpressionFormula.displayName = EXPRESSION_FORMULA;\nExpressionFormula.propTypes = propTypes;\nExpressionFormula.defaultProps = defaultProps;\n\nexport default ExpressionFormula;\n"]},"metadata":{},"sourceType":"module"}