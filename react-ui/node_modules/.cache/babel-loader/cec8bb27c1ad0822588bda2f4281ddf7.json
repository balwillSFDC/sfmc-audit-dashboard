{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n// # List Component\n// ## Dependencies\n// ### React\n\n\nimport React from 'react';\nimport PropTypes from 'prop-types'; // ### classNames\n\nimport classNames from 'classnames'; // ## Children\n\nimport ListItem from './item'; // ## Constants\n\nimport { LIST } from '../../../utilities/constants';\n/**\n * Component description.\n */\n\nvar List = /*#__PURE__*/function (_React$Component) {\n  _inherits(List, _React$Component);\n\n  var _super = _createSuper(List);\n\n  function List() {\n    _classCallCheck(this, List);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(List, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var lengthClassName;\n      var list;\n\n      if (this.props.length) {\n        lengthClassName = \"slds-dropdown_length-\".concat(this.props.length);\n      }\n\n      list = /*#__PURE__*/React.createElement(\"ul\", {\n        \"aria-labelledby\": this.props.triggerId,\n        className: classNames('dropdown__list', lengthClassName, this.props.className),\n        role: \"menu\"\n      }, this.props.options.map(function (option, index) {\n        var id = _this.props.getListItemId(index);\n\n        var isSingleSelected = index === _this.props.selectedIndex;\n        var isMultipleSelected = !!_this.props.selectedIndices && _this.props.selectedIndices.indexOf(index) !== -1;\n        return /*#__PURE__*/React.createElement(ListItem, _extends({}, option, {\n          \"aria-disabled\": option.disabled,\n          checkmark: _this.props.checkmark && (isSingleSelected || isMultipleSelected),\n          data: option,\n          id: id,\n          index: index,\n          isSelected: isSingleSelected || isMultipleSelected,\n          key: \"\".concat(id, \"-\").concat(option.value),\n          labelRenderer: _this.props.itemRenderer,\n          onSelect: _this.props.onSelect,\n          ref: function ref(listItem) {\n            return _this.props.itemRefs(listItem, index);\n          },\n          tooltipTemplate: _this.props.tooltipMenuItem\n        }));\n      }));\n\n      if (this.props.tooltipMenuItem) {\n        /* eslint-disable react/no-danger */\n        list = /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"style\", {\n          dangerouslySetInnerHTML: {\n            __html: \".slds-dropdown__item > .slds-tooltip-trigger > a {\\n\\tposition: relative;\\n\\tdisplay: -ms-flexbox;\\n\\tdisplay: flex;\\n\\t-ms-flex-pack: justify;\\n\\tjustify-content: space-between;\\n\\t-ms-flex-align: center;\\n\\talign-items: center;\\n\\tpadding: 0.5rem 0.75rem;\\n\\tcolor: #080707;\\n\\twhite-space: nowrap;\\n\\tcursor: pointer;\\n}\\n\\n.slds-dropdown__item > .slds-tooltip-trigger > a:active {\\n    text-decoration: none;\\n    background-color: #ecebea;\\n}\\n\\n.slds-dropdown__item > .slds-tooltip-trigger > a:hover,\\n.slds-dropdown__item > .slds-tooltip-trigger > a:focus {\\n    outline: 0;\\n    text-decoration: none;\\n    background-color: #f3f2f2;\\n}\\n\"\n          }\n        }), list);\n        /* eslint-enable react/no-danger */\n      }\n\n      return list;\n    }\n  }]);\n\n  return List;\n}(React.Component);\n\n_defineProperty(List, \"displayName\", LIST);\n\n_defineProperty(List, \"propTypes\", {\n  /**\n   * Determines whether or not to show a checkmark for selected items.\n   */\n  checkmark: PropTypes.bool,\n\n  /**\n   * CSS classes to be added to `<ul />`.\n   */\n  className: PropTypes.string,\n\n  /**\n   * Used internally to determine the id that will be used for list items.\n   */\n  getListItemId: PropTypes.func,\n\n  /**\n   * Used internally to pass references to the individual menu items back up for focusing / scrolling.\n   */\n  itemRefs: PropTypes.func,\n\n  /**\n   * If provided, this function will be used to render the contents of each menu item.\n   */\n  itemRenderer: PropTypes.func,\n\n  /**\n   * Sets the height of the list based on the numeber of items.\n   */\n  length: PropTypes.oneOf([null, '5', '7', '10', 5, 7, 10]),\n\n  /**\n   * Triggered when a list item is selected (via mouse or keyboard).\n   */\n  onSelect: PropTypes.func,\n\n  /**\n   * An array of items to render in the list.\n   */\n  options: PropTypes.array,\n\n  /**\n   * The index of the currently selected item in the list.\n   */\n  selectedIndex: PropTypes.number,\n\n  /**\n   * Accepts a `Tooltip` component to be used as the template for menu item tooltips that appear via the `tooltipContent` options object attribute\n   */\n  tooltipMenuItem: PropTypes.node,\n\n  /**\n   * The id of the element which triggered this list (in a menu context).\n   */\n  triggerId: PropTypes.string\n});\n\n_defineProperty(List, \"defaultProps\", {\n  length: '5',\n  options: [],\n  selectedIndex: -1\n});\n\nexport default List;","map":{"version":3,"sources":["../../../../.tmp-es/components/utilities/menu-list/index.jsx"],"names":["List","React","Component","LIST","checkmark","PropTypes","className","getListItemId","itemRefs","itemRenderer","length","onSelect","options","selectedIndex","tooltipMenuItem","triggerId","string","lengthClassName","list","classNames","id","isSingleSelected","index","isMultipleSelected","option","__html"],"mappings":"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","sourcesContent":["/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\n// # List Component\n\n// ## Dependencies\n\n// ### React\nimport React from 'react';\n\nimport PropTypes from 'prop-types';\n\n// ### classNames\nimport classNames from 'classnames';\n\n// ## Children\nimport ListItem from './item';\n\n// ## Constants\nimport { LIST } from '../../../utilities/constants';\n\n/**\n * Component description.\n */\nclass List extends React.Component {\n\tstatic displayName = LIST;\n\n\tstatic propTypes = {\n\t\t/**\n\t\t * Determines whether or not to show a checkmark for selected items.\n\t\t */\n\t\tcheckmark: PropTypes.bool,\n\t\t/**\n\t\t * CSS classes to be added to `<ul />`.\n\t\t */\n\t\tclassName: PropTypes.string,\n\t\t/**\n\t\t * Used internally to determine the id that will be used for list items.\n\t\t */\n\t\tgetListItemId: PropTypes.func,\n\t\t/**\n\t\t * Used internally to pass references to the individual menu items back up for focusing / scrolling.\n\t\t */\n\t\titemRefs: PropTypes.func,\n\t\t/**\n\t\t * If provided, this function will be used to render the contents of each menu item.\n\t\t */\n\t\titemRenderer: PropTypes.func,\n\t\t/**\n\t\t * Sets the height of the list based on the numeber of items.\n\t\t */\n\t\tlength: PropTypes.oneOf([null, '5', '7', '10', 5, 7, 10]),\n\t\t/**\n\t\t * Triggered when a list item is selected (via mouse or keyboard).\n\t\t */\n\t\tonSelect: PropTypes.func,\n\t\t/**\n\t\t * An array of items to render in the list.\n\t\t */\n\t\toptions: PropTypes.array,\n\t\t/**\n\t\t * The index of the currently selected item in the list.\n\t\t */\n\t\tselectedIndex: PropTypes.number,\n\t\t/**\n\t\t * Accepts a `Tooltip` component to be used as the template for menu item tooltips that appear via the `tooltipContent` options object attribute\n\t\t */\n\t\ttooltipMenuItem: PropTypes.node,\n\t\t/**\n\t\t * The id of the element which triggered this list (in a menu context).\n\t\t */\n\t\ttriggerId: PropTypes.string,\n\t};\n\n\tstatic defaultProps = {\n\t\tlength: '5',\n\t\toptions: [],\n\t\tselectedIndex: -1,\n\t};\n\n\trender() {\n\t\tlet lengthClassName;\n\t\tlet list;\n\n\t\tif (this.props.length) {\n\t\t\tlengthClassName = `slds-dropdown_length-${this.props.length}`;\n\t\t}\n\n\t\tlist = (\n\t\t\t<ul\n\t\t\t\taria-labelledby={this.props.triggerId}\n\t\t\t\tclassName={classNames(\n\t\t\t\t\t'dropdown__list',\n\t\t\t\t\tlengthClassName,\n\t\t\t\t\tthis.props.className\n\t\t\t\t)}\n\t\t\t\trole=\"menu\"\n\t\t\t>\n\t\t\t\t{this.props.options.map((option, index) => {\n\t\t\t\t\tconst id = this.props.getListItemId(index);\n\t\t\t\t\tconst isSingleSelected = index === this.props.selectedIndex;\n\t\t\t\t\tconst isMultipleSelected =\n\t\t\t\t\t\t!!this.props.selectedIndices &&\n\t\t\t\t\t\tthis.props.selectedIndices.indexOf(index) !== -1;\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<ListItem\n\t\t\t\t\t\t\t{...option}\n\t\t\t\t\t\t\taria-disabled={option.disabled}\n\t\t\t\t\t\t\tcheckmark={\n\t\t\t\t\t\t\t\tthis.props.checkmark && (isSingleSelected || isMultipleSelected)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tdata={option}\n\t\t\t\t\t\t\tid={id}\n\t\t\t\t\t\t\tindex={index}\n\t\t\t\t\t\t\tisSelected={isSingleSelected || isMultipleSelected}\n\t\t\t\t\t\t\tkey={`${id}-${option.value}`}\n\t\t\t\t\t\t\tlabelRenderer={this.props.itemRenderer}\n\t\t\t\t\t\t\tonSelect={this.props.onSelect}\n\t\t\t\t\t\t\tref={(listItem) => this.props.itemRefs(listItem, index)}\n\t\t\t\t\t\t\ttooltipTemplate={this.props.tooltipMenuItem}\n\t\t\t\t\t\t/>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</ul>\n\t\t);\n\n\t\tif (this.props.tooltipMenuItem) {\n\t\t\t/* eslint-disable react/no-danger */\n\t\t\tlist = (\n\t\t\t\t<React.Fragment>\n\t\t\t\t\t<style\n\t\t\t\t\t\tdangerouslySetInnerHTML={{\n\t\t\t\t\t\t\t__html: `.slds-dropdown__item > .slds-tooltip-trigger > a {\n\tposition: relative;\n\tdisplay: -ms-flexbox;\n\tdisplay: flex;\n\t-ms-flex-pack: justify;\n\tjustify-content: space-between;\n\t-ms-flex-align: center;\n\talign-items: center;\n\tpadding: 0.5rem 0.75rem;\n\tcolor: #080707;\n\twhite-space: nowrap;\n\tcursor: pointer;\n}\n\n.slds-dropdown__item > .slds-tooltip-trigger > a:active {\n    text-decoration: none;\n    background-color: #ecebea;\n}\n\n.slds-dropdown__item > .slds-tooltip-trigger > a:hover,\n.slds-dropdown__item > .slds-tooltip-trigger > a:focus {\n    outline: 0;\n    text-decoration: none;\n    background-color: #f3f2f2;\n}\n`,\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t\t{list}\n\t\t\t\t</React.Fragment>\n\t\t\t);\n\t\t\t/* eslint-enable react/no-danger */\n\t\t}\n\n\t\treturn list;\n\t}\n}\n\nexport default List;\n"]},"metadata":{},"sourceType":"module"}