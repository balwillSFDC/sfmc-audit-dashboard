{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n/* eslint-disable max-lines */\n\n/* eslint-disable react/sort-comp */\n\n\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport shortid from 'shortid';\nimport assign from 'lodash.assign';\nimport checkProps from './check-props';\nimport CustomColor from './private/custom-color';\nimport Swatch from './private/swatch';\nimport SwatchPicker from './private/swatch-picker';\nimport Button from '../button';\nimport Input from '../input';\nimport Tabs from '../tabs';\nimport TabsPanel from '../tabs/panel';\nimport Popover from '../popover';\nimport ColorUtils from '../../utilities/color';\nimport { COLOR_PICKER } from '../../utilities/constants';\nimport componentDoc from './component.json';\nvar propTypes = {\n  /**\n   * **Assistive text for accessibility**\n   * * `label`: Visually hidden label but read out loud by screen readers.\n   * * `hueSlider`: Instructions for hue selection input\n   * * `saturationValueGrid`: Instructions for using the grid for saturation\n   * and value selection\n   */\n  assistiveText: PropTypes.shape({\n    label: PropTypes.string,\n    hueSlider: PropTypes.string,\n    saturationValueGrid: PropTypes.string\n  }),\n\n  /**\n   * CSS classes to be added to tag with `.slds-color-picker`. Uses `classNames` [API](https://github.com/JedWatson/classnames). _Tested with snapshot testing._\n   */\n  className: PropTypes.oneOfType([PropTypes.array, PropTypes.object, PropTypes.string]),\n\n  /**\n   * CSS classes to be added to tag with `.slds-popover`. Uses `classNames` [API](https://github.com/JedWatson/classnames). _Tested with snapshot testing._\n   */\n  classNameMenu: PropTypes.oneOfType([PropTypes.array, PropTypes.object, PropTypes.string]),\n\n  /**\n   * Unique ID for component.\n   */\n  id: PropTypes.string,\n\n  /**\n   * Disables the input and button.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Message to display when the outer input is in an error state. When this is present, also visually highlights the component as in error.\n   */\n  errorText: PropTypes.string,\n\n  /**\n   * Message to display when the custom tab input is in an error state. When this is present, also visually highlights the component as in error.\n   */\n  errorTextWorkingColor: PropTypes.string,\n\n  /**\n   * Event Callbacks\n   * * `onChange`: This function is triggered when done is clicked. This function returns `{event, { color: [string] }}`, which is a hex representation of the color.\n   * * `onClose`: This function is triggered when the menu is closed. This function returns `{event, { trigger, componentWillUnmount }}`. Trigger can have the values `cancel`, `clickOutside`, or `newPopover`.\n   * * `onOpen`: This function is triggered when the color-picker menu is mounted and added to the DOM. The parameters are `event, { portal: }`. `portal` can be used as a React tree root node.\n   * * `onRequestClose`:  This function is triggered when the user clicks outside the menu or clicks the close button. You will want to define this if color-picker is to be a controlled component. Most of the time you will want to set `isOpen` to `false` when this is triggered unless you need to validate something.\n   * \t\t\t\t\t\tThis function returns `{event, {trigger: [string]}}` where `trigger` is either `cancel` or `clickOutside`.\n   * * `onRequestOpen`: Function called when the color-picker menu would like show.\n   * * `onValidateColor`: Function that overwrites default color validator and called when validating HEX color on outer input change. If callback returns false, errorText is shown if set.\n   * * `onValidateWorkingColor`: Function that overwrites default color validator and called when validating HEX color on custom tab inner input change. If callback returns false, errorTextWorkingColor is shown if set.\n   * * `onWorkingColorChange`: This function is triggered when working color changes (color inside the custom tab). This function returns `{event, { color: [string] }}`, which is a hex representation of the color.\n   * _Tested with Mocha framework._\n   */\n  events: PropTypes.shape({\n    onChange: PropTypes.func,\n    onClose: PropTypes.func,\n    onOpen: PropTypes.func,\n    onRequestClose: PropTypes.func,\n    onRequestOpen: PropTypes.func,\n    onValidateColor: PropTypes.func,\n    onValidateWorkingColor: PropTypes.func,\n    onWorkingColorChange: PropTypes.func\n  }),\n\n  /**\n   * By default, dialogs will flip their alignment (such as bottom to top) if they extend beyond a boundary element such as a scrolling parent or a window/viewpoint. `hasStaticAlignment` disables this behavior and allows this component to extend beyond boundary elements. _Not tested._\n   */\n  hasStaticAlignment: PropTypes.bool,\n\n  /**\n   * Hides the text input\n   */\n  hideInput: PropTypes.bool,\n\n  /**\n   * Popover open state\n   */\n  isOpen: PropTypes.bool,\n\n  /**\n   * **Text labels for internationalization**\n   * * `blueAbbreviated`: One letter abbreviation of blue color component\n   * * `cancelButton`: Text for cancel button on popover\n   * * `customTab`: Text for custom tab of popover\n   * * `customTabActiveWorkingColorSwatch`: Label for custom tab active working color swatch\n   * * `customTabTransparentSwatch`: Label for custom tab active transparent swatch\n   * * `greenAbbreviated`: One letter abbreviation of green color component\n   * * `hexLabel`: Label for input of hexadecimal color\n   * * `invalidColor`: Error message when hex color input is invalid\n   * * `invalidComponent`: Error message when a component input is invalid\n   * * `label`: An `input` label as for a `form`\n   * * `redAbbreviated`: One letter abbreviation of red color component\n   * * `swatchTab`: Label for swatch tab of popover\n   * * `submitButton`: Text for submit/done button of popover\n   */\n  labels: PropTypes.shape({\n    blueAbbreviated: PropTypes.string,\n    cancelButton: PropTypes.string,\n    customTab: PropTypes.string,\n    customTabActiveWorkingColorSwatch: PropTypes.string,\n    customTabTransparentSwatch: PropTypes.string,\n    greenAbbreviated: PropTypes.string,\n    hexLabel: PropTypes.string,\n    invalidColor: PropTypes.string,\n    invalidComponent: PropTypes.string,\n    label: PropTypes.string,\n    redAbbreviated: PropTypes.string,\n    swatchTab: PropTypes.string,\n    swatchTabTransparentSwatch: PropTypes.string,\n    submitButton: PropTypes.string\n  }),\n\n  /**\n   * Please select one of the following:\n   * * `absolute` - (default) The dialog will use `position: absolute` and style attributes to position itself. This allows inverted placement or flipping of the dialog.\n   * * `overflowBoundaryElement` - The dialog will overflow scrolling parents. Use on elements that are aligned to the left or right of their target and don't care about the target being within a scrolling parent. Typically this is a popover or tooltip. Dropdown menus can usually open up and down if no room exists. In order to achieve this a portal element will be created and attached to `body`. This element will render into that detached render tree.\n   * * `relative` - No styling or portals will be used. Menus will be positioned relative to their triggers. This is a great choice for HTML snapshot testing.\n   */\n  menuPosition: PropTypes.oneOf(['absolute', 'overflowBoundaryElement', 'relative']),\n\n  /**\n   * An array of hex color values which is used to set the options of the\n   * swatch tab of the colorpicker popover.\n   * To specify transparent, use empty string as a value.\n   */\n  swatchColors: PropTypes.arrayOf(PropTypes.string),\n\n  /**\n   * Determines which tab is visible when dialog opens. Use this prop with `base` variant only.\n   * Defaults to `swatch` tab.\n   */\n  defaultSelectedTab: PropTypes.oneOf(['swatches', 'custom']),\n\n  /**\n   * Selects which tabs are present for the colorpicker.\n   * * `base`: both swatches and custom tabs are present\n   * * `swatches`: only swatch tab is present\n   * * `custom`: only custom tab is present\n   * _Tested with snapshot testing._\n   */\n  variant: PropTypes.oneOf(['base', 'swatches', 'custom']),\n\n  /**\n   * Current color in hexadecimal string, including # sign (eg: \"#000000\")\n   */\n  value: PropTypes.string,\n\n  /**\n   * Current working color in hexadecimal string, including # sign (eg: \"#000000\")\n   */\n  valueWorking: PropTypes.string\n};\nvar defaultProps = {\n  assistiveText: {\n    saturationValueGrid: 'Use arrow keys to select a saturation and brightness, on an x and y axis.',\n    hueSlider: 'Select Hue'\n  },\n  events: {},\n  labels: {\n    blueAbbreviated: 'B',\n    cancelButton: 'Cancel',\n    customTab: 'Custom',\n    customTabActiveWorkingColorSwatch: 'Working Color',\n    customTabTransparentSwatch: 'Transparent Swatch',\n    greenAbbreviated: 'G',\n    hexLabel: 'Hex',\n    invalidColor: 'The color entered is invalid',\n    invalidComponent: 'The value needs to be an integer from 0-255',\n    redAbbreviated: 'R',\n    submitButton: 'Done',\n    swatchTab: 'Default',\n    swatchTabTransparentSwatch: 'Transparent Swatch'\n  },\n  menuPosition: 'absolute',\n  swatchColors: ['#e3abec', '#c2dbf7', '#9fd6ff', '#9de7da', '#9df0c0', '#fff099', '#fed49a', '#d073e0', '#86baf3', '#5ebbff', '#44d8be', '#3be282', '#ffe654', '#ffb758', '#bd35bd', '#5779c1', '#5679c0', '#00aea9', '#3cba4c', '#f5bc25', '#f99221', '#580d8c', '#001970', '#0a2399', '#0b7477', '#0b6b50', '#b67e11', '#b85d0d', ''],\n  defaultSelectedTab: 'swatches',\n  variant: 'base'\n};\n/**\n * The Unified Color Picker component allows for a fully accessible and configurable color picker, allowing the user to pick from a set of predefined colors (swatches), or to pick a custom color using a HSB selection interface. It can be configured to show one or both of those color selection interfaces. View [component blueprint guidelines](https://lightningdesignsystem.com/components/color-picker/).\n */\n\nvar ColorPicker = /*#__PURE__*/function (_React$Component) {\n  _inherits(ColorPicker, _React$Component);\n\n  var _super = _createSuper(ColorPicker);\n\n  function ColorPicker(props) {\n    var _this;\n\n    _classCallCheck(this, ColorPicker);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSwatchChange\", function (event) {\n      _this.setWorkingColor(event, {\n        hex: event.target.value\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleOnRequestClose\", function (event, _ref) {\n      var trigger = _ref.trigger;\n\n      if (trigger === 'clickOutside' || trigger === 'cancel') {\n        _this.handleCancelState();\n      }\n\n      if (_this.props.onRequestClose) {\n        _this.props.onRequestClose(event, {\n          trigger: trigger\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleClickOutside\", function (event) {\n      _this.handleCancelButtonClick(event);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleCancel\", function (event) {\n      _this.handleCancelState();\n\n      if (_this.props.onRequestClose) {\n        _this.props.onRequestClose(event, {\n          trigger: 'cancel'\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleCancelState\", function () {\n      var workingColor = ColorUtils.getNewColor({\n        // eslint-disable-next-line react/no-access-state-in-setstate\n        hex: _this.state.currentColor\n      }, _this.props.events.onValidateWorkingColor);\n\n      _this.setState({\n        isOpen: false,\n        workingColor: workingColor,\n        previousWorkingColor: workingColor\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleHexInputChange\", function (event, _ref2) {\n      var labels = _ref2.labels;\n      var currentColor = event.target.value;\n      var namedColorHex = ColorUtils.getHexFromNamedColor(currentColor);\n      var isValid = false;\n\n      if (_this.props.events.onValidateColor) {\n        isValid = _this.props.events.onValidateColor(currentColor);\n      } else {\n        isValid = namedColorHex ? true : ColorUtils.isValidHex(currentColor);\n      }\n\n      _this.setState({\n        currentColor: currentColor,\n        workingColor: ColorUtils.getNewColor({\n          hex: namedColorHex || currentColor,\n          name: namedColorHex ? currentColor.toLowerCase() : null\n        }, _this.props.events.onValidateWorkingColor),\n        colorErrorMessage: isValid ? '' : labels.invalidColor\n      });\n\n      if (_this.props.events.onChange) {\n        _this.props.events.onChange(event, {\n          color: currentColor,\n          isValid: isValid\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSaturationValueChange\", function (event, _ref3) {\n      var saturation = _ref3.saturation,\n          value = _ref3.value;\n\n      _this.setWorkingColor(event, {\n        saturation: saturation,\n        value: value\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSubmitButtonClick\", function (event) {\n      _this.setState({\n        isOpen: false,\n        // eslint-disable-next-line react/no-access-state-in-setstate\n        currentColor: _this.state.workingColor.hex,\n        colorErrorMessage: ''\n      });\n\n      if (_this.props.events.onChange) {\n        _this.props.events.onChange(event, {\n          color: _this.state.workingColor.hex,\n          isValid: true\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSwatchButtonClick\", function () {\n      var workingColor = ColorUtils.getNewColor({\n        // eslint-disable-next-line react/no-access-state-in-setstate\n        hex: _this.state.workingColor.hex\n      }, _this.props.events.onValidateWorkingColor);\n\n      _this.setState({\n        // eslint-disable-next-line react/no-access-state-in-setstate\n        isOpen: !_this.state.isOpen,\n        workingColor: workingColor,\n        // eslint-disable-next-line react/no-access-state-in-setstate\n        previousWorkingColor: _this.state.previousWorkingColor\n      });\n\n      if (_this.props.onRequestOpen) {\n        _this.props.onRequestOpen();\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSwatchSelect\", function (event, _ref4) {\n      var hex = _ref4.hex;\n\n      _this.setWorkingColor(event, {\n        hex: hex\n      });\n    });\n\n    _this.generatedId = props.id || shortid.generate();\n\n    var _workingColor = ColorUtils.getNewColor({\n      hex: props.valueWorking || props.value\n    }, props.events.onValidateWorkingColor);\n\n    _this.state = {\n      currentColor: props.value != null ? props.value : '',\n      disabled: props.disabled,\n      isOpen: props.isOpen,\n      workingColor: _workingColor,\n      previousWorkingColor: _workingColor,\n      colorErrorMessage: props.errorText\n    };\n    checkProps(COLOR_PICKER, props, componentDoc);\n    return _this;\n  }\n\n  _createClass(ColorPicker, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      // The following are only present to allow props to update the state if they get out of sync (for instance, the external store is updated).\n      var nextState = {};\n\n      if (this.props.value !== prevProps.value) {\n        nextState.currentColor = this.props.value;\n      }\n\n      if (this.props.valueWorking !== prevProps.valueWorking) {\n        nextState.workingColor = ColorUtils.getNewColor({\n          hex: this.props.valueWorking\n        }, this.props.events.onValidateWorkingColor);\n      }\n\n      if (this.props.disabled !== prevProps.disabled) {\n        nextState.disabled = this.props.disabled;\n      }\n\n      if (Object.entries(nextState).length !== 0) {\n        // eslint-disable-next-line react/no-did-update-set-state\n        this.setState(nextState);\n      }\n    }\n  }, {\n    key: \"getInput\",\n    value: function getInput(_ref5) {\n      var _this2 = this;\n\n      var labels = _ref5.labels;\n      return this.props.hideInput ? null : /*#__PURE__*/React.createElement(Input, {\n        \"aria-describedby\": !this.state.isOpen && this.state.colorErrorMessage ? \"color-picker-summary-error-\".concat(this.generatedId) : undefined,\n        className: classNames('slds-color-picker__summary-input', 'slds-align-top', {\n          'slds-has-error': !!this.state.colorErrorMessage\n        }),\n        disabled: this.props.disabled,\n        id: \"color-picker-summary-input-\".concat(this.generatedId),\n        onChange: function onChange(event) {\n          _this2.handleHexInputChange(event, {\n            labels: labels\n          });\n        },\n        value: this.state.currentColor\n      });\n    }\n  }, {\n    key: \"getDefaultTab\",\n    value: function getDefaultTab(_ref6) {\n      var labels = _ref6.labels;\n      return (this.props.variant === 'base' || this.props.variant === 'swatches') && /*#__PURE__*/React.createElement(TabsPanel, {\n        label: labels.swatchTab\n      }, /*#__PURE__*/React.createElement(SwatchPicker, {\n        color: this.state.workingColor,\n        labels: labels,\n        onSelect: this.handleSwatchSelect,\n        swatchColors: this.props.swatchColors\n      }));\n    }\n  }, {\n    key: \"getCustomTab\",\n    value: function getCustomTab(_ref7) {\n      var labels = _ref7.labels;\n      return (this.props.variant === 'base' || this.props.variant === 'custom') && /*#__PURE__*/React.createElement(TabsPanel, {\n        label: labels.customTab\n      }, /*#__PURE__*/React.createElement(CustomColor, {\n        assistiveText: this.props.assistiveText,\n        id: this.generatedId,\n        color: this.state.workingColor,\n        errorTextWorkingColor: this.props.errorTextWorkingColor,\n        previousColor: this.state.previousWorkingColor,\n        labels: labels,\n        onBlueChange: this.handleColorChange('blue'),\n        onGreenChange: this.handleColorChange('green'),\n        onHexChange: this.handleColorChange('hex'),\n        onHueChange: this.handleColorChange('hue'),\n        onRedChange: this.handleColorChange('red'),\n        onSwatchChange: this.handleSwatchChange,\n        onSaturationValueChange: this.handleSaturationValueChange,\n        onSaturationNavigate: this.handleNavigate('saturation'),\n        onValueNavigate: this.handleNavigate('value')\n      }));\n    }\n  }, {\n    key: \"getPopover\",\n    value: function getPopover(_ref8) {\n      var labels = _ref8.labels;\n      var popoverBody = /*#__PURE__*/React.createElement(Tabs, {\n        id: \"color-picker-tabs-\".concat(this.generatedId),\n        defaultSelectedIndex: this.props.defaultSelectedTab === 'custom' ? 1 : 0\n      }, this.getDefaultTab({\n        labels: labels\n      }), this.getCustomTab({\n        labels: labels\n      }));\n      var popoverFooter = /*#__PURE__*/React.createElement(\"div\", {\n        className: \"slds-color-picker__selector-footer\"\n      }, /*#__PURE__*/React.createElement(Button, {\n        className: \"slds-color-picker__selector-cancel\",\n        id: \"color-picker-footer-cancel-\".concat(this.generatedId),\n        label: labels.cancelButton,\n        onClick: this.handleCancel,\n        variant: \"neutral\"\n      }), /*#__PURE__*/React.createElement(Button, {\n        className: \"slds-color-picker__selector-submit\",\n        disabled: Object.keys(this.state.workingColor.errors || {}).length > 0,\n        id: \"color-picker-footer-submit-\".concat(this.generatedId),\n        label: labels.submitButton,\n        onClick: this.handleSubmitButtonClick,\n        variant: \"brand\"\n      }));\n      return /*#__PURE__*/React.createElement(Popover, {\n        ariaLabelledby: \"color-picker-label-\".concat(this.generatedId),\n        align: \"bottom left\",\n        body: popoverBody,\n        className: classNames('slds-color-picker__selector', this.props.classNameMenu),\n        footer: popoverFooter,\n        hasNoCloseButton: true,\n        hasNoNubbin: true,\n        hasStaticAlignment: this.props.hasStaticAlignment,\n        id: \"slds-color-picker__selector-\".concat(this.generatedId),\n        isOpen: this.state.isOpen,\n        onClose: this.props.onClose,\n        onOpen: this.props.onOpen,\n        onRequestClose: this.handleOnRequestClose,\n        position: this.props.menuPosition\n      }, /*#__PURE__*/React.createElement(Button, {\n        className: \"slds-color-picker__summary-button\",\n        disabled: this.props.disabled,\n        iconClassName: \"slds-m-left_xx-small\",\n        iconPosition: \"right\",\n        iconVariant: \"more\",\n        id: \"slds-color-picker__summary-button-\".concat(this.generatedId),\n        label: /*#__PURE__*/React.createElement(Swatch, {\n          color: this.state.currentColor,\n          labels: labels\n        }),\n        onClick: this.handleSwatchButtonClick,\n        variant: \"icon\"\n      }));\n    }\n  }, {\n    key: \"setWorkingColor\",\n    value: function setWorkingColor(event, color) {\n      var newColor = ColorUtils.getNewColor(color, this.props.events.onValidateWorkingColor, // eslint-disable-next-line react/no-access-state-in-setstate\n      this.state.workingColor);\n      this.setState({\n        workingColor: newColor,\n        // eslint-disable-next-line react/no-access-state-in-setstate\n        previousWorkingColor: this.state.workingColor\n      });\n\n      if (this.props.events.onWorkingColorChange) {\n        this.props.events.onWorkingColorChange(event, {\n          color: newColor\n        });\n      }\n    }\n  }, {\n    key: \"handleColorChange\",\n    value: function handleColorChange(property) {\n      var _this3 = this;\n\n      return function (event) {\n        var colorProperties = {};\n        colorProperties[property] = event.target.value;\n\n        _this3.setWorkingColor(event, colorProperties);\n      };\n    }\n  }, {\n    key: \"handleNavigate\",\n    value: function handleNavigate(property) {\n      var _this4 = this;\n\n      return function (event, _ref9) {\n        var delta = _ref9.delta;\n        var colorProperties = {};\n        colorProperties[property] = delta;\n        var newColor = ColorUtils.getDeltaColor(colorProperties, _this4.props.events.onValidateWorkingColor, // eslint-disable-next-line react/no-access-state-in-setstate\n        _this4.state.workingColor);\n\n        _this4.setState({\n          workingColor: newColor,\n          // eslint-disable-next-line react/no-access-state-in-setstate\n          previousWorkingColor: _this4.state.workingColor\n        });\n\n        if (_this4.props.events.onWorkingColorChange) {\n          _this4.props.events.onWorkingColorChange(event, {\n            color: newColor\n          });\n        }\n      };\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this5 = this;\n\n      var labels = assign({}, defaultProps.labels, this.props.labels);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: classNames('slds-color-picker', this.props.className),\n        ref: function ref(node) {\n          _this5.wrapper = node;\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"slds-color-picker__summary\"\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        className: classNames('slds-color-picker__summary-label', this.props.assistiveText.label ? 'slds-assistive-text' : ''),\n        htmlFor: !this.props.hideInput ? \"color-picker-summary-input-\".concat(this.generatedId) : undefined,\n        id: \"color-picker-label-\".concat(this.generatedId)\n      }, this.props.assistiveText.label ? this.props.assistiveText.label : labels.label), this.getPopover({\n        labels: labels\n      }), this.getInput({\n        labels: labels\n      }), !this.state.isOpen && this.state.colorErrorMessage ? /*#__PURE__*/React.createElement(\"p\", {\n        className: \"slds-form-error\",\n        id: \"color-picker-summary-error-\".concat(this.generatedId)\n      }, this.state.colorErrorMessage) : ''));\n    }\n  }]);\n\n  return ColorPicker;\n}(React.Component);\n\n_defineProperty(ColorPicker, \"displayName\", COLOR_PICKER);\n\n_defineProperty(ColorPicker, \"propTypes\", propTypes);\n\n_defineProperty(ColorPicker, \"defaultProps\", defaultProps);\n\nexport default ColorPicker;","map":{"version":3,"sources":["../../../.tmp-es/components/color-picker/index.jsx"],"names":["propTypes","assistiveText","label","PropTypes","hueSlider","saturationValueGrid","string","className","classNameMenu","id","disabled","errorText","errorTextWorkingColor","events","onChange","onClose","onOpen","onRequestClose","onRequestOpen","onValidateColor","onValidateWorkingColor","onWorkingColorChange","func","hasStaticAlignment","hideInput","isOpen","labels","blueAbbreviated","cancelButton","customTab","customTabActiveWorkingColorSwatch","customTabTransparentSwatch","greenAbbreviated","hexLabel","invalidColor","invalidComponent","redAbbreviated","swatchTab","swatchTabTransparentSwatch","submitButton","menuPosition","swatchColors","defaultSelectedTab","variant","value","valueWorking","defaultProps","ColorPicker","React","Component","COLOR_PICKER","props","shortid","workingColor","hex","currentColor","previousWorkingColor","colorErrorMessage","checkProps","prevProps","nextState","Object","classNames","popoverBody","popoverFooter","event","color","newColor","ColorUtils","trigger","property","colorProperties","namedColorHex","isValid","name","delta","saturation","assign"],"mappings":"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","sourcesContent":["/* eslint-disable max-lines */\n/* eslint-disable react/sort-comp */\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport shortid from 'shortid';\nimport assign from 'lodash.assign';\n\nimport checkProps from './check-props';\n\nimport CustomColor from './private/custom-color';\nimport Swatch from './private/swatch';\nimport SwatchPicker from './private/swatch-picker';\n\nimport Button from '../button';\nimport Input from '../input';\nimport Tabs from '../tabs';\nimport TabsPanel from '../tabs/panel';\nimport Popover from '../popover';\n\nimport ColorUtils from '../../utilities/color';\n\nimport { COLOR_PICKER } from '../../utilities/constants';\n\nimport componentDoc from './component.json';\n\nconst propTypes = {\n\t/**\n\t * **Assistive text for accessibility**\n\t * * `label`: Visually hidden label but read out loud by screen readers.\n\t * * `hueSlider`: Instructions for hue selection input\n\t * * `saturationValueGrid`: Instructions for using the grid for saturation\n\t * and value selection\n\t */\n\tassistiveText: PropTypes.shape({\n\t\tlabel: PropTypes.string,\n\t\thueSlider: PropTypes.string,\n\t\tsaturationValueGrid: PropTypes.string,\n\t}),\n\t/**\n\t * CSS classes to be added to tag with `.slds-color-picker`. Uses `classNames` [API](https://github.com/JedWatson/classnames). _Tested with snapshot testing._\n\t */\n\tclassName: PropTypes.oneOfType([\n\t\tPropTypes.array,\n\t\tPropTypes.object,\n\t\tPropTypes.string,\n\t]),\n\t/**\n\t * CSS classes to be added to tag with `.slds-popover`. Uses `classNames` [API](https://github.com/JedWatson/classnames). _Tested with snapshot testing._\n\t */\n\tclassNameMenu: PropTypes.oneOfType([\n\t\tPropTypes.array,\n\t\tPropTypes.object,\n\t\tPropTypes.string,\n\t]),\n\t/**\n\t * Unique ID for component.\n\t */\n\tid: PropTypes.string,\n\t/**\n\t * Disables the input and button.\n\t */\n\tdisabled: PropTypes.bool,\n\t/**\n\t * Message to display when the outer input is in an error state. When this is present, also visually highlights the component as in error.\n\t */\n\terrorText: PropTypes.string,\n\t/**\n\t * Message to display when the custom tab input is in an error state. When this is present, also visually highlights the component as in error.\n\t */\n\terrorTextWorkingColor: PropTypes.string,\n\t/**\n\t * Event Callbacks\n\t * * `onChange`: This function is triggered when done is clicked. This function returns `{event, { color: [string] }}`, which is a hex representation of the color.\n\t * * `onClose`: This function is triggered when the menu is closed. This function returns `{event, { trigger, componentWillUnmount }}`. Trigger can have the values `cancel`, `clickOutside`, or `newPopover`.\n\t * * `onOpen`: This function is triggered when the color-picker menu is mounted and added to the DOM. The parameters are `event, { portal: }`. `portal` can be used as a React tree root node.\n\t * * `onRequestClose`:  This function is triggered when the user clicks outside the menu or clicks the close button. You will want to define this if color-picker is to be a controlled component. Most of the time you will want to set `isOpen` to `false` when this is triggered unless you need to validate something.\n\t * \t\t\t\t\t\tThis function returns `{event, {trigger: [string]}}` where `trigger` is either `cancel` or `clickOutside`.\n\t * * `onRequestOpen`: Function called when the color-picker menu would like show.\n\t * * `onValidateColor`: Function that overwrites default color validator and called when validating HEX color on outer input change. If callback returns false, errorText is shown if set.\n\t * * `onValidateWorkingColor`: Function that overwrites default color validator and called when validating HEX color on custom tab inner input change. If callback returns false, errorTextWorkingColor is shown if set.\n\t * * `onWorkingColorChange`: This function is triggered when working color changes (color inside the custom tab). This function returns `{event, { color: [string] }}`, which is a hex representation of the color.\n\t * _Tested with Mocha framework._\n\t */\n\tevents: PropTypes.shape({\n\t\tonChange: PropTypes.func,\n\t\tonClose: PropTypes.func,\n\t\tonOpen: PropTypes.func,\n\t\tonRequestClose: PropTypes.func,\n\t\tonRequestOpen: PropTypes.func,\n\t\tonValidateColor: PropTypes.func,\n\t\tonValidateWorkingColor: PropTypes.func,\n\t\tonWorkingColorChange: PropTypes.func,\n\t}),\n\t/**\n\t * By default, dialogs will flip their alignment (such as bottom to top) if they extend beyond a boundary element such as a scrolling parent or a window/viewpoint. `hasStaticAlignment` disables this behavior and allows this component to extend beyond boundary elements. _Not tested._\n\t */\n\thasStaticAlignment: PropTypes.bool,\n\t/**\n\t * Hides the text input\n\t */\n\thideInput: PropTypes.bool,\n\t/**\n\t * Popover open state\n\t */\n\tisOpen: PropTypes.bool,\n\t/**\n\t * **Text labels for internationalization**\n\t * * `blueAbbreviated`: One letter abbreviation of blue color component\n\t * * `cancelButton`: Text for cancel button on popover\n\t * * `customTab`: Text for custom tab of popover\n\t * * `customTabActiveWorkingColorSwatch`: Label for custom tab active working color swatch\n\t * * `customTabTransparentSwatch`: Label for custom tab active transparent swatch\n\t * * `greenAbbreviated`: One letter abbreviation of green color component\n\t * * `hexLabel`: Label for input of hexadecimal color\n\t * * `invalidColor`: Error message when hex color input is invalid\n\t * * `invalidComponent`: Error message when a component input is invalid\n\t * * `label`: An `input` label as for a `form`\n\t * * `redAbbreviated`: One letter abbreviation of red color component\n\t * * `swatchTab`: Label for swatch tab of popover\n\t * * `submitButton`: Text for submit/done button of popover\n\t */\n\tlabels: PropTypes.shape({\n\t\tblueAbbreviated: PropTypes.string,\n\t\tcancelButton: PropTypes.string,\n\t\tcustomTab: PropTypes.string,\n\t\tcustomTabActiveWorkingColorSwatch: PropTypes.string,\n\t\tcustomTabTransparentSwatch: PropTypes.string,\n\t\tgreenAbbreviated: PropTypes.string,\n\t\thexLabel: PropTypes.string,\n\t\tinvalidColor: PropTypes.string,\n\t\tinvalidComponent: PropTypes.string,\n\t\tlabel: PropTypes.string,\n\t\tredAbbreviated: PropTypes.string,\n\t\tswatchTab: PropTypes.string,\n\t\tswatchTabTransparentSwatch: PropTypes.string,\n\t\tsubmitButton: PropTypes.string,\n\t}),\n\t/**\n\t * Please select one of the following:\n\t * * `absolute` - (default) The dialog will use `position: absolute` and style attributes to position itself. This allows inverted placement or flipping of the dialog.\n\t * * `overflowBoundaryElement` - The dialog will overflow scrolling parents. Use on elements that are aligned to the left or right of their target and don't care about the target being within a scrolling parent. Typically this is a popover or tooltip. Dropdown menus can usually open up and down if no room exists. In order to achieve this a portal element will be created and attached to `body`. This element will render into that detached render tree.\n\t * * `relative` - No styling or portals will be used. Menus will be positioned relative to their triggers. This is a great choice for HTML snapshot testing.\n\t */\n\tmenuPosition: PropTypes.oneOf([\n\t\t'absolute',\n\t\t'overflowBoundaryElement',\n\t\t'relative',\n\t]),\n\t/**\n\t * An array of hex color values which is used to set the options of the\n\t * swatch tab of the colorpicker popover.\n\t * To specify transparent, use empty string as a value.\n\t */\n\tswatchColors: PropTypes.arrayOf(PropTypes.string),\n\t/**\n\t * Determines which tab is visible when dialog opens. Use this prop with `base` variant only.\n\t * Defaults to `swatch` tab.\n\t */\n\tdefaultSelectedTab: PropTypes.oneOf(['swatches', 'custom']),\n\t/**\n\t * Selects which tabs are present for the colorpicker.\n\t * * `base`: both swatches and custom tabs are present\n\t * * `swatches`: only swatch tab is present\n\t * * `custom`: only custom tab is present\n\t * _Tested with snapshot testing._\n\t */\n\tvariant: PropTypes.oneOf(['base', 'swatches', 'custom']),\n\t/**\n\t * Current color in hexadecimal string, including # sign (eg: \"#000000\")\n\t */\n\tvalue: PropTypes.string,\n\t/**\n\t * Current working color in hexadecimal string, including # sign (eg: \"#000000\")\n\t */\n\tvalueWorking: PropTypes.string,\n};\n\nconst defaultProps = {\n\tassistiveText: {\n\t\tsaturationValueGrid:\n\t\t\t'Use arrow keys to select a saturation and brightness, on an x and y axis.',\n\t\thueSlider: 'Select Hue',\n\t},\n\tevents: {},\n\tlabels: {\n\t\tblueAbbreviated: 'B',\n\t\tcancelButton: 'Cancel',\n\t\tcustomTab: 'Custom',\n\t\tcustomTabActiveWorkingColorSwatch: 'Working Color',\n\t\tcustomTabTransparentSwatch: 'Transparent Swatch',\n\t\tgreenAbbreviated: 'G',\n\t\thexLabel: 'Hex',\n\t\tinvalidColor: 'The color entered is invalid',\n\t\tinvalidComponent: 'The value needs to be an integer from 0-255',\n\t\tredAbbreviated: 'R',\n\t\tsubmitButton: 'Done',\n\t\tswatchTab: 'Default',\n\t\tswatchTabTransparentSwatch: 'Transparent Swatch',\n\t},\n\tmenuPosition: 'absolute',\n\tswatchColors: [\n\t\t'#e3abec',\n\t\t'#c2dbf7',\n\t\t'#9fd6ff',\n\t\t'#9de7da',\n\t\t'#9df0c0',\n\t\t'#fff099',\n\t\t'#fed49a',\n\t\t'#d073e0',\n\t\t'#86baf3',\n\t\t'#5ebbff',\n\t\t'#44d8be',\n\t\t'#3be282',\n\t\t'#ffe654',\n\t\t'#ffb758',\n\t\t'#bd35bd',\n\t\t'#5779c1',\n\t\t'#5679c0',\n\t\t'#00aea9',\n\t\t'#3cba4c',\n\t\t'#f5bc25',\n\t\t'#f99221',\n\t\t'#580d8c',\n\t\t'#001970',\n\t\t'#0a2399',\n\t\t'#0b7477',\n\t\t'#0b6b50',\n\t\t'#b67e11',\n\t\t'#b85d0d',\n\t\t'',\n\t],\n\tdefaultSelectedTab: 'swatches',\n\tvariant: 'base',\n};\n\n/**\n * The Unified Color Picker component allows for a fully accessible and configurable color picker, allowing the user to pick from a set of predefined colors (swatches), or to pick a custom color using a HSB selection interface. It can be configured to show one or both of those color selection interfaces. View [component blueprint guidelines](https://lightningdesignsystem.com/components/color-picker/).\n */\nclass ColorPicker extends React.Component {\n\tstatic displayName = COLOR_PICKER;\n\n\tstatic propTypes = propTypes;\n\n\tstatic defaultProps = defaultProps;\n\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.generatedId = props.id || shortid.generate();\n\t\tconst workingColor = ColorUtils.getNewColor(\n\t\t\t{\n\t\t\t\thex: props.valueWorking || props.value,\n\t\t\t},\n\t\t\tprops.events.onValidateWorkingColor\n\t\t);\n\t\tthis.state = {\n\t\t\tcurrentColor: props.value != null ? props.value : '',\n\t\t\tdisabled: props.disabled,\n\t\t\tisOpen: props.isOpen,\n\t\t\tworkingColor,\n\t\t\tpreviousWorkingColor: workingColor,\n\t\t\tcolorErrorMessage: props.errorText,\n\t\t};\n\n\t\tcheckProps(COLOR_PICKER, props, componentDoc);\n\t}\n\n\tcomponentDidUpdate(prevProps) {\n\t\t// The following are only present to allow props to update the state if they get out of sync (for instance, the external store is updated).\n\t\tconst nextState = {};\n\n\t\tif (this.props.value !== prevProps.value) {\n\t\t\tnextState.currentColor = this.props.value;\n\t\t}\n\n\t\tif (this.props.valueWorking !== prevProps.valueWorking) {\n\t\t\tnextState.workingColor = ColorUtils.getNewColor(\n\t\t\t\t{\n\t\t\t\t\thex: this.props.valueWorking,\n\t\t\t\t},\n\t\t\t\tthis.props.events.onValidateWorkingColor\n\t\t\t);\n\t\t}\n\n\t\tif (this.props.disabled !== prevProps.disabled) {\n\t\t\tnextState.disabled = this.props.disabled;\n\t\t}\n\n\t\tif (Object.entries(nextState).length !== 0) {\n\t\t\t// eslint-disable-next-line react/no-did-update-set-state\n\t\t\tthis.setState(nextState);\n\t\t}\n\t}\n\n\tgetInput({ labels }) {\n\t\treturn this.props.hideInput ? null : (\n\t\t\t<Input\n\t\t\t\taria-describedby={\n\t\t\t\t\t!this.state.isOpen && this.state.colorErrorMessage\n\t\t\t\t\t\t? `color-picker-summary-error-${this.generatedId}`\n\t\t\t\t\t\t: undefined\n\t\t\t\t}\n\t\t\t\tclassName={classNames(\n\t\t\t\t\t'slds-color-picker__summary-input',\n\t\t\t\t\t'slds-align-top',\n\t\t\t\t\t{\n\t\t\t\t\t\t'slds-has-error': !!this.state.colorErrorMessage,\n\t\t\t\t\t}\n\t\t\t\t)}\n\t\t\t\tdisabled={this.props.disabled}\n\t\t\t\tid={`color-picker-summary-input-${this.generatedId}`}\n\t\t\t\tonChange={(event) => {\n\t\t\t\t\tthis.handleHexInputChange(event, { labels });\n\t\t\t\t}}\n\t\t\t\tvalue={this.state.currentColor}\n\t\t\t/>\n\t\t);\n\t}\n\n\tgetDefaultTab({ labels }) {\n\t\treturn (\n\t\t\t(this.props.variant === 'base' || this.props.variant === 'swatches') && (\n\t\t\t\t<TabsPanel label={labels.swatchTab}>\n\t\t\t\t\t<SwatchPicker\n\t\t\t\t\t\tcolor={this.state.workingColor}\n\t\t\t\t\t\tlabels={labels}\n\t\t\t\t\t\tonSelect={this.handleSwatchSelect}\n\t\t\t\t\t\tswatchColors={this.props.swatchColors}\n\t\t\t\t\t/>\n\t\t\t\t</TabsPanel>\n\t\t\t)\n\t\t);\n\t}\n\n\tgetCustomTab({ labels }) {\n\t\treturn (\n\t\t\t(this.props.variant === 'base' || this.props.variant === 'custom') && (\n\t\t\t\t<TabsPanel label={labels.customTab}>\n\t\t\t\t\t<CustomColor\n\t\t\t\t\t\tassistiveText={this.props.assistiveText}\n\t\t\t\t\t\tid={this.generatedId}\n\t\t\t\t\t\tcolor={this.state.workingColor}\n\t\t\t\t\t\terrorTextWorkingColor={this.props.errorTextWorkingColor}\n\t\t\t\t\t\tpreviousColor={this.state.previousWorkingColor}\n\t\t\t\t\t\tlabels={labels}\n\t\t\t\t\t\tonBlueChange={this.handleColorChange('blue')}\n\t\t\t\t\t\tonGreenChange={this.handleColorChange('green')}\n\t\t\t\t\t\tonHexChange={this.handleColorChange('hex')}\n\t\t\t\t\t\tonHueChange={this.handleColorChange('hue')}\n\t\t\t\t\t\tonRedChange={this.handleColorChange('red')}\n\t\t\t\t\t\tonSwatchChange={this.handleSwatchChange}\n\t\t\t\t\t\tonSaturationValueChange={this.handleSaturationValueChange}\n\t\t\t\t\t\tonSaturationNavigate={this.handleNavigate('saturation')}\n\t\t\t\t\t\tonValueNavigate={this.handleNavigate('value')}\n\t\t\t\t\t/>\n\t\t\t\t</TabsPanel>\n\t\t\t)\n\t\t);\n\t}\n\n\tgetPopover({ labels }) {\n\t\tconst popoverBody = (\n\t\t\t<Tabs\n\t\t\t\tid={`color-picker-tabs-${this.generatedId}`}\n\t\t\t\tdefaultSelectedIndex={\n\t\t\t\t\tthis.props.defaultSelectedTab === 'custom' ? 1 : 0\n\t\t\t\t}\n\t\t\t>\n\t\t\t\t{this.getDefaultTab({ labels })}\n\t\t\t\t{this.getCustomTab({ labels })}\n\t\t\t</Tabs>\n\t\t);\n\t\tconst popoverFooter = (\n\t\t\t<div className=\"slds-color-picker__selector-footer\">\n\t\t\t\t<Button\n\t\t\t\t\tclassName=\"slds-color-picker__selector-cancel\"\n\t\t\t\t\tid={`color-picker-footer-cancel-${this.generatedId}`}\n\t\t\t\t\tlabel={labels.cancelButton}\n\t\t\t\t\tonClick={this.handleCancel}\n\t\t\t\t\tvariant=\"neutral\"\n\t\t\t\t/>\n\t\t\t\t<Button\n\t\t\t\t\tclassName=\"slds-color-picker__selector-submit\"\n\t\t\t\t\tdisabled={\n\t\t\t\t\t\tObject.keys(this.state.workingColor.errors || {}).length > 0\n\t\t\t\t\t}\n\t\t\t\t\tid={`color-picker-footer-submit-${this.generatedId}`}\n\t\t\t\t\tlabel={labels.submitButton}\n\t\t\t\t\tonClick={this.handleSubmitButtonClick}\n\t\t\t\t\tvariant=\"brand\"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t\treturn (\n\t\t\t<Popover\n\t\t\t\tariaLabelledby={`color-picker-label-${this.generatedId}`}\n\t\t\t\talign=\"bottom left\"\n\t\t\t\tbody={popoverBody}\n\t\t\t\tclassName={classNames(\n\t\t\t\t\t'slds-color-picker__selector',\n\t\t\t\t\tthis.props.classNameMenu\n\t\t\t\t)}\n\t\t\t\tfooter={popoverFooter}\n\t\t\t\thasNoCloseButton\n\t\t\t\thasNoNubbin\n\t\t\t\thasStaticAlignment={this.props.hasStaticAlignment}\n\t\t\t\tid={`slds-color-picker__selector-${this.generatedId}`}\n\t\t\t\tisOpen={this.state.isOpen}\n\t\t\t\tonClose={this.props.onClose}\n\t\t\t\tonOpen={this.props.onOpen}\n\t\t\t\tonRequestClose={this.handleOnRequestClose}\n\t\t\t\tposition={this.props.menuPosition}\n\t\t\t>\n\t\t\t\t<Button\n\t\t\t\t\tclassName=\"slds-color-picker__summary-button\"\n\t\t\t\t\tdisabled={this.props.disabled}\n\t\t\t\t\ticonClassName=\"slds-m-left_xx-small\"\n\t\t\t\t\ticonPosition=\"right\"\n\t\t\t\t\ticonVariant=\"more\"\n\t\t\t\t\tid={`slds-color-picker__summary-button-${this.generatedId}`}\n\t\t\t\t\tlabel={<Swatch color={this.state.currentColor} labels={labels} />}\n\t\t\t\t\tonClick={this.handleSwatchButtonClick}\n\t\t\t\t\tvariant=\"icon\"\n\t\t\t\t/>\n\t\t\t</Popover>\n\t\t);\n\t}\n\n\tsetWorkingColor(event, color) {\n\t\tconst newColor = ColorUtils.getNewColor(\n\t\t\tcolor,\n\t\t\tthis.props.events.onValidateWorkingColor,\n\t\t\t// eslint-disable-next-line react/no-access-state-in-setstate\n\t\t\tthis.state.workingColor\n\t\t);\n\t\tthis.setState({\n\t\t\tworkingColor: newColor,\n\t\t\t// eslint-disable-next-line react/no-access-state-in-setstate\n\t\t\tpreviousWorkingColor: this.state.workingColor,\n\t\t});\n\n\t\tif (this.props.events.onWorkingColorChange) {\n\t\t\tthis.props.events.onWorkingColorChange(event, { color: newColor });\n\t\t}\n\t}\n\n\thandleSwatchChange = (event) => {\n\t\tthis.setWorkingColor(event, {\n\t\t\thex: event.target.value,\n\t\t});\n\t};\n\n\thandleOnRequestClose = (event, { trigger }) => {\n\t\tif (trigger === 'clickOutside' || trigger === 'cancel') {\n\t\t\tthis.handleCancelState();\n\t\t}\n\n\t\tif (this.props.onRequestClose) {\n\t\t\tthis.props.onRequestClose(event, { trigger });\n\t\t}\n\t};\n\n\thandleClickOutside = (event) => {\n\t\tthis.handleCancelButtonClick(event);\n\t};\n\n\thandleCancel = (event) => {\n\t\tthis.handleCancelState();\n\n\t\tif (this.props.onRequestClose) {\n\t\t\tthis.props.onRequestClose(event, { trigger: 'cancel' });\n\t\t}\n\t};\n\n\thandleCancelState = () => {\n\t\tconst workingColor = ColorUtils.getNewColor(\n\t\t\t{\n\t\t\t\t// eslint-disable-next-line react/no-access-state-in-setstate\n\t\t\t\thex: this.state.currentColor,\n\t\t\t},\n\t\t\tthis.props.events.onValidateWorkingColor\n\t\t);\n\t\tthis.setState({\n\t\t\tisOpen: false,\n\t\t\tworkingColor,\n\t\t\tpreviousWorkingColor: workingColor,\n\t\t});\n\t};\n\n\thandleColorChange(property) {\n\t\treturn (event) => {\n\t\t\tconst colorProperties = {};\n\t\t\tcolorProperties[property] = event.target.value;\n\t\t\tthis.setWorkingColor(event, colorProperties);\n\t\t};\n\t}\n\n\thandleHexInputChange = (event, { labels }) => {\n\t\tconst currentColor = event.target.value;\n\t\tconst namedColorHex = ColorUtils.getHexFromNamedColor(currentColor);\n\t\tlet isValid = false;\n\n\t\tif (this.props.events.onValidateColor) {\n\t\t\tisValid = this.props.events.onValidateColor(currentColor);\n\t\t} else {\n\t\t\tisValid = namedColorHex ? true : ColorUtils.isValidHex(currentColor);\n\t\t}\n\n\t\tthis.setState({\n\t\t\tcurrentColor,\n\t\t\tworkingColor: ColorUtils.getNewColor(\n\t\t\t\t{\n\t\t\t\t\thex: namedColorHex || currentColor,\n\t\t\t\t\tname: namedColorHex ? currentColor.toLowerCase() : null,\n\t\t\t\t},\n\t\t\t\tthis.props.events.onValidateWorkingColor\n\t\t\t),\n\t\t\tcolorErrorMessage: isValid ? '' : labels.invalidColor,\n\t\t});\n\n\t\tif (this.props.events.onChange) {\n\t\t\tthis.props.events.onChange(event, {\n\t\t\t\tcolor: currentColor,\n\t\t\t\tisValid,\n\t\t\t});\n\t\t}\n\t};\n\n\thandleNavigate(property) {\n\t\treturn (event, { delta }) => {\n\t\t\tconst colorProperties = {};\n\t\t\tcolorProperties[property] = delta;\n\t\t\tconst newColor = ColorUtils.getDeltaColor(\n\t\t\t\tcolorProperties,\n\t\t\t\tthis.props.events.onValidateWorkingColor,\n\t\t\t\t// eslint-disable-next-line react/no-access-state-in-setstate\n\t\t\t\tthis.state.workingColor\n\t\t\t);\n\t\t\tthis.setState({\n\t\t\t\tworkingColor: newColor,\n\t\t\t\t// eslint-disable-next-line react/no-access-state-in-setstate\n\t\t\t\tpreviousWorkingColor: this.state.workingColor,\n\t\t\t});\n\n\t\t\tif (this.props.events.onWorkingColorChange) {\n\t\t\t\tthis.props.events.onWorkingColorChange(event, { color: newColor });\n\t\t\t}\n\t\t};\n\t}\n\n\thandleSaturationValueChange = (event, { saturation, value }) => {\n\t\tthis.setWorkingColor(event, {\n\t\t\tsaturation,\n\t\t\tvalue,\n\t\t});\n\t};\n\n\thandleSubmitButtonClick = (event) => {\n\t\tthis.setState({\n\t\t\tisOpen: false,\n\t\t\t// eslint-disable-next-line react/no-access-state-in-setstate\n\t\t\tcurrentColor: this.state.workingColor.hex,\n\t\t\tcolorErrorMessage: '',\n\t\t});\n\t\tif (this.props.events.onChange) {\n\t\t\tthis.props.events.onChange(event, {\n\t\t\t\tcolor: this.state.workingColor.hex,\n\t\t\t\tisValid: true,\n\t\t\t});\n\t\t}\n\t};\n\n\thandleSwatchButtonClick = () => {\n\t\tconst workingColor = ColorUtils.getNewColor(\n\t\t\t{\n\t\t\t\t// eslint-disable-next-line react/no-access-state-in-setstate\n\t\t\t\thex: this.state.workingColor.hex,\n\t\t\t},\n\t\t\tthis.props.events.onValidateWorkingColor\n\t\t);\n\t\tthis.setState({\n\t\t\t// eslint-disable-next-line react/no-access-state-in-setstate\n\t\t\tisOpen: !this.state.isOpen,\n\t\t\tworkingColor,\n\t\t\t// eslint-disable-next-line react/no-access-state-in-setstate\n\t\t\tpreviousWorkingColor: this.state.previousWorkingColor,\n\t\t});\n\t\tif (this.props.onRequestOpen) {\n\t\t\tthis.props.onRequestOpen();\n\t\t}\n\t};\n\n\thandleSwatchSelect = (event, { hex }) => {\n\t\tthis.setWorkingColor(event, {\n\t\t\thex,\n\t\t});\n\t};\n\n\trender() {\n\t\tconst labels = assign({}, defaultProps.labels, this.props.labels);\n\n\t\treturn (\n\t\t\t<div\n\t\t\t\tclassName={classNames('slds-color-picker', this.props.className)}\n\t\t\t\tref={(node) => {\n\t\t\t\t\tthis.wrapper = node;\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<div className=\"slds-color-picker__summary\">\n\t\t\t\t\t<label\n\t\t\t\t\t\tclassName={classNames(\n\t\t\t\t\t\t\t'slds-color-picker__summary-label',\n\t\t\t\t\t\t\tthis.props.assistiveText.label ? 'slds-assistive-text' : ''\n\t\t\t\t\t\t)}\n\t\t\t\t\t\thtmlFor={\n\t\t\t\t\t\t\t!this.props.hideInput\n\t\t\t\t\t\t\t\t? `color-picker-summary-input-${this.generatedId}`\n\t\t\t\t\t\t\t\t: undefined\n\t\t\t\t\t\t}\n\t\t\t\t\t\tid={`color-picker-label-${this.generatedId}`}\n\t\t\t\t\t>\n\t\t\t\t\t\t{this.props.assistiveText.label\n\t\t\t\t\t\t\t? this.props.assistiveText.label\n\t\t\t\t\t\t\t: labels.label}\n\t\t\t\t\t</label>\n\t\t\t\t\t{this.getPopover({ labels })}\n\t\t\t\t\t{this.getInput({ labels })}\n\t\t\t\t\t{!this.state.isOpen && this.state.colorErrorMessage ? (\n\t\t\t\t\t\t<p\n\t\t\t\t\t\t\tclassName=\"slds-form-error\"\n\t\t\t\t\t\t\tid={`color-picker-summary-error-${this.generatedId}`}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{this.state.colorErrorMessage}\n\t\t\t\t\t\t</p>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t''\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default ColorPicker;\n"]},"metadata":{},"sourceType":"module"}