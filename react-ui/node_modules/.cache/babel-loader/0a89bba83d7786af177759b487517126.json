{"ast":null,"code":"function ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n// # Panel Filter Group\n// Implements the Filter part of [Panel design pattern](https://www.lightningdesignsystem.com/components/panels) in React.\n// Based on SLDS v2.2.0-rc.1\n// ## Dependencies\n// ### React\n\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport checkProps from './check-props';\nimport PanelFilteringFooter from './private/panel-footer';\nimport PanelHeader from './private/panel-header'; // ## Constants\n\nimport { PANEL_FILTER_GROUP } from '../../../utilities/constants';\nvar defaultProps = {\n  addFilterLabel: 'Add Filter',\n  cancelLabel: 'Cancel',\n  assistiveText: {\n    closeButton: 'Close Filter Panel'\n  },\n  heading: 'Filter',\n  saveLabel: 'Save',\n  removeAllLabel: 'Remove All'\n};\n/**\n * A filtering panel contextual filtering options.\n */\n\nvar PanelFilterGroup = function PanelFilterGroup(props) {\n  checkProps(PANEL_FILTER_GROUP, props);\n  var children = props.children,\n      errorLabel = props.errorLabel,\n      footer = props.footer,\n      header = props.header,\n      variant = props.variant,\n      addFilterLabel = props.addFilterLabel,\n      onClickAdd = props.onClickAdd,\n      onClickRemoveAll = props.onClickRemoveAll,\n      removeAllLabel = props.removeAllLabel,\n      cancelLabel = props.cancelLabel,\n      heading = props.heading,\n      modified = props.modified,\n      onRequestCancel = props.onRequestCancel,\n      onRequestClose = props.onRequestClose,\n      onRequestSave = props.onRequestSave,\n      saveLabel = props.saveLabel;\n\n  var assistiveText = _objectSpread(_objectSpread({}, defaultProps.assistiveText), props.assistiveText);\n\n  if (props.assistiveTextCloseFilterPanel) {\n    assistiveText.closeButton = props.assistiveTextCloseFilterPanel;\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"slds-filters\"\n  }, variant === 'panel' ? /*#__PURE__*/React.createElement(PanelHeader, {\n    assistiveText: assistiveText,\n    cancelLabel: cancelLabel,\n    heading: heading,\n    modified: modified,\n    onRequestCancel: onRequestCancel,\n    onRequestClose: onRequestClose,\n    onRequestSave: onRequestSave,\n    saveLabel: saveLabel\n  }) : header || null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"slds-filters__body\"\n  }, errorLabel ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"slds-text-color_error slds-m-bottom_x-small\",\n    role: \"alert\"\n  }, errorLabel) : null, children), variant === 'panel' ? /*#__PURE__*/React.createElement(PanelFilteringFooter, {\n    addFilterLabel: addFilterLabel,\n    onClickAdd: onClickAdd,\n    onClickRemoveAll: onClickRemoveAll,\n    removeAllLabel: removeAllLabel\n  }) : footer || null);\n};\n\nPanelFilterGroup.displayName = PANEL_FILTER_GROUP;\nPanelFilterGroup.propTypes = {\n  /**\n   * **Assistive text for accessibility.**\n   * This object is merged with the default props object on every render.\n   * * `closeButton`: Localized description of the close button for the panel for screen readers\n   */\n  assistiveText: PropTypes.shape({\n    closeButton: PropTypes.string\n  }),\n\n  /**\n   * Localized description of the \"Add Filter\" button in the footer\n   */\n  addFilterLabel: PropTypes.node,\n\n  /**\n   * Label for button that cancels modified filters\n   */\n  cancelLabel: PropTypes.string,\n\n  /**\n   * Pass in `FilterList`'s of `Filters`:\n   *\n   * ```\n   * <FilterGroup\n   *   variant=\"panel\"\n   * >\n   *   <FilterList>\n   *   <Filter\n   *     property=\"Show Me\"\n   *     predicate=\"All Wackamoles\"\n   *   >\n   *   {popoverContents}\n   *   </Filter>\n   *   </FilterList>\n   * </FilterGroup>\n   * ```\n   */\n  children: PropTypes.node,\n\n  /**\n   * Label for the error message at the top of the panel.\n   */\n  errorLabel: PropTypes.string,\n\n  /**\n   * Allows for customization of footer. This will be added after any `FilterList`'s in the DOM. If using Panel Filter Group outside of a panel, do not set the variant to `panel` and header and footer will be removed.\n   */\n  footer: PropTypes.node,\n\n  /**\n   * Allows for customization of header. This will be added before any `FilterList`'s in the DOM. If using Panel Filter Group outside of a panel, do not set the variant to `panel` and header and footer will be removed.\n   */\n  header: PropTypes.node,\n\n  /**\n   * The heading within the header of the filtering panel\n   */\n  heading: PropTypes.oneOfType([PropTypes.node, PropTypes.string]),\n\n  /**\n   * Shows confirmation heading. Please see `onRequestCancel` and `onRequestSave`.\n   */\n  modified: PropTypes.bool,\n\n  /**\n   * Callback triggered when \"Add Filter\" is clicked. Recieves an `event`.\n   */\n  onClickAdd: PropTypes.func,\n\n  /**\n   * Callback triggered when \"Remove All\" is clicked. Recieves an `event`.\n   */\n  onClickRemoveAll: PropTypes.func,\n\n  /**\n   * When the panel's cancel button is clicked in order to reset filter panel to previous state.\n   */\n  onRequestCancel: PropTypes.func,\n\n  /**\n   * When the panel's close button is clicked. Please place Panel within another element to control position and visibility.\n   */\n  onRequestClose: PropTypes.func,\n\n  /**\n   * When the panel's save button is clicked in order to confirm filter panel state.\n   */\n  onRequestSave: PropTypes.func,\n\n  /**\n   * Localized description of the \"Remove All\" button in the footer\n   */\n  removeAllLabel: PropTypes.node,\n\n  /**\n   * Label for button that saves modified filters\n   */\n  saveLabel: PropTypes.string,\n\n  /**\n   * Adds in default Panel header and footer\n   */\n  variant: PropTypes.oneOf(['panel'])\n};\nPanelFilterGroup.defaultProps = defaultProps;\nexport default PanelFilterGroup;","map":{"version":3,"sources":["../../../../.tmp-es/components/panel/filtering/group.jsx"],"names":["defaultProps","addFilterLabel","cancelLabel","assistiveText","closeButton","heading","saveLabel","removeAllLabel","PanelFilterGroup","checkProps","children","errorLabel","footer","header","variant","onClickAdd","onClickRemoveAll","modified","onRequestCancel","onRequestClose","onRequestSave","props","PropTypes","string"],"mappings":"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","sourcesContent":["/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\n// # Panel Filter Group\n\n// Implements the Filter part of [Panel design pattern](https://www.lightningdesignsystem.com/components/panels) in React.\n// Based on SLDS v2.2.0-rc.1\n\n// ## Dependencies\n\n// ### React\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport checkProps from './check-props';\n\nimport PanelFilteringFooter from './private/panel-footer';\nimport PanelHeader from './private/panel-header';\n\n// ## Constants\nimport { PANEL_FILTER_GROUP } from '../../../utilities/constants';\n\nconst defaultProps = {\n\taddFilterLabel: 'Add Filter',\n\tcancelLabel: 'Cancel',\n\tassistiveText: {\n\t\tcloseButton: 'Close Filter Panel',\n\t},\n\theading: 'Filter',\n\tsaveLabel: 'Save',\n\tremoveAllLabel: 'Remove All',\n};\n\n/**\n * A filtering panel contextual filtering options.\n */\nconst PanelFilterGroup = (props) => {\n\tcheckProps(PANEL_FILTER_GROUP, props);\n\tconst {\n\t\tchildren,\n\t\terrorLabel,\n\t\tfooter,\n\t\theader,\n\t\tvariant,\n\n\t\t// footer\n\t\taddFilterLabel,\n\t\tonClickAdd,\n\t\tonClickRemoveAll,\n\t\tremoveAllLabel,\n\n\t\t// header\n\t\tcancelLabel,\n\t\theading,\n\t\tmodified,\n\t\tonRequestCancel,\n\t\tonRequestClose,\n\t\tonRequestSave,\n\t\tsaveLabel,\n\t} = props;\n\tconst assistiveText = {\n\t\t...defaultProps.assistiveText,\n\t\t...props.assistiveText,\n\t};\n\tif (props.assistiveTextCloseFilterPanel) {\n\t\tassistiveText.closeButton = props.assistiveTextCloseFilterPanel;\n\t}\n\treturn (\n\t\t<div className=\"slds-filters\">\n\t\t\t{variant === 'panel' ? (\n\t\t\t\t<PanelHeader\n\t\t\t\t\tassistiveText={assistiveText}\n\t\t\t\t\tcancelLabel={cancelLabel}\n\t\t\t\t\theading={heading}\n\t\t\t\t\tmodified={modified}\n\t\t\t\t\tonRequestCancel={onRequestCancel}\n\t\t\t\t\tonRequestClose={onRequestClose}\n\t\t\t\t\tonRequestSave={onRequestSave}\n\t\t\t\t\tsaveLabel={saveLabel}\n\t\t\t\t/>\n\t\t\t) : (\n\t\t\t\theader || null\n\t\t\t)}\n\t\t\t<div className=\"slds-filters__body\">\n\t\t\t\t{errorLabel ? (\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName=\"slds-text-color_error slds-m-bottom_x-small\"\n\t\t\t\t\t\trole=\"alert\"\n\t\t\t\t\t>\n\t\t\t\t\t\t{errorLabel}\n\t\t\t\t\t</div>\n\t\t\t\t) : null}\n\t\t\t\t{children}\n\t\t\t</div>\n\t\t\t{variant === 'panel' ? (\n\t\t\t\t<PanelFilteringFooter\n\t\t\t\t\taddFilterLabel={addFilterLabel}\n\t\t\t\t\tonClickAdd={onClickAdd}\n\t\t\t\t\tonClickRemoveAll={onClickRemoveAll}\n\t\t\t\t\tremoveAllLabel={removeAllLabel}\n\t\t\t\t/>\n\t\t\t) : (\n\t\t\t\tfooter || null\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nPanelFilterGroup.displayName = PANEL_FILTER_GROUP;\n\nPanelFilterGroup.propTypes = {\n\t/**\n\t * **Assistive text for accessibility.**\n\t * This object is merged with the default props object on every render.\n\t * * `closeButton`: Localized description of the close button for the panel for screen readers\n\t */\n\tassistiveText: PropTypes.shape({\n\t\tcloseButton: PropTypes.string,\n\t}),\n\t/**\n\t * Localized description of the \"Add Filter\" button in the footer\n\t */\n\taddFilterLabel: PropTypes.node,\n\t/**\n\t * Label for button that cancels modified filters\n\t */\n\tcancelLabel: PropTypes.string,\n\t/**\n\t * Pass in `FilterList`'s of `Filters`:\n\t *\n\t * ```\n\t * <FilterGroup\n\t *   variant=\"panel\"\n\t * >\n\t *   <FilterList>\n\t *   <Filter\n\t *     property=\"Show Me\"\n\t *     predicate=\"All Wackamoles\"\n\t *   >\n\t *   {popoverContents}\n\t *   </Filter>\n\t *   </FilterList>\n\t * </FilterGroup>\n\t * ```\n\t */\n\tchildren: PropTypes.node,\n\t/**\n\t * Label for the error message at the top of the panel.\n\t */\n\terrorLabel: PropTypes.string,\n\t/**\n\t * Allows for customization of footer. This will be added after any `FilterList`'s in the DOM. If using Panel Filter Group outside of a panel, do not set the variant to `panel` and header and footer will be removed.\n\t */\n\tfooter: PropTypes.node,\n\t/**\n\t * Allows for customization of header. This will be added before any `FilterList`'s in the DOM. If using Panel Filter Group outside of a panel, do not set the variant to `panel` and header and footer will be removed.\n\t */\n\theader: PropTypes.node,\n\t/**\n\t * The heading within the header of the filtering panel\n\t */\n\theading: PropTypes.oneOfType([PropTypes.node, PropTypes.string]),\n\t/**\n\t * Shows confirmation heading. Please see `onRequestCancel` and `onRequestSave`.\n\t */\n\tmodified: PropTypes.bool,\n\t/**\n\t * Callback triggered when \"Add Filter\" is clicked. Recieves an `event`.\n\t */\n\tonClickAdd: PropTypes.func,\n\t/**\n\t * Callback triggered when \"Remove All\" is clicked. Recieves an `event`.\n\t */\n\tonClickRemoveAll: PropTypes.func,\n\t/**\n\t * When the panel's cancel button is clicked in order to reset filter panel to previous state.\n\t */\n\tonRequestCancel: PropTypes.func,\n\t/**\n\t * When the panel's close button is clicked. Please place Panel within another element to control position and visibility.\n\t */\n\tonRequestClose: PropTypes.func,\n\t/**\n\t * When the panel's save button is clicked in order to confirm filter panel state.\n\t */\n\tonRequestSave: PropTypes.func,\n\t/**\n\t * Localized description of the \"Remove All\" button in the footer\n\t */\n\tremoveAllLabel: PropTypes.node,\n\t/**\n\t * Label for button that saves modified filters\n\t */\n\tsaveLabel: PropTypes.string,\n\t/**\n\t * Adds in default Panel header and footer\n\t */\n\tvariant: PropTypes.oneOf(['panel']),\n};\n\nPanelFilterGroup.defaultProps = defaultProps;\n\nexport default PanelFilterGroup;\n"]},"metadata":{},"sourceType":"module"}