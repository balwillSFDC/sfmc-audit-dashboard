{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n// # Edit Dialog Popver Component\n// ### React\n\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport assign from 'lodash.assign';\nimport { POPOVER_EDIT_DIALOG } from '../../utilities/constants';\nimport Button from '../button';\nimport Popover from './index';\nvar defaultProps = {\n  labels: {\n    cancel: 'Cancel',\n    save: 'Save'\n  }\n};\n\nvar EditDialog = /*#__PURE__*/function (_React$Component) {\n  _inherits(EditDialog, _React$Component);\n\n  var _super = _createSuper(EditDialog);\n\n  function EditDialog() {\n    var _this;\n\n    _classCallCheck(this, EditDialog);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"handleOpen\", function () {\n      _this.setState({\n        isOpen: true\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleClose\", function () {\n      _this.setState({\n        isOpen: false\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(EditDialog, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          onCancel = _this$props.onCancel,\n          onSave = _this$props.onSave,\n          restProps = _objectWithoutProperties(_this$props, [\"onCancel\", \"onSave\"]); // trigger button will either be passed in children or defaults to an edit button.\n\n\n      var children = this.props.children ? this.props.children : /*#__PURE__*/React.createElement(Button, {\n        assistiveText: {\n          icon: 'Edit: Status'\n        },\n        className: \"slds-button_reset\",\n        disabled: this.props.disabled,\n        iconCategory: \"utility\",\n        iconClassName: \"slds-button__icon slds-button__icon_hint\",\n        iconName: \"edit\",\n        onClick: this.props.handleOpen,\n        variant: \"icon\",\n        style: {\n          verticalAlign: 'middle'\n        }\n      });\n      var labels = assign({}, defaultProps.labels, this.props.labels);\n      return /*#__PURE__*/React.createElement(Popover, _extends({\n        classNameFooter: ['slds-p-top_xxx-small', 'slds-p-bottom_xx-small', 'slds-p-right_large'],\n        classNameBody: ['slds-p-bottom_xx-small'],\n        footer: /*#__PURE__*/React.createElement(\"div\", {\n          className: \"slds-text-align_right slds-text-align_right slds-p-bottom_x-small slds-p-right_xx-small\"\n        }, /*#__PURE__*/React.createElement(Button, {\n          label: labels.cancel,\n          onClick: onCancel\n        }), /*#__PURE__*/React.createElement(Button, {\n          disabled: !this.props.isModified,\n          variant: \"brand\",\n          label: labels.save,\n          onClick: onSave\n        })),\n        footerStyle: {\n          borderTop: '0px'\n        },\n        onClose: this.handleClose,\n        onRequestClose: this.handleClose,\n        onOpen: this.handleOpen\n      }, restProps), children);\n    }\n  }]);\n\n  return EditDialog;\n}(React.Component);\n\n_defineProperty(EditDialog, \"displayName\", POPOVER_EDIT_DIALOG);\n\n_defineProperty(EditDialog, \"propTypes\", {\n  /**\n   * Disables the edit dialog and prevents clicking it.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * By default, a unique ID will be created at render to support keyboard navigation, ARIA roles, and connect the popover to the triggering button. This ID will be applied to the triggering element. `${id}-popover`, `${id}-dialog-heading`, `${id}-dialog-body` are also created.\n   */\n  id: PropTypes.string,\n\n  /**\n   * Set to true when inputs within the popover are modified.\n   */\n  isModified: PropTypes.bool,\n\n  /**\n   * **Text labels for internationalization**\n   * This object is merged with the default props object on every render.\n   * * `cancel`: text for Cancel button\n   * * `save`: text for Save button\n   *\n   * _Tested with snapshot testing._\n   */\n  labels: PropTypes.shape({\n    cancel: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n    save: PropTypes.oneOfType([PropTypes.string, PropTypes.node])\n  }),\n\n  /**\n   * This function is passed onto the cancel `Button`. Triggered when the trigger button is clicked.\n   */\n  onCancel: PropTypes.func,\n\n  /**\n   * This function is passed onto the save `Button`. Triggered when the trigger button is clicked.\n   */\n  onSave: PropTypes.func,\n\n  /**\n   * Popover of type `~/components/popover`. This popover will be cloned and additional props appended, if passed in.\n   */\n  popover: PropTypes.node\n});\n\nEditDialog.defaultProps = defaultProps;\nexport default EditDialog;","map":{"version":3,"sources":["../../../.tmp-es/components/popover/edit-dialog.jsx"],"names":["defaultProps","labels","cancel","save","EditDialog","React","Component","POPOVER_EDIT_DIALOG","disabled","PropTypes","id","isModified","onCancel","onSave","popover","node","isOpen","restProps","children","icon","verticalAlign","assign","borderTop","handleOpen"],"mappings":"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","sourcesContent":["/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\n// # Edit Dialog Popver Component\n\n// ### React\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport assign from 'lodash.assign';\n\nimport { POPOVER_EDIT_DIALOG } from '../../utilities/constants';\n\nimport Button from '../button';\nimport Popover from './index';\n\nconst defaultProps = {\n\tlabels: {\n\t\tcancel: 'Cancel',\n\t\tsave: 'Save',\n\t},\n};\nclass EditDialog extends React.Component {\n\t// ### Display Name\n\t// Always use the canonical component name as the React display name.\n\tstatic displayName = POPOVER_EDIT_DIALOG;\n\n\t// ### Prop Types\n\tstatic propTypes = {\n\t\t/**\n\t\t * Disables the edit dialog and prevents clicking it.\n\t\t */\n\t\tdisabled: PropTypes.bool,\n\t\t/**\n\t\t * By default, a unique ID will be created at render to support keyboard navigation, ARIA roles, and connect the popover to the triggering button. This ID will be applied to the triggering element. `${id}-popover`, `${id}-dialog-heading`, `${id}-dialog-body` are also created.\n\t\t */\n\t\tid: PropTypes.string,\n\t\t/**\n\t\t * Set to true when inputs within the popover are modified.\n\t\t */\n\t\tisModified: PropTypes.bool,\n\t\t/**\n\t\t * **Text labels for internationalization**\n\t\t * This object is merged with the default props object on every render.\n\t\t * * `cancel`: text for Cancel button\n\t\t * * `save`: text for Save button\n\t\t *\n\t\t * _Tested with snapshot testing._\n\t\t */\n\t\tlabels: PropTypes.shape({\n\t\t\tcancel: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n\t\t\tsave: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n\t\t}),\n\t\t/**\n\t\t * This function is passed onto the cancel `Button`. Triggered when the trigger button is clicked.\n\t\t */\n\t\tonCancel: PropTypes.func,\n\t\t/**\n\t\t * This function is passed onto the save `Button`. Triggered when the trigger button is clicked.\n\t\t */\n\t\tonSave: PropTypes.func,\n\t\t/**\n\t\t * Popover of type `~/components/popover`. This popover will be cloned and additional props appended, if passed in.\n\t\t */\n\t\tpopover: PropTypes.node,\n\t};\n\n\thandleOpen = () => {\n\t\tthis.setState({ isOpen: true });\n\t};\n\n\thandleClose = () => {\n\t\tthis.setState({ isOpen: false });\n\t};\n\n\trender() {\n\t\tconst { onCancel, onSave, ...restProps } = this.props;\n\n\t\t// trigger button will either be passed in children or defaults to an edit button.\n\t\tconst children = this.props.children ? (\n\t\t\tthis.props.children\n\t\t) : (\n\t\t\t<Button\n\t\t\t\tassistiveText={{ icon: 'Edit: Status' }}\n\t\t\t\tclassName=\"slds-button_reset\"\n\t\t\t\tdisabled={this.props.disabled}\n\t\t\t\ticonCategory=\"utility\"\n\t\t\t\ticonClassName=\"slds-button__icon slds-button__icon_hint\"\n\t\t\t\ticonName=\"edit\"\n\t\t\t\tonClick={this.props.handleOpen}\n\t\t\t\tvariant=\"icon\"\n\t\t\t\tstyle={{ verticalAlign: 'middle' }}\n\t\t\t/>\n\t\t);\n\n\t\tconst labels = assign({}, defaultProps.labels, this.props.labels);\n\n\t\treturn (\n\t\t\t<Popover\n\t\t\t\tclassNameFooter={[\n\t\t\t\t\t'slds-p-top_xxx-small',\n\t\t\t\t\t'slds-p-bottom_xx-small',\n\t\t\t\t\t'slds-p-right_large',\n\t\t\t\t]}\n\t\t\t\tclassNameBody={['slds-p-bottom_xx-small']}\n\t\t\t\tfooter={\n\t\t\t\t\t<div className=\"slds-text-align_right slds-text-align_right slds-p-bottom_x-small slds-p-right_xx-small\">\n\t\t\t\t\t\t<Button label={labels.cancel} onClick={onCancel} />\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tdisabled={!this.props.isModified}\n\t\t\t\t\t\t\tvariant=\"brand\"\n\t\t\t\t\t\t\tlabel={labels.save}\n\t\t\t\t\t\t\tonClick={onSave}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t}\n\t\t\t\tfooterStyle={{ borderTop: '0px' }}\n\t\t\t\tonClose={this.handleClose}\n\t\t\t\tonRequestClose={this.handleClose}\n\t\t\t\tonOpen={this.handleOpen}\n\t\t\t\t{...restProps}\n\t\t\t>\n\t\t\t\t{children}\n\t\t\t</Popover>\n\t\t);\n\t}\n}\n\nEditDialog.defaultProps = defaultProps;\n\nexport default EditDialog;\n"]},"metadata":{},"sourceType":"module"}