{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n// # Toast Component\n// Implements the [Toast design pattern](https://lightningdesignsystem.com/components/toasts/) in React.\n\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport assign from 'lodash.assign';\nimport classNames from '../../utilities/class-names';\nimport EventUtil from '../../utilities/event';\nimport Button from '../button';\nimport Icon from '../icon';\nimport checkProps from './check-props';\nimport { TOAST } from '../../utilities/constants';\nimport DOMElementFocus from '../../utilities/dom-element-focus';\nimport componentDoc from './component.json';\nvar propTypes = {\n  /**\n   * **Assistive text for accessibility**\n   * This object is merged with the default props object on every render.\n   * * `closeButton`: This is a visually hidden label for the close button.\n   * * `error`: This is a visually hidden label to mark the toast as an error variant\n   * * `info`: This is a visually hidden label to mark the toast as an info variant\n   * * `success`: This is a visually hidden label to mark the toast as an success variant\n   * * `warning`: This is a visually hidden label to mark the toast as an warning variant\n   * _Tested with snapshot testing._\n   */\n  assistiveText: PropTypes.shape({\n    closeButton: PropTypes.oneOfType([PropTypes.string, PropTypes.node])\n  }),\n\n  /**\n   * CSS classes to be added to tag with `.slds-notify_toast`. Uses `classNames` [API](https://github.com/JedWatson/classnames).\n   * _Tested with snapshot testing._\n   */\n  className: PropTypes.oneOfType([PropTypes.array, PropTypes.object, PropTypes.string]),\n\n  /**\n   * If duration exists, the Toast will disappear after that amount of time. Time in milliseconds. _Tested with Mocha testing._\n   */\n  duration: PropTypes.number,\n\n  /**\n   * **Text labels for internationalization**\n   * This object is merged with the default props object on every render.\n   * * `details`: Secondary text below heading\n   * * `heading`: text within heading tag\n   * * `headingLink`: Text of link that triggers `onClickHeadingLink`. Inline links should pass a keyed array of React components into `labels.heading`.\n   *\n   * _Tested with snapshot testing._\n   */\n  labels: PropTypes.shape({\n    details: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n    heading: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n    headingLink: PropTypes.oneOfType([PropTypes.string, PropTypes.node])\n  }),\n\n  /**\n   * Triggered by link. _Tested with Mocha testing._\n   */\n  onClickHeadingLink: PropTypes.func,\n\n  /**\n   * Icon of type `~/components/icon`. This icon will be cloned and additional props appended. The default icons are:\n   * * info variant: `utility:info`\n   * * error variant: `utility:error`\n   * * success variant: `utility:success`\n   * * warning variant: `utility:warning`\n   *\n   * _Tested with snapshot testing._\n   */\n  icon: PropTypes.node,\n\n  /**\n   * Triggered by close button. _Tested with Mocha testing._\n   */\n  onRequestClose: PropTypes.func,\n\n  /**\n   * Custom styles to be passed to the component. _Tested with Mocha testing._\n   */\n  style: PropTypes.object,\n\n  /**\n   * The type of Toast. _Tested with snapshot testing._\n   */\n  variant: PropTypes.oneOf(['error', 'info', 'success', 'warning']).isRequired\n};\nvar defaultProps = {\n  assistiveText: {\n    closeButton: 'Close',\n    error: 'error',\n    info: 'info',\n    success: 'success',\n    warning: 'warning'\n  },\n  variant: 'info'\n};\n/**\n * Toast serves as a feedback & confirmation mechanism after the user takes an action. View [banner guidelines](https://www.lightningdesignsystem.com/guidelines/messaging/components/banners/).\n */\n\nvar Toast = /*#__PURE__*/function (_React$Component) {\n  _inherits(Toast, _React$Component);\n\n  var _super = _createSuper(Toast);\n\n  function Toast(props) {\n    var _this;\n\n    _classCallCheck(this, Toast);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"onClose\", function () {\n      _this.clearTimeout();\n\n      if (_this.props.onRequestClose) {\n        _this.props.onRequestClose();\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"clearTimeout\", function () {\n      if (_this.timeout) {\n        clearTimeout(_this.timeout);\n        _this.timeout = null;\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"saveToastRef\", function (toast) {\n      _this.toast = toast;\n\n      if (_this.state.isInitialRender) {\n        DOMElementFocus.storeActiveElement();\n\n        if (_this.toast) {\n          _this.toast.focus();\n        }\n\n        _this.setState({\n          isInitialRender: false\n        });\n      }\n    });\n\n    _this.state = {\n      isInitialRender: true\n    };\n    _this.timeout = null;\n    _this.toast = null; // `checkProps` issues warnings to developers about properties (similar to React's built in development tools)\n\n    checkProps(TOAST, props, componentDoc);\n    return _this;\n  }\n\n  _createClass(Toast, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      if (this.props.duration) {\n        this.timeout = setTimeout(function () {\n          _this2.onClose();\n        }, this.props.duration);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.clearTimeout();\n      DOMElementFocus.returnFocusToStoredElement();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      // Merge objects of strings with their default object\n      var assistiveText = assign({}, defaultProps.assistiveText, this.props.assistiveText);\n      var labels = assign({}, defaultProps.labels, this.props.labels);\n      var heading = labels.heading || this.props.content; // eslint-disable-line react/prop-types\n\n      var assistiveTextVariant = {\n        info: assistiveText.info,\n        success: assistiveText.success,\n        warning: assistiveText.warning,\n        error: assistiveText.error\n      };\n      var defaultIcons = {\n        info: /*#__PURE__*/React.createElement(Icon, {\n          category: \"utility\",\n          name: \"info\"\n        }),\n        success: /*#__PURE__*/React.createElement(Icon, {\n          category: \"utility\",\n          name: \"success\"\n        }),\n        warning: /*#__PURE__*/React.createElement(Icon, {\n          category: \"utility\",\n          name: \"warning\"\n        }),\n        error: /*#__PURE__*/React.createElement(Icon, {\n          category: \"utility\",\n          name: \"error\"\n        })\n      };\n      var icon = this.props.icon ? this.props.icon : defaultIcons[this.props.variant];\n      var clonedIcon = /*#__PURE__*/React.cloneElement(icon, {\n        containerClassName: 'slds-m-right_small slds-no-flex slds-align-top',\n        inverse: true,\n        size: 'small'\n      });\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: classNames('slds-notify slds-notify_toast', {\n          'slds-theme_info': this.props.variant === 'info',\n          'slds-theme_success': this.props.variant === 'success',\n          'slds-theme_warning': this.props.variant === 'warning',\n          'slds-theme_error': this.props.variant === 'error'\n        }, this.props.className),\n        ref: this.saveToastRef,\n        role: \"status\",\n        style: this.props.style,\n        tabIndex: 0 // eslint-disable-line jsx-a11y/no-noninteractive-tabindex\n\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"slds-assistive-text\"\n      }, assistiveTextVariant[this.props.variant]), clonedIcon, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"slds-notify__content\"\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        className: \"slds-text-heading_small\"\n      }, heading, ' ', labels.headingLink ? /*#__PURE__*/React.createElement(\"a\", {\n        onClick: EventUtil.trappedHandler(this.props.onClickHeadingLink),\n        href: \"#\"\n      }, labels.headingLink) : null), labels.details ? /*#__PURE__*/React.createElement(\"p\", null, labels.details) : null), /*#__PURE__*/React.createElement(Button, {\n        assistiveText: {\n          icon: assistiveText.closeButton\n        },\n        className: \"slds-notify__close\",\n        iconCategory: \"utility\",\n        iconName: \"close\",\n        iconSize: \"large\",\n        inverse: true,\n        onClick: this.props.onRequestClose,\n        title: assistiveText.closeButton,\n        variant: \"icon\"\n      }));\n    }\n  }]);\n\n  return Toast;\n}(React.Component);\n\nToast.defaultProps = defaultProps;\nToast.displayName = TOAST;\nToast.propTypes = propTypes;\nexport default Toast;","map":{"version":3,"sources":["../../../.tmp-es/components/toast/index.jsx"],"names":["propTypes","assistiveText","closeButton","PropTypes","className","duration","labels","details","heading","headingLink","onClickHeadingLink","icon","onRequestClose","style","variant","isRequired","defaultProps","error","info","success","warning","Toast","React","Component","isInitialRender","checkProps","setTimeout","DOMElementFocus","clearTimeout","assign","assistiveTextVariant","defaultIcons","clonedIcon","containerClassName","inverse","size","classNames","EventUtil"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;AAEA;AAEA;;;AAEA,OAAA,KAAA,MAAA,OAAA;AACA,OAAA,SAAA,MAAA,YAAA;AAEA,OAAA,MAAA,MAAA,eAAA;AAEA,OAAA,UAAA,MAAA,6BAAA;AACA,OAAA,SAAA,MAAA,uBAAA;AACA,OAAA,MAAA,MAAA,WAAA;AACA,OAAA,IAAA,MAAA,SAAA;AACA,OAAA,UAAA,MAAA,eAAA;AACA,SAAA,KAAA,QAAA,2BAAA;AACA,OAAA,eAAA,MAAA,mCAAA;AACA,OAAA,YAAA,MAAA,kBAAA;AAEA,IAAMA,SAAS,GAAG;AACjB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACCC,EAAAA,aAAa,EAAE,SAAS,CAAT,KAAA,CAAgB;AAC9BC,IAAAA,WAAW,EAAEC,SAAS,CAATA,SAAAA,CAAoB,CAACA,SAAS,CAAV,MAAA,EAAmBA,SAAS,CAAhDA,IAAoB,CAApBA;AADiB,GAAhB,CAXE;;AAcjB;AACD;AACA;AACA;AACCC,EAAAA,SAAS,EAAED,SAAS,CAATA,SAAAA,CAAoB,CAC9BA,SAAS,CADqB,KAAA,EAE9BA,SAAS,CAFqB,MAAA,EAG9BA,SAAS,CArBO,MAkBc,CAApBA,CAlBM;;AAuBjB;AACD;AACA;AACCE,EAAAA,QAAQ,EAAEF,SAAS,CA1BF,MAAA;;AA2BjB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACCG,EAAAA,MAAM,EAAE,SAAS,CAAT,KAAA,CAAgB;AACvBC,IAAAA,OAAO,EAAEJ,SAAS,CAATA,SAAAA,CAAoB,CAACA,SAAS,CAAV,MAAA,EAAmBA,SAAS,CADlC,IACM,CAApBA,CADc;AAEvBK,IAAAA,OAAO,EAAEL,SAAS,CAATA,SAAAA,CAAoB,CAACA,SAAS,CAAV,MAAA,EAAmBA,SAAS,CAFlC,IAEM,CAApBA,CAFc;AAGvBM,IAAAA,WAAW,EAAEN,SAAS,CAATA,SAAAA,CAAoB,CAACA,SAAS,CAAV,MAAA,EAAmBA,SAAS,CAAhDA,IAAoB,CAApBA;AAHU,GAAhB,CApCS;;AAyCjB;AACD;AACA;AACCO,EAAAA,kBAAkB,EAAEP,SAAS,CA5CZ,IAAA;;AA6CjB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACCQ,EAAAA,IAAI,EAAER,SAAS,CAtDE,IAAA;;AAuDjB;AACD;AACA;AACCS,EAAAA,cAAc,EAAET,SAAS,CA1DR,IAAA;;AA2DjB;AACD;AACA;AACCU,EAAAA,KAAK,EAAEV,SAAS,CA9DC,MAAA;;AA+DjB;AACD;AACA;AACCW,EAAAA,OAAO,EAAEX,SAAS,CAATA,KAAAA,CAAgB,CAAA,OAAA,EAAA,MAAA,EAAA,SAAA,EAAhBA,SAAgB,CAAhBA,EAAyDY;AAlEjD,CAAlB;AAqEA,IAAMC,YAAY,GAAG;AACpBf,EAAAA,aAAa,EAAE;AACdC,IAAAA,WAAW,EADG,OAAA;AAEde,IAAAA,KAAK,EAFS,OAAA;AAGdC,IAAAA,IAAI,EAHU,MAAA;AAIdC,IAAAA,OAAO,EAJO,SAAA;AAKdC,IAAAA,OAAO,EAAE;AALK,GADK;AAQpBN,EAAAA,OAAO,EAAE;AARW,CAArB;AAWA;AACA;AACA;;IAEMO,K;;;;;AACL,WAAA,KAAA,CAAA,KAAA,EAAmB;AAAA,QAAA,KAAA;;AAAA,IAAA,eAAA,CAAA,IAAA,EAAA,KAAA,CAAA;;AAClB,IAAA,KAAA,GAAA,MAAA,CAAA,IAAA,CAAA,IAAA,EAAA,KAAA,CAAA;;AADkB,IAAA,eAAA,CAAA,sBAAA,CAAA,KAAA,CAAA,EAAA,SAAA,EAyBT,YAAM;AACf,MAAA,KAAA,CAAA,YAAA;;AAEA,UAAI,KAAA,CAAA,KAAA,CAAJ,cAAA,EAA+B;AAC9B,QAAA,KAAA,CAAA,KAAA,CAAA,cAAA;AACA;AA9BiB,KAAA,CAAA;;AAAA,IAAA,eAAA,CAAA,sBAAA,CAAA,KAAA,CAAA,EAAA,cAAA,EAiCJ,YAAM;AACpB,UAAI,KAAA,CAAJ,OAAA,EAAkB;AACjBO,QAAAA,YAAY,CAAC,KAAA,CAAbA,OAAY,CAAZA;AACA,QAAA,KAAA,CAAA,OAAA,GAAA,IAAA;AACA;AArCiB,KAAA,CAAA;;AAAA,IAAA,eAAA,CAAA,sBAAA,CAAA,KAAA,CAAA,EAAA,cAAA,EAwCJ,UAAA,KAAA,EAAW;AACzB,MAAA,KAAA,CAAA,KAAA,GAAA,KAAA;;AACA,UAAI,KAAA,CAAA,KAAA,CAAJ,eAAA,EAAgC;AAC/BD,QAAAA,eAAe,CAAfA,kBAAAA;;AACA,YAAI,KAAA,CAAJ,KAAA,EAAgB;AACf,UAAA,KAAA,CAAA,KAAA,CAAA,KAAA;AACA;;AACD,QAAA,KAAA,CAAA,QAAA,CAAc;AAAEH,UAAAA,eAAe,EAAE;AAAnB,SAAd;AACA;AAhDiB,KAAA,CAAA;;AAElB,IAAA,KAAA,CAAA,KAAA,GAAa;AACZA,MAAAA,eAAe,EAAE;AADL,KAAb;AAGA,IAAA,KAAA,CAAA,OAAA,GAAA,IAAA;AACA,IAAA,KAAA,CAAA,KAAA,GANkB,IAMlB,CANkB,CAQlB;;AACAC,IAAAA,UAAU,CAAA,KAAA,EAAA,KAAA,EAAVA,YAAU,CAAVA;AATkB,WAAA,KAAA;AAUlB;;;;wCAEmB;AAAA,UAAA,MAAA,GAAA,IAAA;;AACnB,UAAI,KAAA,KAAA,CAAJ,QAAA,EAAyB;AACxB,aAAA,OAAA,GAAeC,UAAU,CAAC,YAAM;AAC/B,UAAA,MAAI,CAAJ,OAAA;AADwB,SAAA,EAEtB,KAAA,KAAA,CAFH,QAAyB,CAAzB;AAGA;AACD;;;2CAEsB;AACtB,WAAA,YAAA;AACAC,MAAAA,eAAe,CAAfA,0BAAAA;AACA;;;6BA4BQ;AACR;AACA,UAAM1B,aAAa,GAAG4B,MAAM,CAAA,EAAA,EAE3Bb,YAAY,CAFe,aAAA,EAG3B,KAAA,KAAA,CAHD,aAA4B,CAA5B;AAKA,UAAMV,MAAM,GAAGuB,MAAM,CAAA,EAAA,EAAKb,YAAY,CAAjB,MAAA,EAA0B,KAAA,KAAA,CAA/C,MAAqB,CAArB;AACA,UAAMR,OAAO,GAAGF,MAAM,CAANA,OAAAA,IAAkB,KAAA,KAAA,CAR1B,OAQR,CARQ,CAQ8C;;AAEtD,UAAMwB,oBAAoB,GAAG;AAC5BZ,QAAAA,IAAI,EAAEjB,aAAa,CADS,IAAA;AAE5BkB,QAAAA,OAAO,EAAElB,aAAa,CAFM,OAAA;AAG5BmB,QAAAA,OAAO,EAAEnB,aAAa,CAHM,OAAA;AAI5BgB,QAAAA,KAAK,EAAEhB,aAAa,CAACgB;AAJO,OAA7B;AAOA,UAAMc,YAAY,GAAG;AACpBb,QAAAA,IAAI,EAAA,aAAE,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA;AAAM,UAAA,QAAQ,EAAd,SAAA;AAAyB,UAAA,IAAI,EAAC;AAA9B,SAAA,CADc;AAEpBC,QAAAA,OAAO,EAAA,aAAE,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA;AAAM,UAAA,QAAQ,EAAd,SAAA;AAAyB,UAAA,IAAI,EAAC;AAA9B,SAAA,CAFW;AAGpBC,QAAAA,OAAO,EAAA,aAAE,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA;AAAM,UAAA,QAAQ,EAAd,SAAA;AAAyB,UAAA,IAAI,EAAC;AAA9B,SAAA,CAHW;AAIpBH,QAAAA,KAAK,EAAA,aAAE,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA;AAAM,UAAA,QAAQ,EAAd,SAAA;AAAyB,UAAA,IAAI,EAAC;AAA9B,SAAA;AAJa,OAArB;AAOA,UAAMN,IAAI,GAAG,KAAA,KAAA,CAAA,IAAA,GACV,KAAA,KAAA,CADU,IAAA,GAEVoB,YAAY,CAAC,KAAA,KAAA,CAFhB,OAEe,CAFf;AAIA,UAAMC,UAAU,GAAA,aAAG,KAAK,CAAL,YAAA,CAAA,IAAA,EAAyB;AAC3CC,QAAAA,kBAAkB,EADyB,gDAAA;AAE3CC,QAAAA,OAAO,EAFoC,IAAA;AAG3CC,QAAAA,IAAI,EAAE;AAHqC,OAAzB,CAAnB;AAMA,aAAA,aACC,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AACC,QAAA,SAAS,EAAEC,UAAU,CAAA,+BAAA,EAEpB;AACC,6BAAmB,KAAA,KAAA,CAAA,OAAA,KADpB,MAAA;AAEC,gCAAsB,KAAA,KAAA,CAAA,OAAA,KAFvB,SAAA;AAGC,gCAAsB,KAAA,KAAA,CAAA,OAAA,KAHvB,SAAA;AAIC,8BAAoB,KAAA,KAAA,CAAA,OAAA,KAAuB;AAJ5C,SAFoB,EAQpB,KAAA,KAAA,CATF,SACsB,CADtB;AAWC,QAAA,GAAG,EAAE,KAXN,YAAA;AAYC,QAAA,IAAI,EAZL,QAAA;AAaC,QAAA,KAAK,EAAE,KAAA,KAAA,CAbR,KAAA;AAcC,QAAA,QAAQ,EAdT,CAAA,CAcc;;AAdd,OAAA,EAAA,aAgBC,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AAAM,QAAA,SAAS,EAAC;AAAhB,OAAA,EACEN,oBAAoB,CAAC,KAAA,KAAA,CAjBxB,OAiBuB,CADtB,CAhBD,EAAA,UAAA,EAAA,aAoBC,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,QAAA,SAAS,EAAC;AAAf,OAAA,EAAA,aACC,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA;AAAI,QAAA,SAAS,EAAC;AAAd,OAAA,EAAA,OAAA,EAAA,GAAA,EAEExB,MAAM,CAANA,WAAAA,GAAAA,aACA,KAAA,CAAA,aAAA,CAAA,GAAA,EAAA;AACC,QAAA,OAAO,EAAE+B,SAAS,CAATA,cAAAA,CACR,KAAA,KAAA,CAFF,kBACUA,CADV;AAIC,QAAA,IAAI,EAAC;AAJN,OAAA,EAME/B,MAAM,CAPRA,WACA,CADAA,GAHH,IACC,CADD,EAcEA,MAAM,CAANA,OAAAA,GAAAA,aAAiB,KAAA,CAAA,aAAA,CAAA,GAAA,EAAA,IAAA,EAAIA,MAAM,CAA3BA,OAAiB,CAAjBA,GAlCH,IAoBC,CApBD,EAAA,aAoCC,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AACC,QAAA,aAAa,EAAE;AAAEK,UAAAA,IAAI,EAAEV,aAAa,CAACC;AAAtB,SADhB;AAEC,QAAA,SAAS,EAFV,oBAAA;AAGC,QAAA,YAAY,EAHb,SAAA;AAIC,QAAA,QAAQ,EAJT,OAAA;AAKC,QAAA,QAAQ,EALT,OAAA;AAMC,QAAA,OAAO,EANR,IAAA;AAOC,QAAA,OAAO,EAAE,KAAA,KAAA,CAPV,cAAA;AAQC,QAAA,KAAK,EAAED,aAAa,CARrB,WAAA;AASC,QAAA,OAAO,EAAC;AATT,OAAA,CApCD,CADD;AAkDA;;;;EAxIkBqB,KAAK,CAACC,S;;AA2I1BF,KAAK,CAALA,YAAAA,GAAAA,YAAAA;AACAA,KAAK,CAALA,WAAAA,GAAAA,KAAAA;AACAA,KAAK,CAALA,SAAAA,GAAAA,SAAAA;AAEA,eAAA,KAAA","sourcesContent":["/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\n// # Toast Component\n\n// Implements the [Toast design pattern](https://lightningdesignsystem.com/components/toasts/) in React.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport assign from 'lodash.assign';\n\nimport classNames from '../../utilities/class-names';\nimport EventUtil from '../../utilities/event';\nimport Button from '../button';\nimport Icon from '../icon';\nimport checkProps from './check-props';\nimport { TOAST } from '../../utilities/constants';\nimport DOMElementFocus from '../../utilities/dom-element-focus';\nimport componentDoc from './component.json';\n\nconst propTypes = {\n\t/**\n\t * **Assistive text for accessibility**\n\t * This object is merged with the default props object on every render.\n\t * * `closeButton`: This is a visually hidden label for the close button.\n\t * * `error`: This is a visually hidden label to mark the toast as an error variant\n\t * * `info`: This is a visually hidden label to mark the toast as an info variant\n\t * * `success`: This is a visually hidden label to mark the toast as an success variant\n\t * * `warning`: This is a visually hidden label to mark the toast as an warning variant\n\t * _Tested with snapshot testing._\n\t */\n\tassistiveText: PropTypes.shape({\n\t\tcloseButton: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n\t}),\n\t/**\n\t * CSS classes to be added to tag with `.slds-notify_toast`. Uses `classNames` [API](https://github.com/JedWatson/classnames).\n\t * _Tested with snapshot testing._\n\t */\n\tclassName: PropTypes.oneOfType([\n\t\tPropTypes.array,\n\t\tPropTypes.object,\n\t\tPropTypes.string,\n\t]),\n\t/**\n\t * If duration exists, the Toast will disappear after that amount of time. Time in milliseconds. _Tested with Mocha testing._\n\t */\n\tduration: PropTypes.number,\n\t/**\n\t * **Text labels for internationalization**\n\t * This object is merged with the default props object on every render.\n\t * * `details`: Secondary text below heading\n\t * * `heading`: text within heading tag\n\t * * `headingLink`: Text of link that triggers `onClickHeadingLink`. Inline links should pass a keyed array of React components into `labels.heading`.\n\t *\n\t * _Tested with snapshot testing._\n\t */\n\tlabels: PropTypes.shape({\n\t\tdetails: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n\t\theading: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n\t\theadingLink: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n\t}),\n\t/**\n\t * Triggered by link. _Tested with Mocha testing._\n\t */\n\tonClickHeadingLink: PropTypes.func,\n\t/**\n\t * Icon of type `~/components/icon`. This icon will be cloned and additional props appended. The default icons are:\n\t * * info variant: `utility:info`\n\t * * error variant: `utility:error`\n\t * * success variant: `utility:success`\n\t * * warning variant: `utility:warning`\n\t *\n\t * _Tested with snapshot testing._\n\t */\n\ticon: PropTypes.node,\n\t/**\n\t * Triggered by close button. _Tested with Mocha testing._\n\t */\n\tonRequestClose: PropTypes.func,\n\t/**\n\t * Custom styles to be passed to the component. _Tested with Mocha testing._\n\t */\n\tstyle: PropTypes.object,\n\t/**\n\t * The type of Toast. _Tested with snapshot testing._\n\t */\n\tvariant: PropTypes.oneOf(['error', 'info', 'success', 'warning']).isRequired,\n};\n\nconst defaultProps = {\n\tassistiveText: {\n\t\tcloseButton: 'Close',\n\t\terror: 'error',\n\t\tinfo: 'info',\n\t\tsuccess: 'success',\n\t\twarning: 'warning',\n\t},\n\tvariant: 'info',\n};\n\n/**\n * Toast serves as a feedback & confirmation mechanism after the user takes an action. View [banner guidelines](https://www.lightningdesignsystem.com/guidelines/messaging/components/banners/).\n */\n\nclass Toast extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tisInitialRender: true,\n\t\t};\n\t\tthis.timeout = null;\n\t\tthis.toast = null;\n\n\t\t// `checkProps` issues warnings to developers about properties (similar to React's built in development tools)\n\t\tcheckProps(TOAST, props, componentDoc);\n\t}\n\n\tcomponentDidMount() {\n\t\tif (this.props.duration) {\n\t\t\tthis.timeout = setTimeout(() => {\n\t\t\t\tthis.onClose();\n\t\t\t}, this.props.duration);\n\t\t}\n\t}\n\n\tcomponentWillUnmount() {\n\t\tthis.clearTimeout();\n\t\tDOMElementFocus.returnFocusToStoredElement();\n\t}\n\n\tonClose = () => {\n\t\tthis.clearTimeout();\n\n\t\tif (this.props.onRequestClose) {\n\t\t\tthis.props.onRequestClose();\n\t\t}\n\t};\n\n\tclearTimeout = () => {\n\t\tif (this.timeout) {\n\t\t\tclearTimeout(this.timeout);\n\t\t\tthis.timeout = null;\n\t\t}\n\t};\n\n\tsaveToastRef = (toast) => {\n\t\tthis.toast = toast;\n\t\tif (this.state.isInitialRender) {\n\t\t\tDOMElementFocus.storeActiveElement();\n\t\t\tif (this.toast) {\n\t\t\t\tthis.toast.focus();\n\t\t\t}\n\t\t\tthis.setState({ isInitialRender: false });\n\t\t}\n\t};\n\n\trender() {\n\t\t// Merge objects of strings with their default object\n\t\tconst assistiveText = assign(\n\t\t\t{},\n\t\t\tdefaultProps.assistiveText,\n\t\t\tthis.props.assistiveText\n\t\t);\n\t\tconst labels = assign({}, defaultProps.labels, this.props.labels);\n\t\tconst heading = labels.heading || this.props.content; // eslint-disable-line react/prop-types\n\n\t\tconst assistiveTextVariant = {\n\t\t\tinfo: assistiveText.info,\n\t\t\tsuccess: assistiveText.success,\n\t\t\twarning: assistiveText.warning,\n\t\t\terror: assistiveText.error,\n\t\t};\n\n\t\tconst defaultIcons = {\n\t\t\tinfo: <Icon category=\"utility\" name=\"info\" />,\n\t\t\tsuccess: <Icon category=\"utility\" name=\"success\" />,\n\t\t\twarning: <Icon category=\"utility\" name=\"warning\" />,\n\t\t\terror: <Icon category=\"utility\" name=\"error\" />,\n\t\t};\n\n\t\tconst icon = this.props.icon\n\t\t\t? this.props.icon\n\t\t\t: defaultIcons[this.props.variant];\n\n\t\tconst clonedIcon = React.cloneElement(icon, {\n\t\t\tcontainerClassName: 'slds-m-right_small slds-no-flex slds-align-top',\n\t\t\tinverse: true,\n\t\t\tsize: 'small',\n\t\t});\n\n\t\treturn (\n\t\t\t<div\n\t\t\t\tclassName={classNames(\n\t\t\t\t\t'slds-notify slds-notify_toast',\n\t\t\t\t\t{\n\t\t\t\t\t\t'slds-theme_info': this.props.variant === 'info',\n\t\t\t\t\t\t'slds-theme_success': this.props.variant === 'success',\n\t\t\t\t\t\t'slds-theme_warning': this.props.variant === 'warning',\n\t\t\t\t\t\t'slds-theme_error': this.props.variant === 'error',\n\t\t\t\t\t},\n\t\t\t\t\tthis.props.className\n\t\t\t\t)}\n\t\t\t\tref={this.saveToastRef}\n\t\t\t\trole=\"status\"\n\t\t\t\tstyle={this.props.style}\n\t\t\t\ttabIndex={0} // eslint-disable-line jsx-a11y/no-noninteractive-tabindex\n\t\t\t>\n\t\t\t\t<span className=\"slds-assistive-text\">\n\t\t\t\t\t{assistiveTextVariant[this.props.variant]}\n\t\t\t\t</span>\n\t\t\t\t{clonedIcon}\n\t\t\t\t<div className=\"slds-notify__content\">\n\t\t\t\t\t<h2 className=\"slds-text-heading_small\">\n\t\t\t\t\t\t{heading}{' '}\n\t\t\t\t\t\t{labels.headingLink ? (\n\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\tonClick={EventUtil.trappedHandler(\n\t\t\t\t\t\t\t\t\tthis.props.onClickHeadingLink\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\thref=\"#\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{labels.headingLink}\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t) : null}\n\t\t\t\t\t</h2>\n\t\t\t\t\t{labels.details ? <p>{labels.details}</p> : null}\n\t\t\t\t</div>\n\t\t\t\t<Button\n\t\t\t\t\tassistiveText={{ icon: assistiveText.closeButton }}\n\t\t\t\t\tclassName=\"slds-notify__close\"\n\t\t\t\t\ticonCategory=\"utility\"\n\t\t\t\t\ticonName=\"close\"\n\t\t\t\t\ticonSize=\"large\"\n\t\t\t\t\tinverse\n\t\t\t\t\tonClick={this.props.onRequestClose}\n\t\t\t\t\ttitle={assistiveText.closeButton}\n\t\t\t\t\tvariant=\"icon\"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nToast.defaultProps = defaultProps;\nToast.displayName = TOAST;\nToast.propTypes = propTypes;\n\nexport default Toast;\n"]},"metadata":{},"sourceType":"module"}