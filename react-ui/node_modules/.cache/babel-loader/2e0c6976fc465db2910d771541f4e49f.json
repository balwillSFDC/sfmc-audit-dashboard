{"ast":null,"code":"/* eslint-disable max-lines */\n\n/* eslint-disable react/no-access-state-in-setstate */\n\n/* eslint-disable no-param-reassign */\n\n/* eslint-disable prefer-destructuring */\n\n/* eslint-disable max-lines */\n\n/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\n/* eslint-disable react/prefer-es6-class */\n// # Picklist Component [DEPRECATED]\n// Implements the [Picklist design pattern](https://www.lightningdesignsystem.com/components/menus/#flavor-picklist) in React.\n// Based on SLDS v2.1.0-rc.2\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport createReactClass from 'create-react-class';\nimport PropTypes from 'prop-types';\nimport isFunction from 'lodash.isfunction'; // ### classNames\n// [github.com/JedWatson/classnames](https://github.com/JedWatson/classnames)\n// This project uses `classnames`, \"a simple javascript utility for conditionally\n// joining classNames together.\"\n\nimport classNames from 'classnames'; // ### shortid\n// [npmjs.com/package/shortid](https://www.npmjs.com/package/shortid)\n// shortid is a short, non-sequential, url-friendly, unique id generator\n\nimport shortid from 'shortid'; // This component's `checkProps` which issues warnings to developers about properties\n// when in development mode (similar to React's built in development tools)\n\nimport checkProps from './check-props'; // ### Children\n\nimport Dialog from '../utilities/dialog';\nimport Icon from '../icon';\nimport List from '../utilities/menu-list';\nimport ListItemLabel from '../utilities/menu-list/item-label';\nimport Pill from '../utilities/pill';\nimport EventUtil from '../../utilities/event';\nimport KeyBuffer from '../../utilities/key-buffer';\nimport keyboardNavigate from '../../utilities/keyboard-navigate';\nimport KEYS from '../../utilities/key-code';\nimport { MENU_PICKLIST } from '../../utilities/constants';\nimport { IconSettingsContext } from '../icon-settings';\n\nvar noop = function noop() {};\n\nvar itemIsSelectable = function itemIsSelectable(item) {\n  return item.type !== 'header' && item.type !== 'divider' && !item.disabled;\n};\n\nvar getNavigableItems = function getNavigableItems(items) {\n  var navigableItems = [];\n  navigableItems.indexes = [];\n  navigableItems.keyBuffer = new KeyBuffer();\n\n  if (Array.isArray(items)) {\n    items.forEach(function (item, index) {\n      if (itemIsSelectable(item)) {\n        // eslint-disable-next-line fp/no-mutating-methods\n        navigableItems.push({\n          index: index,\n          text: \"\".concat(item.label).toLowerCase()\n        }); // eslint-disable-next-line fp/no-mutating-methods\n\n        navigableItems.indexes.push(index);\n      }\n    });\n  }\n\n  return navigableItems;\n};\n\nfunction getMenuItem(menuItemId) {\n  var context = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : document;\n  var menuItem;\n\n  if (menuItemId) {\n    menuItem = context.getElementById(menuItemId);\n  }\n\n  return menuItem;\n}\n\nfunction getMenu(componentRef) {\n  return ReactDOM.findDOMNode(componentRef).querySelector('ul.dropdown__list'); // eslint-disable-line react/no-find-dom-node\n}\n/**\n * ** MenuPicklist is deprecated. Please use a read-only Combobox instead.**\n *\n * The MenuPicklist component is a variant of the Lightning Design System Menu component.\n */\n\n\nvar MenuPicklist = createReactClass({\n  // ### Display Name\n  // Always use the canonical component name as the React display name.\n  displayName: MENU_PICKLIST,\n  // ### Prop Types\n  propTypes: {\n    /**\n     * Callback that passes in the DOM reference of the `<button>` DOM node within this component. Primary use is to allow `focus` to be called. You should still test if the node exists, since rendering is asynchronous. `buttonRef={(component) => { if(component) console.log(component); }}`\n     */\n    buttonRef: PropTypes.func,\n    className: PropTypes.string,\n\n    /**\n     * If true, renders checkmark icon on the selected Menu Item.\n     */\n    checkmark: PropTypes.bool,\n    disabled: PropTypes.bool,\n\n    /**\n     * Message to display when the input is in an error state. When this is present, also visually highlights the component as in error.\n     */\n    errorText: PropTypes.string,\n\n    /**\n     * A unique ID is needed in order to support keyboard navigation, ARIA support, and connect the dropdown to the triggering button.\n     */\n    id: PropTypes.string,\n\n    /**\n     * Renders menu within the wrapping trigger as a sibling of the button. By default, you will have an absolutely positioned container at an elevated z-index.\n     */\n    isInline: PropTypes.bool,\n\n    /**\n     * Form element label\n     */\n    label: PropTypes.string,\n\n    /**\n     * **Text labels for internationalization**\n     * This object is merged with the default props object on every render.\n     * * `multipleOptionsSelected`: Text to be used when multiple items are selected. \"2 Options Selected\" is a good pattern to use.\n     */\n    labels: PropTypes.shape({\n      multipleOptionsSelected: PropTypes.string\n    }),\n\n    /**\n     * Custom element that overrides the default Menu Item component.\n     */\n    listItemRenderer: PropTypes.func,\n\n    /**\n     * Triggered when the trigger button is clicked to open.\n     */\n    onClick: PropTypes.func,\n\n    /**\n     * Triggered when an item is selected. Passes in the option object that has been selected and a data object in the format: `{ option, optionIndex }`. The first parameter may be deprecated in the future and changed to an event for consistency. Please use the data object.\n     */\n    onSelect: PropTypes.func,\n\n    /**\n     * Triggered when a pill is removed. Passes in the option object that has been removed and a data object in the format: `{ option, optionIndex }`. The first parameter may be deprecated in the future and changed to an event for consistency. Please use the data object.\n     */\n    onPillRemove: PropTypes.func,\n\n    /**\n     * Menu item data.\n     */\n    options: PropTypes.array.isRequired,\n\n    /**\n     * Text present in trigger button if no items are selected.\n     */\n    placeholder: PropTypes.string,\n\n    /**\n     * Add styling of a required form element.\n     */\n    required: PropTypes.bool,\n\n    /**\n     * Current selected item.\n     */\n    value: PropTypes.node,\n\n    /**\n     * Initial selected item index.\n     */\n    initValueIndex: PropTypes.number\n  },\n  getDefaultProps: function getDefaultProps() {\n    return {\n      inheritTargetWidth: true,\n      placeholder: 'Select an Option',\n      checkmark: true,\n      labels: {\n        multipleOptionsSelected: 'Multiple Options Selected'\n      },\n      menuPosition: 'absolute'\n    };\n  },\n  getInitialState: function getInitialState() {\n    return {\n      focusedIndex: this.props.initValueIndex ? this.props.initValueIndex : -1,\n      selectedIndex: this.props.initValueIndex ? this.props.initValueIndex : -1,\n      selectedIndices: [],\n      currentPillLabel: ''\n    };\n  },\n  // eslint-disable-next-line camelcase, react/sort-comp\n  UNSAFE_componentWillMount: function UNSAFE_componentWillMount() {\n    // `checkProps` issues warnings to developers about properties (similar to React's built in development tools)\n    checkProps(MENU_PICKLIST, this.props);\n    this.generatedId = shortid.generate();\n\n    if (this.props.errorText) {\n      this.generatedErrorId = shortid.generate();\n    }\n\n    if (typeof window !== 'undefined') {\n      window.addEventListener('click', this.closeOnClick, false);\n    }\n\n    if (!this.props.multiple) {\n      this.setState({\n        selectedIndex: this.getIndexByValue(this.props)\n      });\n    } else {\n      var currentSelectedIndex = this.getIndexByValue(this.props);\n      var currentIndices = this.state.selectedIndices;\n\n      if (currentSelectedIndex !== -1) {\n        // eslint-disable-next-line fp/no-mutating-methods\n        currentIndices.push(currentSelectedIndex);\n      }\n\n      this.setState({\n        selectedIndices: currentIndices\n      });\n    }\n\n    this.navigableItems = getNavigableItems(this.props.options);\n  },\n  // eslint-disable-next-line camelcase, react/sort-comp\n  UNSAFE_componentWillReceiveProps: function UNSAFE_componentWillReceiveProps(nextProps) {\n    if (this.props.value !== nextProps.value || this.props.options.length !== nextProps.length) {\n      if (this.props.multiple !== true) {\n        this.setState({\n          selectedIndex: this.getIndexByValue(nextProps)\n        });\n      } else {\n        var currentSelectedIndex = this.getIndexByValue(nextProps);\n\n        if (currentSelectedIndex !== -1) {\n          var currentIndices = this.state.selectedIndices.concat(currentSelectedIndex);\n          this.setState({\n            selectedIndices: currentIndices\n          });\n        }\n      }\n    }\n\n    if (nextProps.options) {\n      this.navigableItems = getNavigableItems(nextProps.options);\n    }\n  },\n  componentWillUnmount: function componentWillUnmount() {\n    this.isUnmounting = true;\n    window.removeEventListener('click', this.closeOnClick, false);\n  },\n  getListItemId: function getListItemId(index) {\n    var menuItemId;\n\n    if (index !== undefined) {\n      var menuId = isFunction(this.getId) ? this.getId() : this.props.id;\n      menuItemId = \"\".concat(menuId, \"-item-\").concat(index);\n    }\n\n    return menuItemId;\n  },\n  getId: function getId() {\n    return this.props.id || this.generatedId;\n  },\n  getErrorId: function getErrorId() {\n    return this.props['aria-describedby'] || this.generatedErrorId;\n  },\n  getClickEventName: function getClickEventName() {\n    return \"SLDS\".concat(this.getId(), \"ClickEvent\");\n  },\n  getIndexByValue: function getIndexByValue() {\n    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props,\n        value = _ref.value,\n        options = _ref.options;\n\n    var foundIndex = -1;\n\n    if (options && options.length) {\n      options.some(function (element, index) {\n        if (element && element.value === value) {\n          foundIndex = index;\n          return true;\n        }\n\n        return false;\n      });\n    }\n\n    return foundIndex;\n  },\n  getValueByIndex: function getValueByIndex(index) {\n    return this.props.options[index];\n  },\n  getListItemRenderer: function getListItemRenderer() {\n    return this.props.listItemRenderer ? this.props.listItemRenderer : ListItemLabel;\n  },\n  setFocus: function setFocus() {\n    if (!this.isUnmounting && this.button) {\n      this.button.focus();\n    }\n  },\n  handleSelect: function handleSelect(index) {\n    if (!this.props.multiple) {\n      this.setState({\n        selectedIndex: index\n      });\n      this.handleClose();\n      this.setFocus();\n    } else {\n      var currentIndices;\n\n      if (this.state.selectedIndices.indexOf(index) === -1) {\n        currentIndices = this.state.selectedIndices.concat(index);\n      } else {\n        var deselectIndex = this.state.selectedIndices.indexOf(index);\n        currentIndices = this.state.selectedIndices; // eslint-disable-next-line fp/no-mutating-methods\n\n        currentIndices.splice(deselectIndex, 1);\n      }\n\n      this.setState({\n        selectedIndices: currentIndices\n      });\n    }\n\n    if (this.props.onSelect) {\n      var option = this.getValueByIndex(index);\n      this.props.onSelect(option, {\n        option: option,\n        optionIndex: index\n      });\n    }\n  },\n  handleClose: function handleClose() {\n    this.setState({\n      isOpen: false\n    });\n  },\n  handleClick: function handleClick(event) {\n    if (event) {\n      event.nativeEvent[this.getClickEventName()] = true;\n    }\n\n    if (!this.state.isOpen) {\n      this.setState({\n        isOpen: true\n      });\n      this.setFocus();\n\n      if (this.props.onClick) {\n        this.props.onClick(event);\n      }\n    } else {\n      this.handleClose();\n    }\n  },\n  handleMouseDown: function handleMouseDown(event) {\n    if (event) {\n      EventUtil.trapImmediate(event);\n      event.nativeEvent[this.getClickEventName()] = true;\n    }\n  },\n  handleKeyDown: function handleKeyDown(event) {\n    if (event.keyCode) {\n      if (event.keyCode === KEYS.ENTER || event.keyCode === KEYS.SPACE || event.keyCode === KEYS.DOWN || event.keyCode === KEYS.UP) {\n        EventUtil.trap(event);\n      }\n\n      if (event.keyCode !== KEYS.TAB) {\n        // The outer div with onKeyDown is overriding button onClick so we need to add it here.\n        var openMenuKeys = event.keyCode === KEYS.ENTER || event.keyCode === KEYS.DOWN || event.keyCode === KEYS.UP;\n        var isTrigger = event.target.tagName === 'BUTTON';\n\n        if (openMenuKeys && isTrigger && this.props.onClick) {\n          this.props.onClick(event);\n        }\n\n        this.handleKeyboardNavigate({\n          isOpen: this.state.isOpen || false,\n          keyCode: event.keyCode,\n          onSelect: this.handleSelect,\n          toggleOpen: this.toggleOpen\n        });\n      } else {\n        this.handleCancel();\n      }\n    }\n  },\n  handleCancel: function handleCancel() {\n    this.setFocus();\n    this.handleClose();\n  },\n  // Handling open / close toggling is optional, and a default implementation is provided for handling focus, but selection _must_ be handled\n  handleKeyboardNavigate: function handleKeyboardNavigate(_ref2) {\n    var event = _ref2.event,\n        _ref2$isOpen = _ref2.isOpen,\n        isOpen = _ref2$isOpen === void 0 ? true : _ref2$isOpen,\n        keyCode = _ref2.keyCode,\n        _ref2$onFocus = _ref2.onFocus,\n        onFocus = _ref2$onFocus === void 0 ? this.handleKeyboardFocus : _ref2$onFocus,\n        onSelect = _ref2.onSelect,\n        target = _ref2.target,\n        _ref2$toggleOpen = _ref2.toggleOpen,\n        toggleOpen = _ref2$toggleOpen === void 0 ? noop : _ref2$toggleOpen;\n    keyboardNavigate({\n      componentContext: this,\n      currentFocusedIndex: this.state.focusedIndex,\n      event: event,\n      isOpen: isOpen,\n      keyCode: keyCode,\n      navigableItems: this.navigableItems,\n      onFocus: onFocus,\n      onSelect: onSelect,\n      target: target,\n      toggleOpen: toggleOpen\n    });\n  },\n  // This is a bit of an anti-pattern, but it has the upside of being a nice default. Component authors can always override to only set state and do their own focusing in their subcomponents.\n  handleKeyboardFocus: function handleKeyboardFocus(focusedIndex) {\n    if (this.state.focusedIndex !== focusedIndex) {\n      this.setState({\n        focusedIndex: focusedIndex\n      });\n    }\n\n    var menu = isFunction(this.getMenu) ? this.getMenu() : getMenu(this);\n    var menuItem = isFunction(this.getMenuItem) ? this.getMenuItem(focusedIndex, menu) : getMenuItem(this.getListItemId(focusedIndex));\n\n    if (menuItem) {\n      this.focusMenuItem(menuItem);\n      this.scrollToMenuItem(menu, menuItem);\n    }\n  },\n  focusMenuItem: function focusMenuItem(menuItem) {\n    menuItem.getElementsByTagName('a')[0].focus();\n  },\n  scrollToMenuItem: function scrollToMenuItem(menu, menuItem) {\n    if (menu && menuItem) {\n      var menuHeight = menu.offsetHeight;\n      var menuTop = menu.scrollTop;\n      var menuItemTop = menuItem.offsetTop - menu.offsetTop;\n\n      if (menuItemTop < menuTop) {\n        menu.scrollTop = menuItemTop;\n      } else {\n        var menuBottom = menuTop + menuHeight + menu.offsetTop;\n        var menuItemBottom = menuItemTop + menuItem.offsetHeight + menu.offsetTop;\n\n        if (menuItemBottom > menuBottom) {\n          menu.scrollTop = menuItemBottom - menuHeight - menu.offsetTop;\n        }\n      }\n    }\n  },\n  closeOnClick: function closeOnClick(event) {\n    if (!event[this.getClickEventName()] && this.state.isOpen) {\n      this.handleClose();\n    }\n  },\n  toggleOpen: function toggleOpen() {\n    this.setState({\n      isOpen: !this.state.isOpen\n    });\n  },\n  saveRefToList: function saveRefToList(list) {\n    this.list = list;\n  },\n  saveRefToListItem: function saveRefToListItem(listItem, index) {\n    if (!this.listItems) {\n      this.listItems = {};\n    }\n\n    this.listItems[index] = listItem;\n\n    if (index === this.state.focusedIndex) {\n      this.handleKeyboardFocus(this.state.focusedIndex);\n    }\n  },\n  // Trigger opens, closes, and recieves focus on close\n  saveRefToTrigger: function saveRefToTrigger(trigger) {\n    this.button = trigger;\n\n    if (this.props.buttonRef) {\n      this.props.buttonRef(this.button);\n    }\n\n    if (!this.state.triggerRendered) {\n      this.setState({\n        triggerRendered: true\n      });\n    }\n  },\n  renderMenuContent: function renderMenuContent() {\n    return /*#__PURE__*/React.createElement(List, {\n      checkmark: this.props.checkmark,\n      getListItemId: this.getListItemId,\n      itemRefs: this.saveRefToListItem,\n      itemRenderer: this.getListItemRenderer(),\n      onCancel: this.handleCancel,\n      onSelect: this.handleSelect,\n      options: this.props.options,\n      ref: this.saveRefToList,\n      selectedIndex: !this.props.multiple ? this.state.selectedIndex : undefined,\n      selectedIndices: this.props.multiple ? this.state.selectedIndices : undefined,\n      triggerId: this.getId()\n    });\n  },\n  renderInlineMenu: function renderInlineMenu() {\n    return !this.props.disabled && this.state.isOpen ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"slds-dropdown slds-dropdown_left\" // inline style override\n      ,\n      style: {\n        maxHeight: '20em',\n        overflowX: 'hidden',\n        minWidth: '100%'\n      }\n    }, this.renderMenuContent()) : null;\n  },\n  renderDialog: function renderDialog() {\n    var _this = this;\n\n    return !this.props.disabled && this.state.isOpen ? /*#__PURE__*/React.createElement(Dialog, {\n      closeOnTabKey: true,\n      constrainToScrollParent: this.props.constrainToScrollParent,\n      contentsClassName: \"slds-dropdown slds-dropdown_left\",\n      context: this.context,\n      flippable: true,\n      onClose: this.handleCancel,\n      onKeyDown: this.handleKeyDown,\n      onRequestTargetElement: function onRequestTargetElement() {\n        return _this.button;\n      },\n      inheritWidthOf: this.props.inheritTargetWidth ? 'target' : 'none',\n      position: this.props.menuPosition\n    }, this.renderMenuContent()) : null;\n  },\n  renderTrigger: function renderTrigger() {\n    var isInline;\n    /* eslint-disable react/prop-types */\n\n    if (this.props.isInline) {\n      isInline = true;\n    } else if (this.props.modal !== undefined) {\n      isInline = !this.props.modal;\n    }\n    /* eslint-enable react/prop-types */\n\n\n    var inputValue;\n\n    if (this.props.multiple && this.state.selectedIndices.length === 0) {\n      inputValue = this.props.placeholder;\n    } else if (this.props.multiple && this.state.selectedIndices.length === 1) {\n      var option = this.props.options[this.state.selectedIndices];\n      inputValue = option.label;\n    } else if (this.props.multiple && this.state.selectedIndices.length > 1) {\n      inputValue = this.props.labels.multipleOptionsSelected;\n    } else {\n      var _option = this.props.options[this.state.selectedIndex];\n      inputValue = _option && _option.label ? _option.label : this.props.placeholder;\n    } // TODO: make use of <Button>\n\n\n    return (\n      /*#__PURE__*/\n      // eslint-disable-next-line jsx-a11y/no-static-element-interactions\n      React.createElement(\"div\", {\n        className: classNames('slds-picklist slds-dropdown-trigger slds-dropdown-trigger_click', {\n          'slds-is-open': this.state.isOpen\n        }, this.props.className),\n        onKeyDown: this.handleKeyDown,\n        onMouseDown: this.handleMouseDown\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        \"aria-describedby\": this.getErrorId(),\n        \"aria-expanded\": this.state.isOpen,\n        \"aria-haspopup\": \"true\",\n        className: \"slds-button slds-button_neutral slds-picklist__label\",\n        disabled: this.props.disabled,\n        id: this.getId(),\n        onClick: !this.props.disabled ? this.handleClick : undefined,\n        ref: this.saveRefToTrigger,\n        tabIndex: this.state.isOpen ? -1 : 0,\n        type: \"button\"\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"slds-truncate\"\n      }, inputValue), /*#__PURE__*/React.createElement(Icon, {\n        name: \"down\",\n        category: \"utility\"\n      })), isInline ? this.renderInlineMenu() : this.renderDialog())\n    );\n  },\n  renderPills: function renderPills() {\n    var _this2 = this;\n\n    var selectedPills = this.state.selectedIndices.map(function (selectedPill) {\n      var pillLabel = _this2.getValueByIndex(selectedPill).label;\n\n      return /*#__PURE__*/React.createElement(\"li\", {\n        className: \"slds-listbox__item\",\n        key: \"pill-\".concat(selectedPill),\n        role: \"presentation\"\n      }, /*#__PURE__*/React.createElement(Pill, {\n        eventData: {\n          item: _this2.props.options[selectedPill],\n          index: selectedPill\n        },\n        events: {\n          onRequestFocus: function onRequestFocus() {},\n          onRequestFocusOnNextPill: function onRequestFocusOnNextPill() {},\n          onRequestFocusOnPreviousPill: function onRequestFocusOnPreviousPill() {},\n          onRequestRemove: function onRequestRemove(event, data) {\n            var newData = _this2.state.selectedIndices;\n            var index = data.index; // eslint-disable-next-line fp/no-mutating-methods\n\n            newData.splice(_this2.state.selectedIndices.indexOf(index), 1);\n\n            _this2.setState({\n              selectedIndices: newData\n            });\n\n            if (_this2.props.onPillRemove) {\n              var option = _this2.getValueByIndex(index);\n\n              _this2.props.onPillRemove(option, {\n                option: option,\n                optionIndex: index\n              });\n            }\n          }\n        },\n        labels: {\n          label: pillLabel\n        }\n      }));\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"listbox-selections-unique-id\",\n      orientation: \"horizontal\",\n      role: \"listbox\"\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"slds-listbox slds-listbox_inline slds-p-top_xxx-small\",\n      role: \"group\",\n      \"aria-label\": \"Selected Options:\"\n    }, selectedPills));\n  },\n  render: function render() {\n    var _this$props = this.props,\n        className = _this$props.className,\n        errorText = _this$props.errorText,\n        label = _this$props.label,\n        required = _this$props.required;\n    var requiredElem = required ?\n    /*#__PURE__*/\n    // eslint-disable-next-line react/jsx-curly-brace-presence\n    React.createElement(\"span\", {\n      style: {\n        color: 'red'\n      }\n    }, '* ') : null;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classNames('slds-form-element', {\n        'slds-has-error': errorText\n      }, className)\n    }, this.props.label ? /*#__PURE__*/React.createElement(\"label\", {\n      className: \"slds-form-element__label\",\n      htmlFor: this.getId() // inline style override\n      ,\n      style: {\n        width: '100%'\n      }\n    }, requiredElem, label) : null, this.renderTrigger(), this.renderPills(), errorText && /*#__PURE__*/React.createElement(\"div\", {\n      id: this.getErrorId(),\n      className: \"slds-form-element__help\"\n    }, errorText));\n  }\n});\nMenuPicklist.contextType = IconSettingsContext;\nexport default MenuPicklist;\nexport { ListItemLabel };","map":{"version":3,"sources":["../../../.tmp-es/components/menu-picklist/index.jsx"],"names":["noop","itemIsSelectable","item","getNavigableItems","navigableItems","Array","items","index","text","context","document","menuItem","ReactDOM","MenuPicklist","createReactClass","displayName","propTypes","buttonRef","PropTypes","className","checkmark","disabled","errorText","id","isInline","label","labels","multipleOptionsSelected","string","listItemRenderer","onClick","onSelect","onPillRemove","options","placeholder","required","value","initValueIndex","number","getDefaultProps","inheritTargetWidth","menuPosition","getInitialState","focusedIndex","selectedIndex","selectedIndices","currentPillLabel","UNSAFE_componentWillMount","checkProps","shortid","window","currentSelectedIndex","currentIndices","UNSAFE_componentWillReceiveProps","nextProps","componentWillUnmount","getListItemId","menuId","isFunction","menuItemId","getId","getErrorId","getClickEventName","getIndexByValue","props","foundIndex","element","getValueByIndex","getListItemRenderer","setFocus","handleSelect","deselectIndex","option","optionIndex","handleClose","isOpen","handleClick","event","handleMouseDown","EventUtil","handleKeyDown","KEYS","openMenuKeys","isTrigger","keyCode","toggleOpen","handleCancel","handleKeyboardNavigate","onFocus","handleKeyboardFocus","target","keyboardNavigate","componentContext","currentFocusedIndex","menu","getMenu","getMenuItem","focusMenuItem","scrollToMenuItem","menuHeight","menuTop","menuItemTop","menuBottom","menuItemBottom","closeOnClick","saveRefToList","saveRefToListItem","saveRefToTrigger","triggerRendered","renderMenuContent","renderInlineMenu","maxHeight","overflowX","minWidth","renderDialog","renderTrigger","inputValue","classNames","renderPills","selectedPills","pillLabel","selectedPill","onRequestFocus","onRequestFocusOnNextPill","onRequestFocusOnPreviousPill","onRequestRemove","newData","data","render","requiredElem","color","width"],"mappings":"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","sourcesContent":["/* eslint-disable max-lines */\n/* eslint-disable react/no-access-state-in-setstate */\n/* eslint-disable no-param-reassign */\n/* eslint-disable prefer-destructuring */\n/* eslint-disable max-lines */\n/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\n/* eslint-disable react/prefer-es6-class */\n\n// # Picklist Component [DEPRECATED]\n\n// Implements the [Picklist design pattern](https://www.lightningdesignsystem.com/components/menus/#flavor-picklist) in React.\n// Based on SLDS v2.1.0-rc.2\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport createReactClass from 'create-react-class';\nimport PropTypes from 'prop-types';\nimport isFunction from 'lodash.isfunction';\n\n// ### classNames\n// [github.com/JedWatson/classnames](https://github.com/JedWatson/classnames)\n// This project uses `classnames`, \"a simple javascript utility for conditionally\n// joining classNames together.\"\nimport classNames from 'classnames';\n\n// ### shortid\n// [npmjs.com/package/shortid](https://www.npmjs.com/package/shortid)\n// shortid is a short, non-sequential, url-friendly, unique id generator\nimport shortid from 'shortid';\n\n// This component's `checkProps` which issues warnings to developers about properties\n// when in development mode (similar to React's built in development tools)\nimport checkProps from './check-props';\n\n// ### Children\nimport Dialog from '../utilities/dialog';\nimport Icon from '../icon';\nimport List from '../utilities/menu-list';\nimport ListItemLabel from '../utilities/menu-list/item-label';\nimport Pill from '../utilities/pill';\n\nimport EventUtil from '../../utilities/event';\nimport KeyBuffer from '../../utilities/key-buffer';\nimport keyboardNavigate from '../../utilities/keyboard-navigate';\nimport KEYS from '../../utilities/key-code';\nimport { MENU_PICKLIST } from '../../utilities/constants';\nimport { IconSettingsContext } from '../icon-settings';\n\nconst noop = () => {};\n\nconst itemIsSelectable = (item) =>\n\titem.type !== 'header' && item.type !== 'divider' && !item.disabled;\n\nconst getNavigableItems = (items) => {\n\tconst navigableItems = [];\n\tnavigableItems.indexes = [];\n\tnavigableItems.keyBuffer = new KeyBuffer();\n\n\tif (Array.isArray(items)) {\n\t\titems.forEach((item, index) => {\n\t\t\tif (itemIsSelectable(item)) {\n\t\t\t\t// eslint-disable-next-line fp/no-mutating-methods\n\t\t\t\tnavigableItems.push({\n\t\t\t\t\tindex,\n\t\t\t\t\ttext: `${item.label}`.toLowerCase(),\n\t\t\t\t});\n\n\t\t\t\t// eslint-disable-next-line fp/no-mutating-methods\n\t\t\t\tnavigableItems.indexes.push(index);\n\t\t\t}\n\t\t});\n\t}\n\n\treturn navigableItems;\n};\n\nfunction getMenuItem(menuItemId, context = document) {\n\tlet menuItem;\n\n\tif (menuItemId) {\n\t\tmenuItem = context.getElementById(menuItemId);\n\t}\n\n\treturn menuItem;\n}\n\nfunction getMenu(componentRef) {\n\treturn ReactDOM.findDOMNode(componentRef).querySelector('ul.dropdown__list'); // eslint-disable-line react/no-find-dom-node\n}\n\n/**\n * ** MenuPicklist is deprecated. Please use a read-only Combobox instead.**\n *\n * The MenuPicklist component is a variant of the Lightning Design System Menu component.\n */\nconst MenuPicklist = createReactClass({\n\t// ### Display Name\n\t// Always use the canonical component name as the React display name.\n\tdisplayName: MENU_PICKLIST,\n\n\t// ### Prop Types\n\tpropTypes: {\n\t\t/**\n\t\t * Callback that passes in the DOM reference of the `<button>` DOM node within this component. Primary use is to allow `focus` to be called. You should still test if the node exists, since rendering is asynchronous. `buttonRef={(component) => { if(component) console.log(component); }}`\n\t\t */\n\t\tbuttonRef: PropTypes.func,\n\t\tclassName: PropTypes.string,\n\t\t/**\n\t\t * If true, renders checkmark icon on the selected Menu Item.\n\t\t */\n\t\tcheckmark: PropTypes.bool,\n\t\tdisabled: PropTypes.bool,\n\t\t/**\n\t\t * Message to display when the input is in an error state. When this is present, also visually highlights the component as in error.\n\t\t */\n\t\terrorText: PropTypes.string,\n\t\t/**\n\t\t * A unique ID is needed in order to support keyboard navigation, ARIA support, and connect the dropdown to the triggering button.\n\t\t */\n\t\tid: PropTypes.string,\n\t\t/**\n\t\t * Renders menu within the wrapping trigger as a sibling of the button. By default, you will have an absolutely positioned container at an elevated z-index.\n\t\t */\n\t\tisInline: PropTypes.bool,\n\t\t/**\n\t\t * Form element label\n\t\t */\n\t\tlabel: PropTypes.string,\n\t\t/**\n\t\t * **Text labels for internationalization**\n\t\t * This object is merged with the default props object on every render.\n\t\t * * `multipleOptionsSelected`: Text to be used when multiple items are selected. \"2 Options Selected\" is a good pattern to use.\n\t\t */\n\t\tlabels: PropTypes.shape({\n\t\t\tmultipleOptionsSelected: PropTypes.string,\n\t\t}),\n\t\t/**\n\t\t * Custom element that overrides the default Menu Item component.\n\t\t */\n\t\tlistItemRenderer: PropTypes.func,\n\t\t/**\n\t\t * Triggered when the trigger button is clicked to open.\n\t\t */\n\t\tonClick: PropTypes.func,\n\t\t/**\n\t\t * Triggered when an item is selected. Passes in the option object that has been selected and a data object in the format: `{ option, optionIndex }`. The first parameter may be deprecated in the future and changed to an event for consistency. Please use the data object.\n\t\t */\n\t\tonSelect: PropTypes.func,\n\t\t/**\n\t\t * Triggered when a pill is removed. Passes in the option object that has been removed and a data object in the format: `{ option, optionIndex }`. The first parameter may be deprecated in the future and changed to an event for consistency. Please use the data object.\n\t\t */\n\t\tonPillRemove: PropTypes.func,\n\t\t/**\n\t\t * Menu item data.\n\t\t */\n\t\toptions: PropTypes.array.isRequired,\n\t\t/**\n\t\t * Text present in trigger button if no items are selected.\n\t\t */\n\t\tplaceholder: PropTypes.string,\n\t\t/**\n\t\t * Add styling of a required form element.\n\t\t */\n\t\trequired: PropTypes.bool,\n\t\t/**\n\t\t * Current selected item.\n\t\t */\n\t\tvalue: PropTypes.node,\n\t\t/**\n\t\t * Initial selected item index.\n\t\t */\n\t\tinitValueIndex: PropTypes.number,\n\t},\n\n\tgetDefaultProps() {\n\t\treturn {\n\t\t\tinheritTargetWidth: true,\n\t\t\tplaceholder: 'Select an Option',\n\t\t\tcheckmark: true,\n\t\t\tlabels: {\n\t\t\t\tmultipleOptionsSelected: 'Multiple Options Selected',\n\t\t\t},\n\t\t\tmenuPosition: 'absolute',\n\t\t};\n\t},\n\n\tgetInitialState() {\n\t\treturn {\n\t\t\tfocusedIndex: this.props.initValueIndex ? this.props.initValueIndex : -1,\n\t\t\tselectedIndex: this.props.initValueIndex ? this.props.initValueIndex : -1,\n\t\t\tselectedIndices: [],\n\t\t\tcurrentPillLabel: '',\n\t\t};\n\t},\n\n\t// eslint-disable-next-line camelcase, react/sort-comp\n\tUNSAFE_componentWillMount() {\n\t\t// `checkProps` issues warnings to developers about properties (similar to React's built in development tools)\n\t\tcheckProps(MENU_PICKLIST, this.props);\n\n\t\tthis.generatedId = shortid.generate();\n\t\tif (this.props.errorText) {\n\t\t\tthis.generatedErrorId = shortid.generate();\n\t\t}\n\n\t\tif (typeof window !== 'undefined') {\n\t\t\twindow.addEventListener('click', this.closeOnClick, false);\n\t\t}\n\n\t\tif (!this.props.multiple) {\n\t\t\tthis.setState({\n\t\t\t\tselectedIndex: this.getIndexByValue(this.props),\n\t\t\t});\n\t\t} else {\n\t\t\tconst currentSelectedIndex = this.getIndexByValue(this.props);\n\t\t\tconst currentIndices = this.state.selectedIndices;\n\t\t\tif (currentSelectedIndex !== -1) {\n\t\t\t\t// eslint-disable-next-line fp/no-mutating-methods\n\t\t\t\tcurrentIndices.push(currentSelectedIndex);\n\t\t\t}\n\t\t\tthis.setState({\n\t\t\t\tselectedIndices: currentIndices,\n\t\t\t});\n\t\t}\n\n\t\tthis.navigableItems = getNavigableItems(this.props.options);\n\t},\n\n\t// eslint-disable-next-line camelcase, react/sort-comp\n\tUNSAFE_componentWillReceiveProps(nextProps) {\n\t\tif (\n\t\t\tthis.props.value !== nextProps.value ||\n\t\t\tthis.props.options.length !== nextProps.length\n\t\t) {\n\t\t\tif (this.props.multiple !== true) {\n\t\t\t\tthis.setState({\n\t\t\t\t\tselectedIndex: this.getIndexByValue(nextProps),\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tconst currentSelectedIndex = this.getIndexByValue(nextProps);\n\t\t\t\tif (currentSelectedIndex !== -1) {\n\t\t\t\t\tconst currentIndices = this.state.selectedIndices.concat(\n\t\t\t\t\t\tcurrentSelectedIndex\n\t\t\t\t\t);\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tselectedIndices: currentIndices,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (nextProps.options) {\n\t\t\tthis.navigableItems = getNavigableItems(nextProps.options);\n\t\t}\n\t},\n\n\tcomponentWillUnmount() {\n\t\tthis.isUnmounting = true;\n\t\twindow.removeEventListener('click', this.closeOnClick, false);\n\t},\n\n\tgetListItemId(index) {\n\t\tlet menuItemId;\n\t\tif (index !== undefined) {\n\t\t\tconst menuId = isFunction(this.getId) ? this.getId() : this.props.id;\n\t\t\tmenuItemId = `${menuId}-item-${index}`;\n\t\t}\n\t\treturn menuItemId;\n\t},\n\n\tgetId() {\n\t\treturn this.props.id || this.generatedId;\n\t},\n\n\tgetErrorId() {\n\t\treturn this.props['aria-describedby'] || this.generatedErrorId;\n\t},\n\n\tgetClickEventName() {\n\t\treturn `SLDS${this.getId()}ClickEvent`;\n\t},\n\n\tgetIndexByValue({ value, options } = this.props) {\n\t\tlet foundIndex = -1;\n\n\t\tif (options && options.length) {\n\t\t\toptions.some((element, index) => {\n\t\t\t\tif (element && element.value === value) {\n\t\t\t\t\tfoundIndex = index;\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\n\t\t\t\treturn false;\n\t\t\t});\n\t\t}\n\n\t\treturn foundIndex;\n\t},\n\n\tgetValueByIndex(index) {\n\t\treturn this.props.options[index];\n\t},\n\n\tgetListItemRenderer() {\n\t\treturn this.props.listItemRenderer\n\t\t\t? this.props.listItemRenderer\n\t\t\t: ListItemLabel;\n\t},\n\n\tsetFocus() {\n\t\tif (!this.isUnmounting && this.button) {\n\t\t\tthis.button.focus();\n\t\t}\n\t},\n\n\thandleSelect(index) {\n\t\tif (!this.props.multiple) {\n\t\t\tthis.setState({ selectedIndex: index });\n\t\t\tthis.handleClose();\n\t\t\tthis.setFocus();\n\t\t} else {\n\t\t\tlet currentIndices;\n\n\t\t\tif (this.state.selectedIndices.indexOf(index) === -1) {\n\t\t\t\tcurrentIndices = this.state.selectedIndices.concat(index);\n\t\t\t} else {\n\t\t\t\tconst deselectIndex = this.state.selectedIndices.indexOf(index);\n\t\t\t\tcurrentIndices = this.state.selectedIndices;\n\t\t\t\t// eslint-disable-next-line fp/no-mutating-methods\n\t\t\t\tcurrentIndices.splice(deselectIndex, 1);\n\t\t\t}\n\n\t\t\tthis.setState({\n\t\t\t\tselectedIndices: currentIndices,\n\t\t\t});\n\t\t}\n\n\t\tif (this.props.onSelect) {\n\t\t\tconst option = this.getValueByIndex(index);\n\t\t\tthis.props.onSelect(option, { option, optionIndex: index });\n\t\t}\n\t},\n\n\thandleClose() {\n\t\tthis.setState({ isOpen: false });\n\t},\n\n\thandleClick(event) {\n\t\tif (event) {\n\t\t\tevent.nativeEvent[this.getClickEventName()] = true;\n\t\t}\n\n\t\tif (!this.state.isOpen) {\n\t\t\tthis.setState({ isOpen: true });\n\t\t\tthis.setFocus();\n\n\t\t\tif (this.props.onClick) {\n\t\t\t\tthis.props.onClick(event);\n\t\t\t}\n\t\t} else {\n\t\t\tthis.handleClose();\n\t\t}\n\t},\n\n\thandleMouseDown(event) {\n\t\tif (event) {\n\t\t\tEventUtil.trapImmediate(event);\n\t\t\tevent.nativeEvent[this.getClickEventName()] = true;\n\t\t}\n\t},\n\n\thandleKeyDown(event) {\n\t\tif (event.keyCode) {\n\t\t\tif (\n\t\t\t\tevent.keyCode === KEYS.ENTER ||\n\t\t\t\tevent.keyCode === KEYS.SPACE ||\n\t\t\t\tevent.keyCode === KEYS.DOWN ||\n\t\t\t\tevent.keyCode === KEYS.UP\n\t\t\t) {\n\t\t\t\tEventUtil.trap(event);\n\t\t\t}\n\n\t\t\tif (event.keyCode !== KEYS.TAB) {\n\t\t\t\t// The outer div with onKeyDown is overriding button onClick so we need to add it here.\n\t\t\t\tconst openMenuKeys =\n\t\t\t\t\tevent.keyCode === KEYS.ENTER ||\n\t\t\t\t\tevent.keyCode === KEYS.DOWN ||\n\t\t\t\t\tevent.keyCode === KEYS.UP;\n\t\t\t\tconst isTrigger = event.target.tagName === 'BUTTON';\n\t\t\t\tif (openMenuKeys && isTrigger && this.props.onClick) {\n\t\t\t\t\tthis.props.onClick(event);\n\t\t\t\t}\n\n\t\t\t\tthis.handleKeyboardNavigate({\n\t\t\t\t\tisOpen: this.state.isOpen || false,\n\t\t\t\t\tkeyCode: event.keyCode,\n\t\t\t\t\tonSelect: this.handleSelect,\n\t\t\t\t\ttoggleOpen: this.toggleOpen,\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.handleCancel();\n\t\t\t}\n\t\t}\n\t},\n\n\thandleCancel() {\n\t\tthis.setFocus();\n\t\tthis.handleClose();\n\t},\n\n\t// Handling open / close toggling is optional, and a default implementation is provided for handling focus, but selection _must_ be handled\n\thandleKeyboardNavigate({\n\t\tevent,\n\t\tisOpen = true,\n\t\tkeyCode,\n\t\tonFocus = this.handleKeyboardFocus,\n\t\tonSelect,\n\t\ttarget,\n\t\ttoggleOpen = noop,\n\t}) {\n\t\tkeyboardNavigate({\n\t\t\tcomponentContext: this,\n\t\t\tcurrentFocusedIndex: this.state.focusedIndex,\n\t\t\tevent,\n\t\t\tisOpen,\n\t\t\tkeyCode,\n\t\t\tnavigableItems: this.navigableItems,\n\t\t\tonFocus,\n\t\t\tonSelect,\n\t\t\ttarget,\n\t\t\ttoggleOpen,\n\t\t});\n\t},\n\t// This is a bit of an anti-pattern, but it has the upside of being a nice default. Component authors can always override to only set state and do their own focusing in their subcomponents.\n\thandleKeyboardFocus(focusedIndex) {\n\t\tif (this.state.focusedIndex !== focusedIndex) {\n\t\t\tthis.setState({ focusedIndex });\n\t\t}\n\t\tconst menu = isFunction(this.getMenu) ? this.getMenu() : getMenu(this);\n\t\tconst menuItem = isFunction(this.getMenuItem)\n\t\t\t? this.getMenuItem(focusedIndex, menu)\n\t\t\t: getMenuItem(this.getListItemId(focusedIndex));\n\t\tif (menuItem) {\n\t\t\tthis.focusMenuItem(menuItem);\n\t\t\tthis.scrollToMenuItem(menu, menuItem);\n\t\t}\n\t},\n\tfocusMenuItem(menuItem) {\n\t\tmenuItem.getElementsByTagName('a')[0].focus();\n\t},\n\tscrollToMenuItem(menu, menuItem) {\n\t\tif (menu && menuItem) {\n\t\t\tconst menuHeight = menu.offsetHeight;\n\t\t\tconst menuTop = menu.scrollTop;\n\t\t\tconst menuItemTop = menuItem.offsetTop - menu.offsetTop;\n\t\t\tif (menuItemTop < menuTop) {\n\t\t\t\tmenu.scrollTop = menuItemTop;\n\t\t\t} else {\n\t\t\t\tconst menuBottom = menuTop + menuHeight + menu.offsetTop;\n\t\t\t\tconst menuItemBottom =\n\t\t\t\t\tmenuItemTop + menuItem.offsetHeight + menu.offsetTop;\n\t\t\t\tif (menuItemBottom > menuBottom) {\n\t\t\t\t\tmenu.scrollTop = menuItemBottom - menuHeight - menu.offsetTop;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\tcloseOnClick(event) {\n\t\tif (!event[this.getClickEventName()] && this.state.isOpen) {\n\t\t\tthis.handleClose();\n\t\t}\n\t},\n\n\ttoggleOpen() {\n\t\tthis.setState({ isOpen: !this.state.isOpen });\n\t},\n\n\tsaveRefToList(list) {\n\t\tthis.list = list;\n\t},\n\n\tsaveRefToListItem(listItem, index) {\n\t\tif (!this.listItems) {\n\t\t\tthis.listItems = {};\n\t\t}\n\n\t\tthis.listItems[index] = listItem;\n\n\t\tif (index === this.state.focusedIndex) {\n\t\t\tthis.handleKeyboardFocus(this.state.focusedIndex);\n\t\t}\n\t},\n\n\t// Trigger opens, closes, and recieves focus on close\n\tsaveRefToTrigger(trigger) {\n\t\tthis.button = trigger;\n\t\tif (this.props.buttonRef) {\n\t\t\tthis.props.buttonRef(this.button);\n\t\t}\n\n\t\tif (!this.state.triggerRendered) {\n\t\t\tthis.setState({ triggerRendered: true });\n\t\t}\n\t},\n\n\trenderMenuContent() {\n\t\treturn (\n\t\t\t<List\n\t\t\t\tcheckmark={this.props.checkmark}\n\t\t\t\tgetListItemId={this.getListItemId}\n\t\t\t\titemRefs={this.saveRefToListItem}\n\t\t\t\titemRenderer={this.getListItemRenderer()}\n\t\t\t\tonCancel={this.handleCancel}\n\t\t\t\tonSelect={this.handleSelect}\n\t\t\t\toptions={this.props.options}\n\t\t\t\tref={this.saveRefToList}\n\t\t\t\tselectedIndex={\n\t\t\t\t\t!this.props.multiple ? this.state.selectedIndex : undefined\n\t\t\t\t}\n\t\t\t\tselectedIndices={\n\t\t\t\t\tthis.props.multiple ? this.state.selectedIndices : undefined\n\t\t\t\t}\n\t\t\t\ttriggerId={this.getId()}\n\t\t\t/>\n\t\t);\n\t},\n\n\trenderInlineMenu() {\n\t\treturn !this.props.disabled && this.state.isOpen ? (\n\t\t\t<div\n\t\t\t\tclassName=\"slds-dropdown slds-dropdown_left\"\n\t\t\t\t// inline style override\n\t\t\t\tstyle={{\n\t\t\t\t\tmaxHeight: '20em',\n\t\t\t\t\toverflowX: 'hidden',\n\t\t\t\t\tminWidth: '100%',\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{this.renderMenuContent()}\n\t\t\t</div>\n\t\t) : null;\n\t},\n\n\trenderDialog() {\n\t\treturn !this.props.disabled && this.state.isOpen ? (\n\t\t\t<Dialog\n\t\t\t\tcloseOnTabKey\n\t\t\t\tconstrainToScrollParent={this.props.constrainToScrollParent}\n\t\t\t\tcontentsClassName=\"slds-dropdown slds-dropdown_left\"\n\t\t\t\tcontext={this.context}\n\t\t\t\tflippable\n\t\t\t\tonClose={this.handleCancel}\n\t\t\t\tonKeyDown={this.handleKeyDown}\n\t\t\t\tonRequestTargetElement={() => this.button}\n\t\t\t\tinheritWidthOf={this.props.inheritTargetWidth ? 'target' : 'none'}\n\t\t\t\tposition={this.props.menuPosition}\n\t\t\t>\n\t\t\t\t{this.renderMenuContent()}\n\t\t\t</Dialog>\n\t\t) : null;\n\t},\n\n\trenderTrigger() {\n\t\tlet isInline;\n\t\t/* eslint-disable react/prop-types */\n\t\tif (this.props.isInline) {\n\t\t\tisInline = true;\n\t\t} else if (this.props.modal !== undefined) {\n\t\t\tisInline = !this.props.modal;\n\t\t}\n\t\t/* eslint-enable react/prop-types */\n\n\t\tlet inputValue;\n\t\tif (this.props.multiple && this.state.selectedIndices.length === 0) {\n\t\t\tinputValue = this.props.placeholder;\n\t\t} else if (this.props.multiple && this.state.selectedIndices.length === 1) {\n\t\t\tconst option = this.props.options[this.state.selectedIndices];\n\t\t\tinputValue = option.label;\n\t\t} else if (this.props.multiple && this.state.selectedIndices.length > 1) {\n\t\t\tinputValue = this.props.labels.multipleOptionsSelected;\n\t\t} else {\n\t\t\tconst option = this.props.options[this.state.selectedIndex];\n\t\t\tinputValue =\n\t\t\t\toption && option.label ? option.label : this.props.placeholder;\n\t\t}\n\n\t\t// TODO: make use of <Button>\n\t\treturn (\n\t\t\t// eslint-disable-next-line jsx-a11y/no-static-element-interactions\n\t\t\t<div\n\t\t\t\tclassName={classNames(\n\t\t\t\t\t'slds-picklist slds-dropdown-trigger slds-dropdown-trigger_click',\n\t\t\t\t\t{ 'slds-is-open': this.state.isOpen },\n\t\t\t\t\tthis.props.className\n\t\t\t\t)}\n\t\t\t\tonKeyDown={this.handleKeyDown}\n\t\t\t\tonMouseDown={this.handleMouseDown}\n\t\t\t>\n\t\t\t\t<button\n\t\t\t\t\taria-describedby={this.getErrorId()}\n\t\t\t\t\taria-expanded={this.state.isOpen}\n\t\t\t\t\taria-haspopup=\"true\"\n\t\t\t\t\tclassName=\"slds-button slds-button_neutral slds-picklist__label\"\n\t\t\t\t\tdisabled={this.props.disabled}\n\t\t\t\t\tid={this.getId()}\n\t\t\t\t\tonClick={!this.props.disabled ? this.handleClick : undefined}\n\t\t\t\t\tref={this.saveRefToTrigger}\n\t\t\t\t\ttabIndex={this.state.isOpen ? -1 : 0}\n\t\t\t\t\ttype=\"button\"\n\t\t\t\t>\n\t\t\t\t\t<span className=\"slds-truncate\">{inputValue}</span>\n\t\t\t\t\t<Icon name=\"down\" category=\"utility\" />\n\t\t\t\t</button>\n\t\t\t\t{isInline ? this.renderInlineMenu() : this.renderDialog()}\n\t\t\t</div>\n\t\t);\n\t},\n\n\trenderPills() {\n\t\tconst selectedPills = this.state.selectedIndices.map((selectedPill) => {\n\t\t\tconst pillLabel = this.getValueByIndex(selectedPill).label;\n\t\t\treturn (\n\t\t\t\t<li\n\t\t\t\t\tclassName=\"slds-listbox__item\"\n\t\t\t\t\tkey={`pill-${selectedPill}`}\n\t\t\t\t\trole=\"presentation\"\n\t\t\t\t>\n\t\t\t\t\t<Pill\n\t\t\t\t\t\teventData={{\n\t\t\t\t\t\t\titem: this.props.options[selectedPill],\n\t\t\t\t\t\t\tindex: selectedPill,\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tevents={{\n\t\t\t\t\t\t\tonRequestFocus: () => {},\n\t\t\t\t\t\t\tonRequestFocusOnNextPill: () => {},\n\t\t\t\t\t\t\tonRequestFocusOnPreviousPill: () => {},\n\t\t\t\t\t\t\tonRequestRemove: (event, data) => {\n\t\t\t\t\t\t\t\tconst newData = this.state.selectedIndices;\n\t\t\t\t\t\t\t\tconst index = data.index;\n\t\t\t\t\t\t\t\t// eslint-disable-next-line fp/no-mutating-methods\n\t\t\t\t\t\t\t\tnewData.splice(this.state.selectedIndices.indexOf(index), 1);\n\t\t\t\t\t\t\t\tthis.setState({ selectedIndices: newData });\n\n\t\t\t\t\t\t\t\tif (this.props.onPillRemove) {\n\t\t\t\t\t\t\t\t\tconst option = this.getValueByIndex(index);\n\t\t\t\t\t\t\t\t\tthis.props.onPillRemove(option, {\n\t\t\t\t\t\t\t\t\t\toption,\n\t\t\t\t\t\t\t\t\t\toptionIndex: index,\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tlabels={{\n\t\t\t\t\t\t\tlabel: pillLabel,\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t</li>\n\t\t\t);\n\t\t});\n\t\treturn (\n\t\t\t<div\n\t\t\t\tid=\"listbox-selections-unique-id\"\n\t\t\t\torientation=\"horizontal\"\n\t\t\t\trole=\"listbox\"\n\t\t\t>\n\t\t\t\t<ul\n\t\t\t\t\tclassName=\"slds-listbox slds-listbox_inline slds-p-top_xxx-small\"\n\t\t\t\t\trole=\"group\"\n\t\t\t\t\taria-label=\"Selected Options:\"\n\t\t\t\t>\n\t\t\t\t\t{selectedPills}\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t);\n\t},\n\n\trender() {\n\t\tconst { className, errorText, label, required } = this.props;\n\n\t\tconst requiredElem = required ? (\n\t\t\t// eslint-disable-next-line react/jsx-curly-brace-presence\n\t\t\t<span style={{ color: 'red' }}>{'* '}</span>\n\t\t) : null;\n\n\t\treturn (\n\t\t\t<div\n\t\t\t\tclassName={classNames(\n\t\t\t\t\t'slds-form-element',\n\t\t\t\t\t{\n\t\t\t\t\t\t'slds-has-error': errorText,\n\t\t\t\t\t},\n\t\t\t\t\tclassName\n\t\t\t\t)}\n\t\t\t>\n\t\t\t\t{this.props.label ? (\n\t\t\t\t\t<label\n\t\t\t\t\t\tclassName=\"slds-form-element__label\"\n\t\t\t\t\t\thtmlFor={this.getId()}\n\t\t\t\t\t\t// inline style override\n\t\t\t\t\t\tstyle={{ width: '100%' }}\n\t\t\t\t\t>\n\t\t\t\t\t\t{requiredElem}\n\t\t\t\t\t\t{label}\n\t\t\t\t\t</label>\n\t\t\t\t) : null}\n\t\t\t\t{this.renderTrigger()}\n\t\t\t\t{this.renderPills()}\n\t\t\t\t{errorText && (\n\t\t\t\t\t<div id={this.getErrorId()} className=\"slds-form-element__help\">\n\t\t\t\t\t\t{errorText}\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t);\n\t},\n});\n\nMenuPicklist.contextType = IconSettingsContext;\nexport default MenuPicklist;\nexport { ListItemLabel };\n"]},"metadata":{},"sourceType":"module"}