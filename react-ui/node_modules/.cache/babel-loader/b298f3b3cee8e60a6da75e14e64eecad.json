{"ast":null,"code":"/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n// # Tabs Component\n// Implements the [Tabs design pattern](https://www.lightningdesignsystem.com/components/tabs/) in React.\n// ## Dependencies\n// ### React\nimport React from 'react';\nimport PropTypes from 'prop-types'; // ### classNames\n\nimport classNames from 'classnames';\nimport { TABS_LIST } from '../../../utilities/constants';\n\nvar TabsList = function TabsList(_ref) {\n  var id = _ref.id,\n      className = _ref.className,\n      children = _ref.children,\n      variant = _ref.variant;\n  return /*#__PURE__*/React.createElement(\"ul\", {\n    id: \"\".concat(id, \"-slds-tabs__nav\"),\n    className: classNames(className, {\n      'slds-tabs_default__nav': variant === 'default',\n      'slds-tabs_scoped__nav': variant === 'scoped',\n      'slds-vertical-tabs__nav': variant === 'vertical'\n    }),\n    role: \"tablist\",\n    \"aria-orientation\": variant === 'vertical' ? 'vertical' : undefined\n  }, children);\n};\n\nTabsList.displayName = TABS_LIST;\nTabsList.propTypes = {\n  /**\n   * Inherits the `id` from the parent `<Tabs />` component and appends `-tabs__nav`. Becomes the HTML `id` attribute of UL element that has the class `.slds-tabs_default__nav` on it.\n   */\n  id: PropTypes.string,\n\n  /**\n   * Class names to be added to the tabs list element.\n   */\n  className: PropTypes.oneOfType([PropTypes.array, PropTypes.object, PropTypes.string]),\n\n  /**\n   * The `children` are the actual tabs to be rendered as `li` elements. They get created by [tabs/index.jsx](./index.jsx) in the `renderTabsList` function.\n   */\n  children: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n\n  /**\n   * If the Tabs should be scoped, vertical, or default (default value)\n   */\n  variant: PropTypes.oneOf(['default', 'scoped', 'vertical'])\n};\nexport default TabsList;","map":{"version":3,"sources":["../../../../.tmp-es/components/tabs/private/tabs-list.jsx"],"names":["TabsList","id","className","children","variant","classNames","undefined","PropTypes"],"mappings":"AAAA;;AACA;AAEA;AAEA;AAEA;AAEA;AACA,OAAA,KAAA,MAAA,OAAA;AACA,OAAA,SAAA,MAAA,YAAA,C,CAEA;;AACA,OAAA,UAAA,MAAA,YAAA;AACA,SAAA,SAAA,QAAA,8BAAA;;AAEA,IAAMA,QAAQ,GAAG,SAAXA,QAAW,CAAA,IAAA,EAAA;AAAA,MAAGC,EAAH,GAAA,IAAA,CAAA,EAAA;AAAA,MAAOC,SAAP,GAAA,IAAA,CAAA,SAAA;AAAA,MAAkBC,QAAlB,GAAA,IAAA,CAAA,QAAA;AAAA,MAA4BC,OAA5B,GAAA,IAAA,CAAA,OAAA;AAAA,SAAA,aAChB,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA;AACC,IAAA,EAAE,EAAA,GAAA,MAAA,CAAA,EAAA,EADH,iBACG,CADH;AAEC,IAAA,SAAS,EAAEC,UAAU,CAAA,SAAA,EAAY;AAChC,gCAA0BD,OAAO,KADD,SAAA;AAEhC,+BAAyBA,OAAO,KAFA,QAAA;AAGhC,iCAA2BA,OAAO,KAAK;AAHP,KAAZ,CAFtB;AAOC,IAAA,IAAI,EAPL,SAAA;AAQC,wBAAkBA,OAAO,KAAPA,UAAAA,GAAAA,UAAAA,GAAsCE;AARzD,GAAA,EADgB,QAChB,CADgB;AAAjB,CAAA;;AAeAN,QAAQ,CAARA,WAAAA,GAAAA,SAAAA;AAEAA,QAAQ,CAARA,SAAAA,GAAqB;AACpB;AACD;AACA;AACCC,EAAAA,EAAE,EAAEM,SAAS,CAJO,MAAA;;AAMpB;AACD;AACA;AACCL,EAAAA,SAAS,EAAEK,SAAS,CAATA,SAAAA,CAAoB,CAC9BA,SAAS,CADqB,KAAA,EAE9BA,SAAS,CAFqB,MAAA,EAG9BA,SAAS,CAZU,MASW,CAApBA,CATS;;AAepB;AACD;AACA;AACCJ,EAAAA,QAAQ,EAAEI,SAAS,CAATA,SAAAA,CAAoB,CAACA,SAAS,CAAV,MAAA,EAAmBA,SAAS,CAlBtC,KAkBU,CAApBA,CAlBU;;AAoBpB;AACD;AACA;AACCH,EAAAA,OAAO,EAAEG,SAAS,CAATA,KAAAA,CAAgB,CAAA,SAAA,EAAA,QAAA,EAAhBA,UAAgB,CAAhBA;AAvBW,CAArBP;AA0BA,eAAA,QAAA","sourcesContent":["/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\n// # Tabs Component\n\n// Implements the [Tabs design pattern](https://www.lightningdesignsystem.com/components/tabs/) in React.\n\n// ## Dependencies\n\n// ### React\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\n// ### classNames\nimport classNames from 'classnames';\nimport { TABS_LIST } from '../../../utilities/constants';\n\nconst TabsList = ({ id, className, children, variant }) => (\n\t<ul\n\t\tid={`${id}-slds-tabs__nav`}\n\t\tclassName={classNames(className, {\n\t\t\t'slds-tabs_default__nav': variant === 'default',\n\t\t\t'slds-tabs_scoped__nav': variant === 'scoped',\n\t\t\t'slds-vertical-tabs__nav': variant === 'vertical',\n\t\t})}\n\t\trole=\"tablist\"\n\t\taria-orientation={variant === 'vertical' ? 'vertical' : undefined}\n\t>\n\t\t{children}\n\t</ul>\n);\n\nTabsList.displayName = TABS_LIST;\n\nTabsList.propTypes = {\n\t/**\n\t * Inherits the `id` from the parent `<Tabs />` component and appends `-tabs__nav`. Becomes the HTML `id` attribute of UL element that has the class `.slds-tabs_default__nav` on it.\n\t */\n\tid: PropTypes.string,\n\n\t/**\n\t * Class names to be added to the tabs list element.\n\t */\n\tclassName: PropTypes.oneOfType([\n\t\tPropTypes.array,\n\t\tPropTypes.object,\n\t\tPropTypes.string,\n\t]),\n\n\t/**\n\t * The `children` are the actual tabs to be rendered as `li` elements. They get created by [tabs/index.jsx](./index.jsx) in the `renderTabsList` function.\n\t */\n\tchildren: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n\n\t/**\n\t * If the Tabs should be scoped, vertical, or default (default value)\n\t */\n\tvariant: PropTypes.oneOf(['default', 'scoped', 'vertical']),\n};\n\nexport default TabsList;\n"]},"metadata":{},"sourceType":"module"}