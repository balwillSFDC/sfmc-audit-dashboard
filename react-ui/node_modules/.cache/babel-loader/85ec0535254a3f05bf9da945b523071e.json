{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n// Implements the [Button Group design pattern](https://lightningdesignsystem.com/components/button-groups/) in React.\n// Based on SLDS v2.1.1\n\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport assign from 'lodash.assign'; // ### shortid\n// [npmjs.com/package/shortid](https://www.npmjs.com/package/shortid)\n// shortid is a short, non-sequential, url-friendly, unique id generator\n\nimport shortid from 'shortid';\nimport { BUTTON_GROUP } from '../../utilities/constants';\nvar propTypes = {\n  /**\n   * Children are expected to be components. If last button triggers a dropdown menu, use Dropdown instead of Button. _Tested with snapshot testing._\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * CSS classes added to `slds-button-group` or `slds-checkbox_button-group` tag\n   */\n  className: PropTypes.oneOfType([PropTypes.array, PropTypes.object, PropTypes.string]),\n\n  /**\n   * If the `labels.label` prop is set, a `.slds-form-element` classed fieldset element is added as a container. This prop applies classes to that element\n   */\n  classNameContainer: PropTypes.oneOfType([PropTypes.array, PropTypes.object, PropTypes.string]),\n\n  /**\n   * HTML id for component.\n   */\n  id: PropTypes.string,\n\n  /**\n   * **Text labels for internationalization**\n   * This object is merged with the default props object on every render.\n   * * `error`: Message to display when any of Checkboxes are in an error state. _Tested with snapshot testing._\n   * * `label`: This label appears above the button group. _Tested with snapshot testing._\n   */\n  labels: PropTypes.shape({\n    error: PropTypes.string,\n    label: PropTypes.string\n  }),\n\n  /**\n   * Use checkbox variant for \"Checkbox Button Group\" styling and add Checkbox components as children _Tested with snapshot testing._\n   */\n  variant: PropTypes.oneOf(['checkbox', 'list'])\n};\nvar defaultProps = {\n  labels: {}\n};\n/**\n * The ButtonGroup component wraps other components (ie. Button, MenuDropdown, PopoverTooltip, Checkboxes, etc).\n */\n\nvar ButtonGroup = /*#__PURE__*/function (_React$Component) {\n  _inherits(ButtonGroup, _React$Component);\n\n  var _super = _createSuper(ButtonGroup);\n\n  function ButtonGroup(props) {\n    var _this;\n\n    _classCallCheck(this, ButtonGroup);\n\n    _this = _super.call(this, props);\n    _this.generatedId = shortid.generate();\n    return _this;\n  }\n\n  _createClass(ButtonGroup, [{\n    key: \"getId\",\n    value: function getId() {\n      return this.props.id || this.generatedId;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this; // Merge objects of strings with their default object\n\n\n      var labels = assign({}, defaultProps.labels, this.props.labels);\n      var zeroIndexLength = React.Children.count(this.props.children) - 1;\n      var children = this.props.children;\n\n      if (zeroIndexLength > 0) {\n        children = React.Children.map(this.props.children, function (child, index) {\n          var newChild;\n\n          if (index === zeroIndexLength) {\n            newChild = /*#__PURE__*/React.cloneElement(child, {\n              triggerClassName: 'slds-button_last'\n            });\n          }\n\n          return newChild || child;\n        });\n      }\n\n      var component;\n\n      if (this.props.variant === 'checkbox') {\n        children = React.Children.map(this.props.children, function (child) {\n          var cloneProps = {\n            variant: 'button-group'\n          };\n\n          if (labels.error) {\n            cloneProps['aria-describedby'] = \"button-group-error-\".concat(_this2.getId());\n          }\n\n          return /*#__PURE__*/React.cloneElement(child, cloneProps);\n        });\n        component = /*#__PURE__*/React.createElement(\"div\", {\n          className: classNames('slds-checkbox_button-group', this.props.className),\n          id: this.getId()\n        }, children);\n      } else if (this.props.variant === 'list') {\n        component = /*#__PURE__*/React.createElement(\"ul\", {\n          className: classNames('slds-button-group-list', this.props.className),\n          id: this.getId()\n        }, React.Children.map(this.props.children, function (child) {\n          return /*#__PURE__*/React.createElement(\"li\", null, child);\n        }));\n      } else {\n        component = /*#__PURE__*/React.createElement(\"div\", {\n          className: classNames('slds-button-group', this.props.className),\n          id: this.getId(),\n          role: \"group\"\n        }, children);\n      }\n\n      if (this.props.variant === 'checkbox' || this.props.labels.label) {\n        component = /*#__PURE__*/React.createElement(\"fieldset\", {\n          className: classNames('slds-form-element', {\n            'slds-has-error': labels.error\n          }, this.props.classNameContainer)\n        }, /*#__PURE__*/React.createElement(\"legend\", {\n          className: \"slds-form-element__legend slds-form-element__label\"\n        }, this.props.labels.label), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"slds-form-element__control\"\n        }, component, labels.error ? /*#__PURE__*/React.createElement(\"div\", {\n          className: \"slds-form-element__help\",\n          id: \"button-group-error-\".concat(this.getId())\n        }, labels.error) : null));\n      }\n\n      return component;\n    }\n  }]);\n\n  return ButtonGroup;\n}(React.Component);\n\nButtonGroup.displayName = BUTTON_GROUP;\nButtonGroup.propTypes = propTypes;\nButtonGroup.defaultProps = defaultProps;\nexport default ButtonGroup;","map":{"version":3,"sources":["../../../.tmp-es/components/button-group/index.jsx"],"names":["propTypes","children","PropTypes","className","classNameContainer","id","labels","error","label","string","variant","defaultProps","ButtonGroup","React","Component","shortid","assign","zeroIndexLength","index","newChild","triggerClassName","cloneProps","component","classNames"],"mappings":"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","sourcesContent":["/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\n// Implements the [Button Group design pattern](https://lightningdesignsystem.com/components/button-groups/) in React.\n// Based on SLDS v2.1.1\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport assign from 'lodash.assign';\n\n// ### shortid\n// [npmjs.com/package/shortid](https://www.npmjs.com/package/shortid)\n// shortid is a short, non-sequential, url-friendly, unique id generator\nimport shortid from 'shortid';\n\nimport { BUTTON_GROUP } from '../../utilities/constants';\n\nconst propTypes = {\n\t/**\n\t * Children are expected to be components. If last button triggers a dropdown menu, use Dropdown instead of Button. _Tested with snapshot testing._\n\t */\n\tchildren: PropTypes.node.isRequired,\n\t/**\n\t * CSS classes added to `slds-button-group` or `slds-checkbox_button-group` tag\n\t */\n\tclassName: PropTypes.oneOfType([\n\t\tPropTypes.array,\n\t\tPropTypes.object,\n\t\tPropTypes.string,\n\t]),\n\t/**\n\t * If the `labels.label` prop is set, a `.slds-form-element` classed fieldset element is added as a container. This prop applies classes to that element\n\t */\n\tclassNameContainer: PropTypes.oneOfType([\n\t\tPropTypes.array,\n\t\tPropTypes.object,\n\t\tPropTypes.string,\n\t]),\n\t/**\n\t * HTML id for component.\n\t */\n\tid: PropTypes.string,\n\t/**\n\t * **Text labels for internationalization**\n\t * This object is merged with the default props object on every render.\n\t * * `error`: Message to display when any of Checkboxes are in an error state. _Tested with snapshot testing._\n\t * * `label`: This label appears above the button group. _Tested with snapshot testing._\n\t */\n\tlabels: PropTypes.shape({\n\t\terror: PropTypes.string,\n\t\tlabel: PropTypes.string,\n\t}),\n\t/**\n\t * Use checkbox variant for \"Checkbox Button Group\" styling and add Checkbox components as children _Tested with snapshot testing._\n\t */\n\tvariant: PropTypes.oneOf(['checkbox', 'list']),\n};\n\nconst defaultProps = { labels: {} };\n\n/**\n * The ButtonGroup component wraps other components (ie. Button, MenuDropdown, PopoverTooltip, Checkboxes, etc).\n */\nclass ButtonGroup extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.generatedId = shortid.generate();\n\t}\n\n\tgetId() {\n\t\treturn this.props.id || this.generatedId;\n\t}\n\n\trender() {\n\t\t// Merge objects of strings with their default object\n\t\tconst labels = assign({}, defaultProps.labels, this.props.labels);\n\n\t\tconst zeroIndexLength = React.Children.count(this.props.children) - 1;\n\t\tlet { children } = this.props;\n\t\tif (zeroIndexLength > 0) {\n\t\t\tchildren = React.Children.map(this.props.children, (child, index) => {\n\t\t\t\tlet newChild;\n\t\t\t\tif (index === zeroIndexLength) {\n\t\t\t\t\tnewChild = React.cloneElement(child, {\n\t\t\t\t\t\ttriggerClassName: 'slds-button_last',\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\treturn newChild || child;\n\t\t\t});\n\t\t}\n\n\t\tlet component;\n\n\t\tif (this.props.variant === 'checkbox') {\n\t\t\tchildren = React.Children.map(this.props.children, (child) => {\n\t\t\t\tconst cloneProps = {\n\t\t\t\t\tvariant: 'button-group',\n\t\t\t\t};\n\t\t\t\tif (labels.error) {\n\t\t\t\t\tcloneProps['aria-describedby'] = `button-group-error-${this.getId()}`;\n\t\t\t\t}\n\t\t\t\treturn React.cloneElement(child, cloneProps);\n\t\t\t});\n\n\t\t\tcomponent = (\n\t\t\t\t<div\n\t\t\t\t\tclassName={classNames(\n\t\t\t\t\t\t'slds-checkbox_button-group',\n\t\t\t\t\t\tthis.props.className\n\t\t\t\t\t)}\n\t\t\t\t\tid={this.getId()}\n\t\t\t\t>\n\t\t\t\t\t{children}\n\t\t\t\t</div>\n\t\t\t);\n\t\t} else if (this.props.variant === 'list') {\n\t\t\tcomponent = (\n\t\t\t\t<ul\n\t\t\t\t\tclassName={classNames('slds-button-group-list', this.props.className)}\n\t\t\t\t\tid={this.getId()}\n\t\t\t\t>\n\t\t\t\t\t{React.Children.map(this.props.children, (child) => (\n\t\t\t\t\t\t<li>{child}</li>\n\t\t\t\t\t))}\n\t\t\t\t</ul>\n\t\t\t);\n\t\t} else {\n\t\t\tcomponent = (\n\t\t\t\t<div\n\t\t\t\t\tclassName={classNames('slds-button-group', this.props.className)}\n\t\t\t\t\tid={this.getId()}\n\t\t\t\t\trole=\"group\"\n\t\t\t\t>\n\t\t\t\t\t{children}\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\n\t\tif (this.props.variant === 'checkbox' || this.props.labels.label) {\n\t\t\tcomponent = (\n\t\t\t\t<fieldset\n\t\t\t\t\tclassName={classNames(\n\t\t\t\t\t\t'slds-form-element',\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t'slds-has-error': labels.error,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tthis.props.classNameContainer\n\t\t\t\t\t)}\n\t\t\t\t>\n\t\t\t\t\t<legend className=\"slds-form-element__legend slds-form-element__label\">\n\t\t\t\t\t\t{this.props.labels.label}\n\t\t\t\t\t</legend>\n\t\t\t\t\t<div className=\"slds-form-element__control\">\n\t\t\t\t\t\t{component}\n\t\t\t\t\t\t{labels.error ? (\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tclassName=\"slds-form-element__help\"\n\t\t\t\t\t\t\t\tid={`button-group-error-${this.getId()}`}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{labels.error}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t) : null}\n\t\t\t\t\t</div>\n\t\t\t\t</fieldset>\n\t\t\t);\n\t\t}\n\n\t\treturn component;\n\t}\n}\n\nButtonGroup.displayName = BUTTON_GROUP;\nButtonGroup.propTypes = propTypes;\nButtonGroup.defaultProps = defaultProps;\n\nexport default ButtonGroup;\n"]},"metadata":{},"sourceType":"module"}