{"ast":null,"code":"/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\n/* eslint-disable import/no-mutable-exports */\nimport React from 'react'; // This function will deliver an error message to the browser console when all of the props passed in are undefined (falsey).\n\nimport warning from 'warning';\n\nvar hasChildrenWithoutDisplayNameOf = function hasChildrenWithoutDisplayNameOfFunction() {};\n\nif (process.env.NODE_ENV !== 'production') {\n  var hasWarned = {}; // TODO: allow `displayName` to be an array of displayNames\n\n  hasChildrenWithoutDisplayNameOf = function hasChildrenWithoutDisplayNameOfFunction(control, children, displayName, comment) {\n    if (!hasWarned[control]) {\n      var additionalComment = comment ? \" \".concat(comment) : '';\n      var childrenWithoutSelectedDisplayName = [];\n      React.Children.forEach(children, function (child) {\n        if (child && child.type && child.type.displayName !== displayName) {\n          // eslint-disable-next-line fp/no-mutating-methods\n          childrenWithoutSelectedDisplayName.push(child);\n        }\n      });\n      var hasChildrenWithoutSelectedDisplayName = childrenWithoutSelectedDisplayName.length > 0;\n\n      if (hasChildrenWithoutSelectedDisplayName) {\n        /* eslint-disable max-len */\n        warning(false, \"[Design System React] Unable to use child components specified within \".concat(control, \". Please use a child component with a `displayName` class property value of \").concat(displayName, \". Children without that class property are ignored. Please review `children` prop documentation.\").concat(additionalComment));\n        /* eslint-enable max-len */\n      }\n\n      hasWarned[control] = !!hasChildrenWithoutSelectedDisplayName;\n    }\n  };\n}\n\nexport default hasChildrenWithoutDisplayNameOf;","map":{"version":3,"sources":["../../../.tmp-es/utilities/warning/has-children-without-display-name-of.js"],"names":["hasChildrenWithoutDisplayNameOf","process","hasWarned","additionalComment","comment","childrenWithoutSelectedDisplayName","React","child","hasChildrenWithoutSelectedDisplayName","warning"],"mappings":"AAAA;;AACA;;AAEA;AAEA,OAAA,KAAA,MAAA,OAAA,C,CAEA;;AACA,OAAA,OAAA,MAAA,SAAA;;AAEA,IAAIA,+BAA+B,GAAG,SAAA,uCAAA,GAAmD,CAAzF,CAAA;;AAEA,IAAIC,OAAO,CAAPA,GAAAA,CAAAA,QAAAA,KAAJ,YAAA,EAA2C;AAC1C,MAAMC,SAAS,GAD2B,EAC1C,CAD0C,CAG1C;;AACAF,EAAAA,+BAA+B,GAAG,SAAA,uCAAA,CAAA,OAAA,EAAA,QAAA,EAAA,WAAA,EAAA,OAAA,EAKhC;AACD,QAAI,CAACE,SAAS,CAAd,OAAc,CAAd,EAAyB;AACxB,UAAMC,iBAAiB,GAAGC,OAAO,GAAA,IAAA,MAAA,CAAA,OAAA,CAAA,GAAjC,EAAA;AACA,UAAMC,kCAAkC,GAAxC,EAAA;AAEAC,MAAAA,KAAK,CAALA,QAAAA,CAAAA,OAAAA,CAAAA,QAAAA,EAAiC,UAAA,KAAA,EAAW;AAC3C,YAAIC,KAAK,IAAIA,KAAK,CAAdA,IAAAA,IAAuBA,KAAK,CAALA,IAAAA,CAAAA,WAAAA,KAA3B,WAAA,EAAmE;AAClE;AACAF,UAAAA,kCAAkC,CAAlCA,IAAAA,CAAAA,KAAAA;AACA;AAJFC,OAAAA;AAOA,UAAME,qCAAqC,GAC1CH,kCAAkC,CAAlCA,MAAAA,GADD,CAAA;;AAGA,UAAA,qCAAA,EAA2C;AAC1C;AACAI,QAAAA,OAAO,CAAA,KAAA,EAAA,yEAAA,MAAA,CAAA,OAAA,EAAA,8EAAA,EAAA,MAAA,CAAA,WAAA,EAAA,kGAAA,EAAA,MAAA,CAAPA,iBAAO,CAAA,CAAPA;AAIA;AACA;;AAEDP,MAAAA,SAAS,CAATA,OAAS,CAATA,GAAqB,CAAC,CAAtBA,qCAAAA;AACA;AA9BFF,GAAAA;AAgCA;;AAED,eAAA,+BAAA","sourcesContent":["/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\n/* eslint-disable import/no-mutable-exports */\n\nimport React from 'react';\n\n// This function will deliver an error message to the browser console when all of the props passed in are undefined (falsey).\nimport warning from 'warning';\n\nlet hasChildrenWithoutDisplayNameOf = function hasChildrenWithoutDisplayNameOfFunction() {};\n\nif (process.env.NODE_ENV !== 'production') {\n\tconst hasWarned = {};\n\n\t// TODO: allow `displayName` to be an array of displayNames\n\thasChildrenWithoutDisplayNameOf = function hasChildrenWithoutDisplayNameOfFunction(\n\t\tcontrol,\n\t\tchildren,\n\t\tdisplayName,\n\t\tcomment\n\t) {\n\t\tif (!hasWarned[control]) {\n\t\t\tconst additionalComment = comment ? ` ${comment}` : '';\n\t\t\tconst childrenWithoutSelectedDisplayName = [];\n\n\t\t\tReact.Children.forEach(children, (child) => {\n\t\t\t\tif (child && child.type && child.type.displayName !== displayName) {\n\t\t\t\t\t// eslint-disable-next-line fp/no-mutating-methods\n\t\t\t\t\tchildrenWithoutSelectedDisplayName.push(child);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tconst hasChildrenWithoutSelectedDisplayName =\n\t\t\t\tchildrenWithoutSelectedDisplayName.length > 0;\n\n\t\t\tif (hasChildrenWithoutSelectedDisplayName) {\n\t\t\t\t/* eslint-disable max-len */\n\t\t\t\twarning(\n\t\t\t\t\tfalse,\n\t\t\t\t\t`[Design System React] Unable to use child components specified within ${control}. Please use a child component with a \\`displayName\\` class property value of ${displayName}. Children without that class property are ignored. Please review \\`children\\` prop documentation.${additionalComment}`\n\t\t\t\t);\n\t\t\t\t/* eslint-enable max-len */\n\t\t\t}\n\n\t\t\thasWarned[control] = !!hasChildrenWithoutSelectedDisplayName;\n\t\t}\n\t};\n}\n\nexport default hasChildrenWithoutDisplayNameOf;\n"]},"metadata":{},"sourceType":"module"}