{"ast":null,"code":"function ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nvar Swatch = function Swatch(_ref) {\n  var color = _ref.color,\n      style = _ref.style,\n      label = _ref.label,\n      labels = _ref.labels;\n\n  var innerStyle = _objectSpread({\n    backgroundColor: color\n  }, style);\n\n  var assistiveText = label || color; // falsey values output a transparent swatch\n\n  if (!color) {\n    innerStyle.backgroundImage = 'linear-gradient(-45deg, white 47%, #870500 0, #870500 53%, white 0)';\n\n    if (labels && labels.swatchTabTransparentSwatch) {\n      assistiveText = labels.swatchTabTransparentSwatch;\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"span\", {\n    className: \"slds-swatch\",\n    style: innerStyle\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"slds-assistive-text\"\n  }, assistiveText));\n};\n\nSwatch.propTypes = {\n  color: PropTypes.string.isRequired\n};\nexport default Swatch;","map":{"version":3,"sources":["../../../../.tmp-es/components/color-picker/private/swatch.jsx"],"names":["Swatch","color","style","label","labels","innerStyle","backgroundColor","assistiveText","PropTypes","isRequired"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAA,KAAA,MAAA,OAAA;AACA,OAAA,SAAA,MAAA,YAAA;;AAEA,IAAMA,MAAM,GAAG,SAATA,MAAS,CAAA,IAAA,EAAqC;AAAA,MAAlCC,KAAkC,GAAA,IAAA,CAAlCA,KAAkC;AAAA,MAA3BC,KAA2B,GAAA,IAAA,CAA3BA,KAA2B;AAAA,MAApBC,KAAoB,GAAA,IAAA,CAApBA,KAAoB;AAAA,MAAbC,MAAa,GAAA,IAAA,CAAbA,MAAa;;AACnD,MAAMC,UAAU,GAAA,aAAA,CAAA;AACfC,IAAAA,eAAe,EAAEL;AADF,GAAA,EAAhB,KAAgB,CAAhB;;AAIA,MAAIM,aAAa,GAAGJ,KAAK,IAL0B,KAKnD,CALmD,CAOnD;;AACA,MAAI,CAAJ,KAAA,EAAY;AACXE,IAAAA,UAAU,CAAVA,eAAAA,GAAAA,qEAAAA;;AAEA,QAAID,MAAM,IAAIA,MAAM,CAApB,0BAAA,EAAiD;AAChDG,MAAAA,aAAa,GAAGH,MAAM,CAAtBG,0BAAAA;AACA;AACD;;AAED,SAAA,aACC,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AAAM,IAAA,SAAS,EAAf,aAAA;AAA8B,IAAA,KAAK,EAAEF;AAArC,GAAA,EAAA,aACC,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AAAM,IAAA,SAAS,EAAC;AAAhB,GAAA,EAFF,aAEE,CADD,CADD;AAhBD,CAAA;;AAuBAL,MAAM,CAANA,SAAAA,GAAmB;AAClBC,EAAAA,KAAK,EAAEO,SAAS,CAATA,MAAAA,CAAiBC;AADN,CAAnBT;AAIA,eAAA,MAAA","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Swatch = ({ color, style, label, labels }) => {\n\tconst innerStyle = {\n\t\tbackgroundColor: color,\n\t\t...style,\n\t};\n\tlet assistiveText = label || color;\n\n\t// falsey values output a transparent swatch\n\tif (!color) {\n\t\tinnerStyle.backgroundImage =\n\t\t\t'linear-gradient(-45deg, white 47%, #870500 0, #870500 53%, white 0)';\n\t\tif (labels && labels.swatchTabTransparentSwatch) {\n\t\t\tassistiveText = labels.swatchTabTransparentSwatch;\n\t\t}\n\t}\n\n\treturn (\n\t\t<span className=\"slds-swatch\" style={innerStyle}>\n\t\t\t<span className=\"slds-assistive-text\">{assistiveText}</span>\n\t\t</span>\n\t);\n};\n\nSwatch.propTypes = {\n\tcolor: PropTypes.string.isRequired,\n};\n\nexport default Swatch;\n"]},"metadata":{},"sourceType":"module"}