{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n// # Global Header Favorites Component\n// Implements the [Global Header Help design pattern](https://www.lightningdesignsystem.com/components/global-header/#Help) in React.\n\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport assign from 'lodash.assign';\nimport classnames from 'classnames';\nimport Button from '../button';\nimport EventUtil from '../../utilities/event';\nimport KEYS from '../../utilities/key-code';\nimport Popover from '../popover';\nimport { GLOBAL_HEADER_FAVORITES } from '../../utilities/constants';\nvar propTypes = {\n  /**\n   * **Assistive text for accessibility**\n   * * `action`: Description of star button. Default is \"Toggle Favorite.\"\n   * * `more`: Description of dropdown menu. Default is \"View Favorites.\"\n   */\n  assistiveText: PropTypes.shape({\n    action: PropTypes.string,\n    more: PropTypes.string\n  }),\n\n  /**\n   * Disables the favorites action (star) button and not the related Popover.\"\n   */\n  actionDisabled: PropTypes.bool,\n\n  /**\n   * Controls whether the favorites action (star) button is selected or not\n   */\n  actionSelected: PropTypes.bool,\n\n  /**\n   * This event fires when the favorites action (star) button is toggled. Passes in `event, { actionSelected }`.\n   */\n  onToggleActionSelected: PropTypes.func,\n\n  /**\n   * A `Popover` component applied to the favorites more button. The props from this popover will be merged and override any default props. The `children` prop will be ignored.\n   */\n  popover: PropTypes.node\n};\n/**\n * A GlobalHeaderFavorites component. The favorites action is used to \"favorite\" a commonly used page within a user's experience. When a user \"favorites\" a page by pressing the favorites action, the button icon changes color with a small animation to confirm your selection.\n */\n\nvar GlobalHeaderFavorites = /*#__PURE__*/function (_React$Component) {\n  _inherits(GlobalHeaderFavorites, _React$Component);\n\n  var _super = _createSuper(GlobalHeaderFavorites);\n\n  function GlobalHeaderFavorites() {\n    var _this;\n\n    _classCallCheck(this, GlobalHeaderFavorites);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"toggleActionSelected\", function (event) {\n      if (_this.props.onToggleActionSelected) {\n        _this.props.onToggleActionSelected(event, {\n          actionSelected: _this.props.actionSelected || false\n        });\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(GlobalHeaderFavorites, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var actionAriaProps = {};\n      var popoverProps = assign({\n        align: 'bottom',\n        body: /*#__PURE__*/React.createElement(\"span\", null),\n        triggerClassName: 'slds-dropdown-trigger slds-dropdown-trigger_click'\n      }, this.props.popover ? this.props.popover.props : {}); // eslint-disable-next-line fp/no-delete\n\n      delete popoverProps.children;\n\n      if (this.props.actionSelected) {\n        actionAriaProps['aria-pressed'] = true;\n      }\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"slds-global-actions__favorites slds-dropdown-trigger slds-dropdown-trigger_click\"\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"slds-button-group\"\n      }, /*#__PURE__*/React.createElement(Button, _extends({\n        assistiveText: {\n          icon: this.props.assistiveText.action\n        },\n        className: classnames('slds-button_icon slds-global-actions__favorites-action', {\n          'slds-is-disabled': this.props.actionDisabled,\n          'slds-is-selected': this.props.actionSelected\n        }),\n        disabled: this.props.actionDisabled,\n        iconCategory: \"utility\",\n        iconName: \"favorite\",\n        iconSize: \"small\",\n        iconVariant: \"border\",\n        onClick: this.toggleActionSelected,\n        onKeyDown: function onKeyDown(event) {\n          if (event.keyCode === KEYS.ENTER) {\n            EventUtil.trapImmediate(event);\n\n            _this2.toggleActionSelected(event);\n          }\n        },\n        title: this.props.assistiveText.action,\n        variant: \"icon\"\n      }, actionAriaProps)), /*#__PURE__*/React.createElement(Popover, popoverProps, /*#__PURE__*/React.createElement(Button, {\n        assistiveText: {\n          icon: this.props.assistiveText.more\n        },\n        className: \"slds-button_icon slds-global-actions__favorites-more\",\n        iconCategory: \"utility\",\n        iconName: \"down\",\n        iconSize: \"small\",\n        iconVariant: \"border\",\n        style: {\n          // this is needed because the popover trigger wrapper janks up the default styles\n          borderLeft: '0',\n          borderRadius: '0 .25rem .25rem 0'\n        },\n        title: this.props.assistiveText.more,\n        variant: \"icon\"\n      }))));\n    }\n  }]);\n\n  return GlobalHeaderFavorites;\n}(React.Component);\n\nGlobalHeaderFavorites.displayName = GLOBAL_HEADER_FAVORITES;\nGlobalHeaderFavorites.defaultProps = {\n  assistiveText: {\n    action: 'Toggle Favorite',\n    more: 'View Favorites'\n  }\n};\nGlobalHeaderFavorites.propTypes = propTypes;\nexport default GlobalHeaderFavorites;","map":{"version":3,"sources":["../../../.tmp-es/components/global-header/favorites.jsx"],"names":["propTypes","assistiveText","action","PropTypes","more","string","actionDisabled","actionSelected","onToggleActionSelected","popover","node","GlobalHeaderFavorites","React","Component","actionAriaProps","popoverProps","assign","align","body","triggerClassName","icon","classnames","event","KEYS","EventUtil","borderLeft","borderRadius"],"mappings":"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","sourcesContent":["/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\n// # Global Header Favorites Component\n// Implements the [Global Header Help design pattern](https://www.lightningdesignsystem.com/components/global-header/#Help) in React.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport assign from 'lodash.assign';\nimport classnames from 'classnames';\n\nimport Button from '../button';\nimport EventUtil from '../../utilities/event';\nimport KEYS from '../../utilities/key-code';\nimport Popover from '../popover';\n\nimport { GLOBAL_HEADER_FAVORITES } from '../../utilities/constants';\n\nconst propTypes = {\n\t/**\n\t * **Assistive text for accessibility**\n\t * * `action`: Description of star button. Default is \"Toggle Favorite.\"\n\t * * `more`: Description of dropdown menu. Default is \"View Favorites.\"\n\t */\n\tassistiveText: PropTypes.shape({\n\t\taction: PropTypes.string,\n\t\tmore: PropTypes.string,\n\t}),\n\t/**\n\t * Disables the favorites action (star) button and not the related Popover.\"\n\t */\n\tactionDisabled: PropTypes.bool,\n\t/**\n\t * Controls whether the favorites action (star) button is selected or not\n\t */\n\tactionSelected: PropTypes.bool,\n\t/**\n\t * This event fires when the favorites action (star) button is toggled. Passes in `event, { actionSelected }`.\n\t */\n\tonToggleActionSelected: PropTypes.func,\n\t/**\n\t * A `Popover` component applied to the favorites more button. The props from this popover will be merged and override any default props. The `children` prop will be ignored.\n\t */\n\tpopover: PropTypes.node,\n};\n\n/**\n * A GlobalHeaderFavorites component. The favorites action is used to \"favorite\" a commonly used page within a user's experience. When a user \"favorites\" a page by pressing the favorites action, the button icon changes color with a small animation to confirm your selection.\n */\nclass GlobalHeaderFavorites extends React.Component {\n\ttoggleActionSelected = (event) => {\n\t\tif (this.props.onToggleActionSelected) {\n\t\t\tthis.props.onToggleActionSelected(event, {\n\t\t\t\tactionSelected: this.props.actionSelected || false,\n\t\t\t});\n\t\t}\n\t};\n\n\trender() {\n\t\tconst actionAriaProps = {};\n\t\tconst popoverProps = assign(\n\t\t\t{\n\t\t\t\talign: 'bottom',\n\t\t\t\tbody: <span />,\n\t\t\t\ttriggerClassName: 'slds-dropdown-trigger slds-dropdown-trigger_click',\n\t\t\t},\n\t\t\tthis.props.popover ? this.props.popover.props : {}\n\t\t);\n\n\t\t// eslint-disable-next-line fp/no-delete\n\t\tdelete popoverProps.children;\n\n\t\tif (this.props.actionSelected) {\n\t\t\tactionAriaProps['aria-pressed'] = true;\n\t\t}\n\n\t\treturn (\n\t\t\t<div className=\"slds-global-actions__favorites slds-dropdown-trigger slds-dropdown-trigger_click\">\n\t\t\t\t<div className=\"slds-button-group\">\n\t\t\t\t\t<Button\n\t\t\t\t\t\tassistiveText={{ icon: this.props.assistiveText.action }}\n\t\t\t\t\t\tclassName={classnames(\n\t\t\t\t\t\t\t'slds-button_icon slds-global-actions__favorites-action',\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t'slds-is-disabled': this.props.actionDisabled,\n\t\t\t\t\t\t\t\t'slds-is-selected': this.props.actionSelected,\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t)}\n\t\t\t\t\t\tdisabled={this.props.actionDisabled}\n\t\t\t\t\t\ticonCategory=\"utility\"\n\t\t\t\t\t\ticonName=\"favorite\"\n\t\t\t\t\t\ticonSize=\"small\"\n\t\t\t\t\t\ticonVariant=\"border\"\n\t\t\t\t\t\tonClick={this.toggleActionSelected}\n\t\t\t\t\t\tonKeyDown={(event) => {\n\t\t\t\t\t\t\tif (event.keyCode === KEYS.ENTER) {\n\t\t\t\t\t\t\t\tEventUtil.trapImmediate(event);\n\t\t\t\t\t\t\t\tthis.toggleActionSelected(event);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}}\n\t\t\t\t\t\ttitle={this.props.assistiveText.action}\n\t\t\t\t\t\tvariant=\"icon\"\n\t\t\t\t\t\t{...actionAriaProps}\n\t\t\t\t\t/>\n\t\t\t\t\t<Popover {...popoverProps}>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tassistiveText={{ icon: this.props.assistiveText.more }}\n\t\t\t\t\t\t\tclassName=\"slds-button_icon slds-global-actions__favorites-more\"\n\t\t\t\t\t\t\ticonCategory=\"utility\"\n\t\t\t\t\t\t\ticonName=\"down\"\n\t\t\t\t\t\t\ticonSize=\"small\"\n\t\t\t\t\t\t\ticonVariant=\"border\"\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t// this is needed because the popover trigger wrapper janks up the default styles\n\t\t\t\t\t\t\t\tborderLeft: '0',\n\t\t\t\t\t\t\t\tborderRadius: '0 .25rem .25rem 0',\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\ttitle={this.props.assistiveText.more}\n\t\t\t\t\t\t\tvariant=\"icon\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Popover>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nGlobalHeaderFavorites.displayName = GLOBAL_HEADER_FAVORITES;\n\nGlobalHeaderFavorites.defaultProps = {\n\tassistiveText: {\n\t\taction: 'Toggle Favorite',\n\t\tmore: 'View Favorites',\n\t},\n};\n\nGlobalHeaderFavorites.propTypes = propTypes;\n\nexport default GlobalHeaderFavorites;\n"]},"metadata":{},"sourceType":"module"}