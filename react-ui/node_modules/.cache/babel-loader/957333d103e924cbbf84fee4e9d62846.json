{"ast":null,"code":"/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n// # FIlter List Heading\n// Implements the [Panel design pattern](https://www.lightningdesignsystem.com/components/panels) in React.\n// Based on SLDS v2.2.0-rc.1\n// ## Dependencies\n// ### React\nimport React from 'react';\nimport PropTypes from 'prop-types'; // ### classNames\n\nimport classNames from 'classnames';\nimport Icon from '../../icon'; // ## Constants\n\nimport { PANEL_FILTER_LIST_HEADING } from '../../../utilities/constants';\n/**\n * A filtering panel contextual filtering options.\n */\n\nvar PanelFilterListHeading = function PanelFilterListHeading(_ref) {\n  var heading = _ref.heading,\n      isLocked = _ref.isLocked,\n      lockedHeading = _ref.lockedHeading;\n  return /*#__PURE__*/React.createElement(\"h3\", {\n    className: classNames('slds-text-body_small', 'slds-m-vertical_x-small', {\n      'slds-grid': isLocked\n    })\n  }, isLocked ? lockedHeading : heading, isLocked ? /*#__PURE__*/React.createElement(Icon, {\n    className: \"slds-m-left_x-small\",\n    assistiveText: {\n      label: 'locked'\n    },\n    category: \"utility\",\n    name: \"lock\",\n    size: \"x-small\"\n  }) : null);\n};\n\nPanelFilterListHeading.displayName = PANEL_FILTER_LIST_HEADING;\nPanelFilterListHeading.propTypes = {\n  /**\n   * Heading for following PanelFilterList\n   */\n  heading: PropTypes.oneOfType([PropTypes.node, PropTypes.string]),\n\n  /**\n   * Displayed a heading for a locked list of filters\n   */\n  isLocked: PropTypes.bool,\n\n  /**\n   * Heading for a group of filters that are locked\n   */\n  lockedHeading: PropTypes.string\n};\nPanelFilterListHeading.defaultProps = {\n  heading: 'Matching all these filters',\n  lockedHeading: 'Locked filters'\n};\nexport default PanelFilterListHeading;","map":{"version":3,"sources":["../../../../.tmp-es/components/panel/filtering/list-heading.jsx"],"names":["PanelFilterListHeading","heading","isLocked","lockedHeading","classNames","label","PropTypes","string"],"mappings":"AAAA;;AACA;AAEA;AAEA;AACA;AAEA;AAEA;AACA,OAAA,KAAA,MAAA,OAAA;AACA,OAAA,SAAA,MAAA,YAAA,C,CAEA;;AACA,OAAA,UAAA,MAAA,YAAA;AAEA,OAAA,IAAA,MAAA,YAAA,C,CAEA;;AACA,SAAA,yBAAA,QAAA,8BAAA;AAEA;AACA;AACA;;AACA,IAAMA,sBAAsB,GAAG,SAAzBA,sBAAyB,CAAA,IAAA,EAAA;AAAA,MAAGC,OAAH,GAAA,IAAA,CAAA,OAAA;AAAA,MAAYC,QAAZ,GAAA,IAAA,CAAA,QAAA;AAAA,MAAsBC,aAAtB,GAAA,IAAA,CAAA,aAAA;AAAA,SAAA,aAC9B,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA;AACC,IAAA,SAAS,EAAEC,UAAU,CAAA,sBAAA,EAAA,yBAAA,EAAoD;AACxE,mBAAaF;AAD2D,KAApD;AADtB,GAAA,EAKEA,QAAQ,GAAA,aAAA,GALV,OAAA,EAMEA,QAAQ,GAAA,aACR,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA;AACC,IAAA,SAAS,EADV,qBAAA;AAEC,IAAA,aAAa,EAAE;AAAEG,MAAAA,KAAK,EAAE;AAAT,KAFhB;AAGC,IAAA,QAAQ,EAHT,SAAA;AAIC,IAAA,IAAI,EAJL,MAAA;AAKC,IAAA,IAAI,EAAC;AALN,GAAA,CADQ,GAPoB,IAC9B,CAD8B;AAA/B,CAAA;;AAmBAL,sBAAsB,CAAtBA,WAAAA,GAAAA,yBAAAA;AAEAA,sBAAsB,CAAtBA,SAAAA,GAAmC;AAClC;AACD;AACA;AACCC,EAAAA,OAAO,EAAEK,SAAS,CAATA,SAAAA,CAAoB,CAACA,SAAS,CAAV,IAAA,EAAiBA,SAAS,CAJrB,MAIL,CAApBA,CAJyB;;AAKlC;AACD;AACA;AACCJ,EAAAA,QAAQ,EAAEI,SAAS,CARe,IAAA;;AASlC;AACD;AACA;AACCH,EAAAA,aAAa,EAAEG,SAAS,CAACC;AAZS,CAAnCP;AAeAA,sBAAsB,CAAtBA,YAAAA,GAAsC;AACrCC,EAAAA,OAAO,EAD8B,4BAAA;AAErCE,EAAAA,aAAa,EAAE;AAFsB,CAAtCH;AAKA,eAAA,sBAAA","sourcesContent":["/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\n// # FIlter List Heading\n\n// Implements the [Panel design pattern](https://www.lightningdesignsystem.com/components/panels) in React.\n// Based on SLDS v2.2.0-rc.1\n\n// ## Dependencies\n\n// ### React\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\n// ### classNames\nimport classNames from 'classnames';\n\nimport Icon from '../../icon';\n\n// ## Constants\nimport { PANEL_FILTER_LIST_HEADING } from '../../../utilities/constants';\n\n/**\n * A filtering panel contextual filtering options.\n */\nconst PanelFilterListHeading = ({ heading, isLocked, lockedHeading }) => (\n\t<h3\n\t\tclassName={classNames('slds-text-body_small', 'slds-m-vertical_x-small', {\n\t\t\t'slds-grid': isLocked,\n\t\t})}\n\t>\n\t\t{isLocked ? lockedHeading : heading}\n\t\t{isLocked ? (\n\t\t\t<Icon\n\t\t\t\tclassName=\"slds-m-left_x-small\"\n\t\t\t\tassistiveText={{ label: 'locked' }}\n\t\t\t\tcategory=\"utility\"\n\t\t\t\tname=\"lock\"\n\t\t\t\tsize=\"x-small\"\n\t\t\t/>\n\t\t) : null}\n\t</h3>\n);\n\nPanelFilterListHeading.displayName = PANEL_FILTER_LIST_HEADING;\n\nPanelFilterListHeading.propTypes = {\n\t/**\n\t * Heading for following PanelFilterList\n\t */\n\theading: PropTypes.oneOfType([PropTypes.node, PropTypes.string]),\n\t/**\n\t * Displayed a heading for a locked list of filters\n\t */\n\tisLocked: PropTypes.bool,\n\t/**\n\t * Heading for a group of filters that are locked\n\t */\n\tlockedHeading: PropTypes.string,\n};\n\nPanelFilterListHeading.defaultProps = {\n\theading: 'Matching all these filters',\n\tlockedHeading: 'Locked filters',\n};\n\nexport default PanelFilterListHeading;\n"]},"metadata":{},"sourceType":"module"}