{"ast":null,"code":"/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\n/* eslint-disable import/no-mutable-exports */\n// This function will deliver an error message to the browser console when all of the props passed in are undefined (falsey).\nimport warning from 'warning';\n\nvar incompatibleProps = function incompatiblePropsFunction() {};\n\nif (process.env.NODE_ENV !== 'production') {\n  incompatibleProps = function incompatiblePropsFunction(control, props, propOneName, propOneValues, propTwoName, propTwoValues, comment) {\n    var checkPassed = true;\n    var propOneConditionMet = false;\n    var propTwoConditionMet = false;\n\n    if (props[propOneName] && props[propTwoName]) {\n      if (propOneValues) {\n        propOneValues.forEach(function (value) {\n          propOneConditionMet = props[propOneName] === value;\n        });\n      } else {\n        propOneConditionMet = true;\n      }\n\n      if (propTwoValues) {\n        propTwoValues.forEach(function (value) {\n          propTwoConditionMet = props[propTwoName] === value;\n        });\n      } else {\n        propTwoConditionMet = true;\n      }\n\n      checkPassed = !(propOneConditionMet && propTwoConditionMet);\n    }\n\n    if (!checkPassed) {\n      var additionalComment = comment ? \" \".concat(comment) : '';\n      var incompatibleValueOne = propOneValues ? \" of value `\".concat(props[propOneName], \"`\") : '';\n      var incompatibleValueTwo = propTwoValues ? \" of value `\".concat(props[propTwoName], \"`\") : '';\n      /* eslint-disable max-len */\n\n      warning(false, \"[Design System React] \".concat(control, \" should not be passed prop `\").concat(propOneName, \"`\").concat(incompatibleValueOne, \" along with prop `\").concat(propTwoName, \"`\").concat(incompatibleValueTwo, \" as they are incompatible.\").concat(additionalComment));\n      /* eslint-enable max-len */\n    }\n  };\n}\n\nexport default incompatibleProps;","map":{"version":3,"sources":["../../../.tmp-es/utilities/warning/incompatible-props.js"],"names":["incompatibleProps","process","checkPassed","propOneConditionMet","propTwoConditionMet","props","propOneValues","propTwoValues","additionalComment","comment","incompatibleValueOne","incompatibleValueTwo","warning"],"mappings":"AAAA;;AACA;;AAEA;AAEA;AACA,OAAA,OAAA,MAAA,SAAA;;AAEA,IAAIA,iBAAiB,GAAG,SAAA,yBAAA,GAAqC,CAA7D,CAAA;;AAEA,IAAIC,OAAO,CAAPA,GAAAA,CAAAA,QAAAA,KAAJ,YAAA,EAA2C;AAC1CD,EAAAA,iBAAiB,GAAG,SAAA,yBAAA,CAAA,OAAA,EAAA,KAAA,EAAA,WAAA,EAAA,aAAA,EAAA,WAAA,EAAA,aAAA,EAAA,OAAA,EAQlB;AACD,QAAIE,WAAW,GAAf,IAAA;AACA,QAAIC,mBAAmB,GAAvB,KAAA;AACA,QAAIC,mBAAmB,GAAvB,KAAA;;AAEA,QAAIC,KAAK,CAALA,WAAK,CAALA,IAAsBA,KAAK,CAA/B,WAA+B,CAA/B,EAA8C;AAC7C,UAAA,aAAA,EAAmB;AAClBC,QAAAA,aAAa,CAAbA,OAAAA,CAAsB,UAAA,KAAA,EAAW;AAChCH,UAAAA,mBAAmB,GAAGE,KAAK,CAALA,WAAK,CAALA,KAAtBF,KAAAA;AADDG,SAAAA;AADD,OAAA,MAIO;AACNH,QAAAA,mBAAmB,GAAnBA,IAAAA;AACA;;AAED,UAAA,aAAA,EAAmB;AAClBI,QAAAA,aAAa,CAAbA,OAAAA,CAAsB,UAAA,KAAA,EAAW;AAChCH,UAAAA,mBAAmB,GAAGC,KAAK,CAALA,WAAK,CAALA,KAAtBD,KAAAA;AADDG,SAAAA;AADD,OAAA,MAIO;AACNH,QAAAA,mBAAmB,GAAnBA,IAAAA;AACA;;AAEDF,MAAAA,WAAW,GAAG,EAAEC,mBAAmB,IAAnCD,mBAAc,CAAdA;AACA;;AAED,QAAI,CAAJ,WAAA,EAAkB;AACjB,UAAMM,iBAAiB,GAAGC,OAAO,GAAA,IAAA,MAAA,CAAA,OAAA,CAAA,GAAjC,EAAA;AACA,UAAMC,oBAAoB,GAAGJ,aAAa,GAAA,cAAA,MAAA,CACxBD,KAAK,CADmB,WACnB,CADmB,EAAA,GAAA,CAAA,GAA1C,EAAA;AAGA,UAAMM,oBAAoB,GAAGJ,aAAa,GAAA,cAAA,MAAA,CACxBF,KAAK,CADmB,WACnB,CADmB,EAAA,GAAA,CAAA,GAA1C,EAAA;AAIA;;AACAO,MAAAA,OAAO,CAAA,KAAA,EAAA,yBAAA,MAAA,CAAA,OAAA,EAAA,8BAAA,EAAA,MAAA,CAAA,WAAA,EAAA,GAAA,EAAA,MAAA,CAAA,oBAAA,EAAA,oBAAA,EAAA,MAAA,CAAA,WAAA,EAAA,GAAA,EAAA,MAAA,CAAA,oBAAA,EAAA,4BAAA,EAAA,MAAA,CAAPA,iBAAO,CAAA,CAAPA;AAIA;AACA;AAhDFZ,GAAAA;AAkDA;;AAED,eAAA,iBAAA","sourcesContent":["/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\n/* eslint-disable import/no-mutable-exports */\n\n// This function will deliver an error message to the browser console when all of the props passed in are undefined (falsey).\nimport warning from 'warning';\n\nlet incompatibleProps = function incompatiblePropsFunction() {};\n\nif (process.env.NODE_ENV !== 'production') {\n\tincompatibleProps = function incompatiblePropsFunction(\n\t\tcontrol,\n\t\tprops,\n\t\tpropOneName,\n\t\tpropOneValues,\n\t\tpropTwoName,\n\t\tpropTwoValues,\n\t\tcomment\n\t) {\n\t\tlet checkPassed = true;\n\t\tlet propOneConditionMet = false;\n\t\tlet propTwoConditionMet = false;\n\n\t\tif (props[propOneName] && props[propTwoName]) {\n\t\t\tif (propOneValues) {\n\t\t\t\tpropOneValues.forEach((value) => {\n\t\t\t\t\tpropOneConditionMet = props[propOneName] === value;\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tpropOneConditionMet = true;\n\t\t\t}\n\n\t\t\tif (propTwoValues) {\n\t\t\t\tpropTwoValues.forEach((value) => {\n\t\t\t\t\tpropTwoConditionMet = props[propTwoName] === value;\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tpropTwoConditionMet = true;\n\t\t\t}\n\n\t\t\tcheckPassed = !(propOneConditionMet && propTwoConditionMet);\n\t\t}\n\n\t\tif (!checkPassed) {\n\t\t\tconst additionalComment = comment ? ` ${comment}` : '';\n\t\t\tconst incompatibleValueOne = propOneValues\n\t\t\t\t? ` of value \\`${props[propOneName]}\\``\n\t\t\t\t: '';\n\t\t\tconst incompatibleValueTwo = propTwoValues\n\t\t\t\t? ` of value \\`${props[propTwoName]}\\``\n\t\t\t\t: '';\n\n\t\t\t/* eslint-disable max-len */\n\t\t\twarning(\n\t\t\t\tfalse,\n\t\t\t\t`[Design System React] ${control} should not be passed prop \\`${propOneName}\\`${incompatibleValueOne} along with prop \\`${propTwoName}\\`${incompatibleValueTwo} as they are incompatible.${additionalComment}`\n\t\t\t);\n\t\t\t/* eslint-enable max-len */\n\t\t}\n\t};\n}\n\nexport default incompatibleProps;\n"]},"metadata":{},"sourceType":"module"}