{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n// # Alert Component\n// Implements the [Alert design pattern](https://lightningdesignsystem.com/components/alert/) in React.\n\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport assign from 'lodash.assign';\nimport classNames from '../../utilities/class-names';\nimport Button from '../button';\nimport Icon from '../icon';\nimport checkProps from './check-props';\nimport componentDoc from './component.json';\nimport { ALERT } from '../../utilities/constants';\nimport DOMElementFocus from '../../utilities/dom-element-focus';\nimport EventUtil from '../../utilities/event';\nvar propTypes = {\n  /**\n   * **Assistive text for accessibility**\n   * This object is merged with the default props object on every render.\n   * * `closeButton`: This is a visually hidden label for the close button.\n   * _Tested with snapshot testing._\n   */\n  assistiveText: PropTypes.shape({\n    closeButton: PropTypes.oneOfType([PropTypes.string, PropTypes.node])\n  }),\n\n  /**\n   * CSS classes to be added to tag with `.slds-notify_alert`. Uses `classNames` [API](https://github.com/JedWatson/classnames).\n   * _Tested with snapshot testing._\n   */\n  className: PropTypes.oneOfType([PropTypes.array, PropTypes.object, PropTypes.string]),\n\n  /**\n   * Allows user to click a close button. Banners should be dismissible only if they communicate future impact to the system,\n   * _Tested with snapshot testing._\n   */\n  dismissible: PropTypes.bool,\n\n  /**\n   * Icon of type `~/components/icon`. This icon will be cloned and additional props appended. The default icons are:\n   * * info variant: `utility:info`\n   * * error variant: `utility:error`\n   * * offline variant: `utility:offline`\n   * * warning variant: `utility:warning`\n   *\n   * _Tested with snapshot testing._\n   */\n  icon: PropTypes.node,\n\n  /**\n   * **Text labels for internationalization**\n   * This object is merged with the default props object on every render.\n   * * `heading`: text within heading tag\n   * * `headingLink`: Text of link that triggers `onClickHeadingLink`. Inline links should pass a keyed array of React components into `labels.heading`.\n   *\n   * _Tested with snapshot testing._\n   */\n  labels: PropTypes.shape({\n    heading: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n    headingLink: PropTypes.oneOfType([PropTypes.string, PropTypes.node])\n  }),\n\n  /**\n   * Triggered by link. _Tested with Mocha testing._\n   */\n  onClickHeadingLink: PropTypes.func,\n\n  /**\n   * Triggered by close button. This is a controlled component. _Tested with Mocha testing._\n   */\n  onRequestClose: PropTypes.func,\n\n  /**\n   * Custom styles to be passed to the component. _Tested with Mocha testing._\n   */\n  style: PropTypes.object,\n\n  /**\n   * The type of alert. _Tested with snapshot testing._\n   */\n  variant: PropTypes.oneOf(['error', 'info', 'offline', 'warning']).isRequired\n};\nvar defaultProps = {\n  assistiveText: {\n    closeButton: 'Close'\n  },\n  labels: {},\n  variant: 'info'\n};\n/**\n * Alert banners communicate a state that affects the entire system, not just a feature or page. It persists over a session and appears without the user initiating the action. View [banner guidelines](https://www.lightningdesignsystem.com/guidelines/messaging/components/banners/).\n */\n\nvar Alert = /*#__PURE__*/function (_React$Component) {\n  _inherits(Alert, _React$Component);\n\n  var _super = _createSuper(Alert);\n\n  function Alert(props) {\n    var _this;\n\n    _classCallCheck(this, Alert);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"saveButtonRef\", function (component) {\n      _this.closeButton = component;\n\n      if (_this.state.isInitialRender) {\n        DOMElementFocus.storeActiveElement();\n\n        if (_this.closeButton) {\n          _this.closeButton.focus();\n        }\n\n        _this.setState({\n          isInitialRender: false\n        });\n      }\n    });\n\n    _this.state = {\n      isInitialRender: true\n    }; // `checkProps` issues warnings to developers about properties (similar to React's built in development tools)\n\n    checkProps(ALERT, props, componentDoc);\n    return _this;\n  }\n\n  _createClass(Alert, [{\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      DOMElementFocus.returnFocusToStoredElement();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      // Merge objects of strings with their default object\n      var assistiveText = assign({}, defaultProps.assistiveText, this.props.assistiveText);\n      var labels = assign({}, defaultProps.labels, this.props.labels); // BACKWARD COMPATIBILITY WITH NOTIFICATION\n\n      var heading = labels.heading || this.props.content; // eslint-disable-line react/prop-types\n\n      var onRequestClose = this.props.onRequestClose || this.props.onDismiss; // eslint-disable-line react/prop-types\n\n      var assistiveTextVariant = {\n        info: 'info',\n        warning: 'warning',\n        error: 'error',\n        offline: 'offline'\n      };\n      var defaultIcons = {\n        info: /*#__PURE__*/React.createElement(Icon, {\n          category: \"utility\",\n          name: \"info\"\n        }),\n        offline: /*#__PURE__*/React.createElement(Icon, {\n          category: \"utility\",\n          name: \"offline\"\n        }),\n        warning: /*#__PURE__*/React.createElement(Icon, {\n          category: \"utility\",\n          name: \"warning\"\n        }),\n        error: /*#__PURE__*/React.createElement(Icon, {\n          category: \"utility\",\n          name: \"error\"\n        })\n      };\n      var icon = this.props.icon ? this.props.icon : defaultIcons[this.props.variant]; // BACKWARD COMPATIBILITY WITH NOTIFICATION\n\n      if (this.props.iconName && this.props.iconCategory) {\n        // eslint-disable-line react/prop-types\n        icon = /*#__PURE__*/React.createElement(Icon, {\n          category: this.props.iconCategory,\n          name: this.props.iconName\n        });\n      }\n\n      var clonedIcon = /*#__PURE__*/React.cloneElement(icon, {\n        containerClassName: 'slds-m-right_x-small',\n        inverse: true,\n        size: 'x-small'\n      });\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: classNames('slds-notify slds-notify_alert slds-theme_alert-texture', {\n          'slds-theme_info': this.props.variant === 'info',\n          'slds-theme_warning': this.props.variant === 'warning',\n          'slds-theme_error': this.props.variant === 'error',\n          'slds-theme_offline': this.props.variant === 'offline'\n        }, this.props.className),\n        role: \"alert\",\n        style: this.props.style\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"slds-assistive-text\"\n      }, assistiveTextVariant[this.props.variant]), clonedIcon, /*#__PURE__*/React.createElement(\"h2\", null, heading, ' ', labels.headingLink ? /*#__PURE__*/React.createElement(\"a\", {\n        onClick: EventUtil.trappedHandler(this.props.onClickHeadingLink),\n        href: \"#\"\n      }, labels.headingLink) : null), this.props.dismissible ? /*#__PURE__*/React.createElement(Button, {\n        assistiveText: {\n          icon: assistiveText.closeButton\n        },\n        buttonRef: this.saveButtonRef,\n        className: \"slds-notify__close\",\n        iconCategory: \"utility\",\n        iconName: \"close\",\n        iconSize: \"medium\",\n        inverse: true,\n        onClick: onRequestClose,\n        title: assistiveText.closeButton,\n        variant: \"icon\"\n      }) : null);\n    }\n  }]);\n\n  return Alert;\n}(React.Component);\n\nAlert.defaultProps = defaultProps;\nAlert.displayName = ALERT;\nAlert.propTypes = propTypes;\nexport default Alert;","map":{"version":3,"sources":["../../../.tmp-es/components/alert/index.jsx"],"names":["propTypes","assistiveText","closeButton","PropTypes","className","dismissible","icon","labels","heading","headingLink","onClickHeadingLink","onRequestClose","style","variant","isRequired","defaultProps","Alert","React","Component","isInitialRender","checkProps","DOMElementFocus","assign","assistiveTextVariant","info","warning","error","offline","defaultIcons","iconName","clonedIcon","containerClassName","inverse","size","classNames","EventUtil"],"mappings":"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","sourcesContent":["/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\n// # Alert Component\n\n// Implements the [Alert design pattern](https://lightningdesignsystem.com/components/alert/) in React.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport assign from 'lodash.assign';\nimport classNames from '../../utilities/class-names';\nimport Button from '../button';\nimport Icon from '../icon';\nimport checkProps from './check-props';\nimport componentDoc from './component.json';\nimport { ALERT } from '../../utilities/constants';\nimport DOMElementFocus from '../../utilities/dom-element-focus';\nimport EventUtil from '../../utilities/event';\n\nconst propTypes = {\n\t/**\n\t * **Assistive text for accessibility**\n\t * This object is merged with the default props object on every render.\n\t * * `closeButton`: This is a visually hidden label for the close button.\n\t * _Tested with snapshot testing._\n\t */\n\tassistiveText: PropTypes.shape({\n\t\tcloseButton: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n\t}),\n\t/**\n\t * CSS classes to be added to tag with `.slds-notify_alert`. Uses `classNames` [API](https://github.com/JedWatson/classnames).\n\t * _Tested with snapshot testing._\n\t */\n\tclassName: PropTypes.oneOfType([\n\t\tPropTypes.array,\n\t\tPropTypes.object,\n\t\tPropTypes.string,\n\t]),\n\t/**\n\t * Allows user to click a close button. Banners should be dismissible only if they communicate future impact to the system,\n\t * _Tested with snapshot testing._\n\t */\n\tdismissible: PropTypes.bool,\n\t/**\n\t * Icon of type `~/components/icon`. This icon will be cloned and additional props appended. The default icons are:\n\t * * info variant: `utility:info`\n\t * * error variant: `utility:error`\n\t * * offline variant: `utility:offline`\n\t * * warning variant: `utility:warning`\n\t *\n\t * _Tested with snapshot testing._\n\t */\n\ticon: PropTypes.node,\n\t/**\n\t * **Text labels for internationalization**\n\t * This object is merged with the default props object on every render.\n\t * * `heading`: text within heading tag\n\t * * `headingLink`: Text of link that triggers `onClickHeadingLink`. Inline links should pass a keyed array of React components into `labels.heading`.\n\t *\n\t * _Tested with snapshot testing._\n\t */\n\tlabels: PropTypes.shape({\n\t\theading: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n\t\theadingLink: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n\t}),\n\t/**\n\t * Triggered by link. _Tested with Mocha testing._\n\t */\n\tonClickHeadingLink: PropTypes.func,\n\t/**\n\t * Triggered by close button. This is a controlled component. _Tested with Mocha testing._\n\t */\n\tonRequestClose: PropTypes.func,\n\t/**\n\t * Custom styles to be passed to the component. _Tested with Mocha testing._\n\t */\n\tstyle: PropTypes.object,\n\t/**\n\t * The type of alert. _Tested with snapshot testing._\n\t */\n\tvariant: PropTypes.oneOf(['error', 'info', 'offline', 'warning']).isRequired,\n};\n\nconst defaultProps = {\n\tassistiveText: {\n\t\tcloseButton: 'Close',\n\t},\n\tlabels: {},\n\tvariant: 'info',\n};\n\n/**\n * Alert banners communicate a state that affects the entire system, not just a feature or page. It persists over a session and appears without the user initiating the action. View [banner guidelines](https://www.lightningdesignsystem.com/guidelines/messaging/components/banners/).\n */\n\nclass Alert extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tisInitialRender: true,\n\t\t};\n\n\t\t// `checkProps` issues warnings to developers about properties (similar to React's built in development tools)\n\t\tcheckProps(ALERT, props, componentDoc);\n\t}\n\n\tcomponentWillUnmount() {\n\t\tDOMElementFocus.returnFocusToStoredElement();\n\t}\n\n\tsaveButtonRef = (component) => {\n\t\tthis.closeButton = component;\n\t\tif (this.state.isInitialRender) {\n\t\t\tDOMElementFocus.storeActiveElement();\n\t\t\tif (this.closeButton) {\n\t\t\t\tthis.closeButton.focus();\n\t\t\t}\n\t\t\tthis.setState({ isInitialRender: false });\n\t\t}\n\t};\n\n\trender() {\n\t\t// Merge objects of strings with their default object\n\t\tconst assistiveText = assign(\n\t\t\t{},\n\t\t\tdefaultProps.assistiveText,\n\t\t\tthis.props.assistiveText\n\t\t);\n\t\tconst labels = assign({}, defaultProps.labels, this.props.labels);\n\n\t\t// BACKWARD COMPATIBILITY WITH NOTIFICATION\n\t\tconst heading = labels.heading || this.props.content; // eslint-disable-line react/prop-types\n\t\tconst onRequestClose = this.props.onRequestClose || this.props.onDismiss; // eslint-disable-line react/prop-types\n\n\t\tconst assistiveTextVariant = {\n\t\t\tinfo: 'info',\n\t\t\twarning: 'warning',\n\t\t\terror: 'error',\n\t\t\toffline: 'offline',\n\t\t};\n\n\t\tconst defaultIcons = {\n\t\t\tinfo: <Icon category=\"utility\" name=\"info\" />,\n\t\t\toffline: <Icon category=\"utility\" name=\"offline\" />,\n\t\t\twarning: <Icon category=\"utility\" name=\"warning\" />,\n\t\t\terror: <Icon category=\"utility\" name=\"error\" />,\n\t\t};\n\n\t\tlet icon = this.props.icon\n\t\t\t? this.props.icon\n\t\t\t: defaultIcons[this.props.variant];\n\n\t\t// BACKWARD COMPATIBILITY WITH NOTIFICATION\n\t\tif (this.props.iconName && this.props.iconCategory) {\n\t\t\t// eslint-disable-line react/prop-types\n\t\t\ticon = (\n\t\t\t\t<Icon category={this.props.iconCategory} name={this.props.iconName} />\n\t\t\t);\n\t\t}\n\n\t\tconst clonedIcon = React.cloneElement(icon, {\n\t\t\tcontainerClassName: 'slds-m-right_x-small',\n\t\t\tinverse: true,\n\t\t\tsize: 'x-small',\n\t\t});\n\n\t\treturn (\n\t\t\t<div\n\t\t\t\tclassName={classNames(\n\t\t\t\t\t'slds-notify slds-notify_alert slds-theme_alert-texture',\n\t\t\t\t\t{\n\t\t\t\t\t\t'slds-theme_info': this.props.variant === 'info',\n\t\t\t\t\t\t'slds-theme_warning': this.props.variant === 'warning',\n\t\t\t\t\t\t'slds-theme_error': this.props.variant === 'error',\n\t\t\t\t\t\t'slds-theme_offline': this.props.variant === 'offline',\n\t\t\t\t\t},\n\t\t\t\t\tthis.props.className\n\t\t\t\t)}\n\t\t\t\trole=\"alert\"\n\t\t\t\tstyle={this.props.style}\n\t\t\t>\n\t\t\t\t<span className=\"slds-assistive-text\">\n\t\t\t\t\t{assistiveTextVariant[this.props.variant]}\n\t\t\t\t</span>\n\t\t\t\t{clonedIcon}\n\t\t\t\t<h2>\n\t\t\t\t\t{heading}{' '}\n\t\t\t\t\t{labels.headingLink ? (\n\t\t\t\t\t\t<a\n\t\t\t\t\t\t\tonClick={EventUtil.trappedHandler(this.props.onClickHeadingLink)}\n\t\t\t\t\t\t\thref=\"#\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{labels.headingLink}\n\t\t\t\t\t\t</a>\n\t\t\t\t\t) : null}\n\t\t\t\t</h2>\n\t\t\t\t{this.props.dismissible ? (\n\t\t\t\t\t<Button\n\t\t\t\t\t\tassistiveText={{ icon: assistiveText.closeButton }}\n\t\t\t\t\t\tbuttonRef={this.saveButtonRef}\n\t\t\t\t\t\tclassName=\"slds-notify__close\"\n\t\t\t\t\t\ticonCategory=\"utility\"\n\t\t\t\t\t\ticonName=\"close\"\n\t\t\t\t\t\ticonSize=\"medium\"\n\t\t\t\t\t\tinverse\n\t\t\t\t\t\tonClick={onRequestClose}\n\t\t\t\t\t\ttitle={assistiveText.closeButton}\n\t\t\t\t\t\tvariant=\"icon\"\n\t\t\t\t\t/>\n\t\t\t\t) : null}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nAlert.defaultProps = defaultProps;\nAlert.displayName = ALERT;\nAlert.propTypes = propTypes;\n\nexport default Alert;\n"]},"metadata":{},"sourceType":"module"}