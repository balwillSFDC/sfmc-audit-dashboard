{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n/* eslint-disable no-else-return */\n\n/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n// # Tabs Component\n// Implements the [Tabs design pattern](https://www.lightningdesignsystem.com/components/tabs/) in React.\n// ## Dependencies\n// ### React\n\n\nimport React from 'react';\nimport PropTypes from 'prop-types'; // ### shortid\n// `shortid` is a short, non-sequential, url-friendly, unique id generator. It is used here to provide unique strings for the HTML attribute `id` on the Tabs components. It is only used if the `id` prop is not provided on the man <Tabs /> component.\n\nimport shortid from 'shortid'; // ### classNames\n\nimport classNames from 'classnames'; // ### isFunction\n\nimport isFunction from 'lodash.isfunction'; // Child components\n\nimport TabsList from './private/tabs-list';\nimport Tab from './private/tab';\nimport TabPanel from './private/tab-panel'; // ## Constants\n\nimport { TABS } from '../../utilities/constants'; // ### Event Helpers\n\nimport KEYS from '../../utilities/key-code';\nimport EventUtil from '../../utilities/event'; // Determine if a node from event.target is a Tab element\n\nfunction isTabNode(node) {\n  return node.nodeName === 'A' && node.getAttribute('role') === 'tab' || node.nodeName === 'LI' && (node.classList.contains('slds-tabs_default__item') || node.classList.contains('slds-tabs_scoped__item') || node.classList.contains('slds-vertical-tabs__nav-item'));\n} // Determine if a tab node is disabled\n\n\nfunction isTabDisabled(node) {\n  if (node.classList && node.classList.contains('slds-disabled')) {\n    return true;\n  } else if (node.getAttribute) {\n    return node.getAttribute('aria-disabled') === 'true';\n  }\n\n  return !!node.props.disabled;\n}\n/**\n * Tabs keeps related content in a single container that is shown and hidden through navigation.\n */\n\n\nvar displayName = TABS;\nvar propTypes = {\n  /**\n   * HTML `id` attribute of primary element that has `.slds-tabs_default` on it. Optional: If one is not supplied, a `shortid` will be created.\n   */\n  id: PropTypes.string,\n\n  /**\n   * The `children` are the actual tabs and panels to be displayed.\n   *\n   * Note that the structure of the `<Tabs />` component **does not** correspond to the DOM structure that is rendered. The `<Tabs />` component requires one or more children of type `<TabsPanel />`, which themselves require a `label` property which will be what shows in the `<Tab />` and has `children`, which end up being the _contents of the tab's corresponding panel_.\n   *\n   * The component iterates through each `<TabsPanel />` and rendering one `<Tab />` and one `<TabPanel />` for each of them. The tab(s) end up being children of the `<TabsList />`.\n   *\n   * ```\n   * <Tabs>\n   * \t<TabsPanel label=\"Tab 1\">\n   * \t\t<div>\n   * \t\t\t<h2 className=\"slds-text-heading_medium\">This is my tab 1 contents!</h2>\n   * \t\t\t<p>They show when you click the first tab.</p>\n   * \t\t</div>\n   * \t</TabsPanel>\n   * \t<TabsPanel label=\"Tab 2\">\n   * \t\t<div>\n   * \t\t\t<h2 className=\"slds-text-heading_medium\">This is my tab 2 contents!</h2>\n   * \t\t\t<p>They show when you click the second tab.</p>\n   * \t\t</div>\n   * \t</TabsPanel>\n   * </Tabs>\n   * ```\n   */\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node, PropTypes.element]).isRequired,\n\n  /**\n   * Class names to be added to the container element and is passed along to its children.\n   */\n  className: PropTypes.oneOfType([PropTypes.array, PropTypes.object, PropTypes.string]),\n\n  /**\n   * The Tab (and corresponding TabPanel) that is selected when the component first renders. Defaults to `0`.\n   */\n  defaultSelectedIndex: PropTypes.number,\n\n  /**\n   * This function triggers when a tab is selected.\n   */\n  onSelect: PropTypes.func,\n\n  /**\n   * If the Tabs should be scoped, vertical, or default (default value)\n   */\n  variant: PropTypes.oneOf(['default', 'scoped', 'vertical']),\n\n  /**\n   * The Tab (and corresponding TabPanel) that is currently selected.\n   */\n  selectedIndex: PropTypes.number\n};\nvar defaultProps = {\n  defaultSelectedIndex: 0,\n  variant: 'default'\n};\n/**\n * A tab keeps related content in a single container that is shown and hidden through navigation.\n */\n\nvar Tabs = /*#__PURE__*/function (_React$Component) {\n  _inherits(Tabs, _React$Component);\n\n  var _super = _createSuper(Tabs);\n\n  function Tabs(props) {\n    var _this;\n\n    _classCallCheck(this, Tabs);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"handleClick\", function (e) {\n      var node = e.target;\n      /* eslint-disable no-cond-assign, fp/no-loops */\n\n      do {\n        if (_this.isTabFromContainer(node)) {\n          if (isTabDisabled(node)) {\n            return;\n          }\n\n          var parentNode = node.parentNode; // eslint-disable-line prefer-destructuring\n\n          if (parentNode.nodeName === 'LI') {\n            node = node.parentNode;\n            parentNode = node.parentNode; // eslint-disable-line prefer-destructuring\n          }\n\n          var index = [].slice.call(parentNode.children).indexOf(node);\n\n          _this.setSelected(index);\n\n          return;\n        }\n      } while ((node = node.parentNode) !== null);\n      /* eslint-enable no-cond-assign */\n\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleKeyDown\", function (event) {\n      if (_this.isTabFromContainer(event.target)) {\n        var index = _this.getSelectedIndex();\n\n        var preventDefault = false;\n\n        if (event.keyCode === KEYS.LEFT || event.keyCode === KEYS.UP) {\n          // Select next tab to the left\n          index = _this.getPrevTab(index);\n          preventDefault = true;\n        } else if (event.keyCode === KEYS.RIGHT || event.keyCode === KEYS.DOWN) {\n          // Select next tab to the right\n          index = _this.getNextTab(index);\n          preventDefault = true;\n        } // Prevent any dumn scrollbars from moving around as we type.\n\n\n        if (preventDefault) {\n          EventUtil.trap(event);\n        }\n\n        _this.setSelected(index, true);\n      }\n    });\n\n    _this.tabs = []; // If no `id` is supplied in the props we generate one. An HTML ID is _required_ for several elements in a tabs component in order to leverage ARIA attributes for accessibility.\n\n    _this.generatedId = shortid.generate();\n    _this.flavor = _this.getVariant();\n    _this.state = {\n      selectedIndex: props.defaultSelectedIndex\n    };\n    return _this;\n  }\n\n  _createClass(Tabs, [{\n    key: \"getNextTab\",\n    value: function getNextTab(index) {\n      var count = this.getTabsCount(); // Look for non-disabled tab from index to the last tab on the right\n      // eslint-disable-next-line no-plusplus\n      // eslint-disable-next-line no-plusplus, fp/no-loops\n\n      for (var i = index + 1; i < count; i++) {\n        var tab = this.getTab(i);\n\n        if (!isTabDisabled(tab)) {\n          return i;\n        }\n      } // If no tab found, continue searching from first on left to index\n      // eslint-disable-next-line no-plusplus, fp/no-loops\n\n\n      for (var _i = 0; _i < index; _i++) {\n        var _tab = this.getTab(_i);\n\n        if (!isTabDisabled(_tab)) {\n          return _i;\n        }\n      } // No tabs are disabled, return index\n\n\n      return index;\n    }\n  }, {\n    key: \"getPanelsCount\",\n    value: function getPanelsCount() {\n      return this.props.children ? React.Children.count(this.props.children) : 0;\n    }\n  }, {\n    key: \"getPrevTab\",\n    value: function getPrevTab(index) {\n      var i = index; // Look for non-disabled tab from index to first tab on the left\n      // eslint-disable-next-line fp/no-loops, no-plusplus\n\n      while (i--) {\n        var tab = this.getTab(i);\n\n        if (!isTabDisabled(tab)) {\n          return i;\n        }\n      } // If no tab found, continue searching from last tab on right to index\n\n\n      i = this.getTabsCount(); // eslint-disable-next-line fp/no-loops, no-plusplus\n\n      while (i-- > index) {\n        var _tab2 = this.getTab(i);\n\n        if (!isTabDisabled(_tab2)) {\n          return i;\n        }\n      } // No tabs are disabled, return index\n\n\n      return index;\n    }\n  }, {\n    key: \"getSelectedIndex\",\n    value: function getSelectedIndex() {\n      return Number.isInteger(this.props.selectedIndex) ? this.props.selectedIndex : this.state.selectedIndex;\n    }\n  }, {\n    key: \"getTab\",\n    value: function getTab(index) {\n      return this.tabs[index].tab;\n    }\n  }, {\n    key: \"getTabNode\",\n    value: function getTabNode(index) {\n      return this.tabs[index].node;\n    }\n  }, {\n    key: \"getTabsCount\",\n    value: function getTabsCount() {\n      return this.props.children ? React.Children.count(this.props.children) : 0;\n    }\n  }, {\n    key: \"getVariant\",\n    value: function getVariant() {\n      return this.props.variant || 'default';\n    }\n  }, {\n    key: \"setSelected\",\n    value: function setSelected(index, focus) {\n      // Check index boundary\n      if (index < 0 || index >= this.getTabsCount()) {\n        return;\n      } // Keep reference to last index for event handler\n\n\n      var last = this.getSelectedIndex();\n      /**\n       * This is a temporary solution that could be broken in the future without notification,\n       * since this component is not a controlled component and only relies on internal state.\n       * If this breaks in the future an alternative way to control the state from outside the\n       * component should be present.\n       * */\n\n      var shouldContinue; // Call change event handler\n\n      if (isFunction(this.props.onSelect)) {\n        shouldContinue = this.props.onSelect(index, last);\n      } // Don't update the state if nothing has changed\n\n\n      if (shouldContinue !== false && index !== this.state.selectedIndex) {\n        this.setState({\n          selectedIndex: index,\n          focus: focus === true\n        });\n      }\n    }\n  }, {\n    key: \"isTabFromContainer\",\n\n    /**\n     * Determine if a node from event.target is a Tab element for the current Tabs container.\n     * If the clicked element is not a Tab, it returns false.\n     * If it finds another Tabs container between the Tab and `this`, it returns false.\n     */\n    value: function isTabFromContainer(node) {\n      // Return immediately if the clicked element is not a Tab. This prevents tab panel content from selecting a tab.\n      if (!isTabNode(node)) {\n        return false;\n      } // Check if the first occurrence of a Tabs container is `this` one.\n\n\n      var nodeAncestor = node.parentElement;\n\n      do {\n        if (nodeAncestor === this.tabsNode) return true;else if (nodeAncestor.getAttribute('data-tabs')) break;\n        nodeAncestor = nodeAncestor.parentElement;\n      } while (nodeAncestor);\n\n      return false;\n    }\n  }, {\n    key: \"renderTabPanels\",\n    value: function renderTabPanels(parentId) {\n      var _this2 = this;\n\n      var children = React.Children.toArray(this.props.children);\n      var selectedIndex = this.getSelectedIndex();\n      var result = null;\n      result = children.map(function (child, index) {\n        var tabId = \"\".concat(parentId, \"-slds-tabs_tab-\").concat(index);\n        var id = \"\".concat(parentId, \"-slds-tabs_panel-\").concat(index);\n        var selected = selectedIndex === index;\n\n        var variant = _this2.getVariant();\n\n        return /*#__PURE__*/React.createElement(TabPanel, {\n          key: child.key,\n          selected: selected,\n          id: id,\n          tabId: tabId,\n          variant: variant\n        }, children[index]);\n      });\n      return result;\n    }\n  }, {\n    key: \"renderTabsList\",\n    value: function renderTabsList(parentId) {\n      var _this3 = this;\n\n      var children = React.Children.toArray(this.props.children);\n      return (\n        /*#__PURE__*/\n        // `parentId` gets consumed by TabsList, adding a suffix of `-tabs__nav`\n        React.createElement(TabsList, {\n          id: parentId,\n          variant: this.getVariant()\n        }, children.map(function (child, index) {\n          var id = \"\".concat(parentId, \"-slds-tabs_tab-\").concat(index);\n          var panelId = \"\".concat(parentId, \"-slds-tabs_panel-\").concat(index);\n          var selected = _this3.getSelectedIndex() === index;\n          var focus = selected && _this3.state.focus;\n\n          var variant = _this3.getVariant();\n\n          return /*#__PURE__*/React.createElement(Tab, {\n            key: child.key,\n            ref: function ref(node) {\n              _this3.tabs[index] = {\n                tab: child,\n                node: node\n              };\n\n              if (_this3.state.focus) {\n                _this3.setState({\n                  focus: false\n                });\n              }\n            },\n            focus: focus,\n            selected: selected,\n            id: id,\n            panelId: panelId,\n            disabled: child.props.disabled,\n            variant: variant,\n            hasError: child.props.hasError,\n            assistiveText: child.props.assistiveText\n          }, child.props.label);\n        }))\n      );\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var _this$props = this.props,\n          className = _this$props.className,\n          _this$props$id = _this$props.id,\n          id = _this$props$id === void 0 ? this.generatedId : _this$props$id,\n          _this$props$variant = _this$props.variant,\n          variant = _this$props$variant === void 0 ? this.getVariant : _this$props$variant;\n      return (\n        /*#__PURE__*/\n\n        /* eslint-disable jsx-a11y/no-static-element-interactions */\n        React.createElement(\"div\", {\n          id: id,\n          className: classNames({\n            'slds-tabs_default': variant === 'default',\n            'slds-tabs_scoped': variant === 'scoped',\n            'slds-vertical-tabs': variant === 'vertical'\n          }, className),\n          onClick: this.handleClick,\n          onKeyDown: this.handleKeyDown,\n          \"data-tabs\": true,\n          ref: function ref(node) {\n            _this4.tabsNode = node;\n          }\n        }, this.renderTabsList(id), this.renderTabPanels(id))\n      );\n    }\n  }]);\n\n  return Tabs;\n}(React.Component);\n\nTabs.displayName = displayName;\nTabs.propTypes = propTypes;\nTabs.defaultProps = defaultProps;\nexport default Tabs;","map":{"version":3,"sources":["../../../.tmp-es/components/tabs/index.jsx"],"names":["node","displayName","propTypes","id","PropTypes","children","className","defaultSelectedIndex","onSelect","variant","selectedIndex","number","defaultProps","Tabs","React","Component","shortid","props","index","count","i","tab","isTabDisabled","Number","focus","last","isFunction","shouldContinue","e","parentNode","event","preventDefault","KEYS","EventUtil","isTabNode","nodeAncestor","parentId","result","tabId","selected","child","panelId","assistiveText","classNames"],"mappings":"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","sourcesContent":["/* eslint-disable no-else-return */\n/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\n// # Tabs Component\n\n// Implements the [Tabs design pattern](https://www.lightningdesignsystem.com/components/tabs/) in React.\n\n// ## Dependencies\n\n// ### React\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\n// ### shortid\n// `shortid` is a short, non-sequential, url-friendly, unique id generator. It is used here to provide unique strings for the HTML attribute `id` on the Tabs components. It is only used if the `id` prop is not provided on the man <Tabs /> component.\nimport shortid from 'shortid';\n\n// ### classNames\nimport classNames from 'classnames';\n\n// ### isFunction\nimport isFunction from 'lodash.isfunction';\n\n// Child components\nimport TabsList from './private/tabs-list';\nimport Tab from './private/tab';\nimport TabPanel from './private/tab-panel';\n\n// ## Constants\nimport { TABS } from '../../utilities/constants';\n\n// ### Event Helpers\nimport KEYS from '../../utilities/key-code';\nimport EventUtil from '../../utilities/event';\n\n// Determine if a node from event.target is a Tab element\nfunction isTabNode(node) {\n\treturn (\n\t\t(node.nodeName === 'A' && node.getAttribute('role') === 'tab') ||\n\t\t(node.nodeName === 'LI' &&\n\t\t\t(node.classList.contains('slds-tabs_default__item') ||\n\t\t\t\tnode.classList.contains('slds-tabs_scoped__item') ||\n\t\t\t\tnode.classList.contains('slds-vertical-tabs__nav-item')))\n\t);\n}\n\n// Determine if a tab node is disabled\nfunction isTabDisabled(node) {\n\tif (node.classList && node.classList.contains('slds-disabled')) {\n\t\treturn true;\n\t} else if (node.getAttribute) {\n\t\treturn node.getAttribute('aria-disabled') === 'true';\n\t}\n\n\treturn !!node.props.disabled;\n}\n\n/**\n * Tabs keeps related content in a single container that is shown and hidden through navigation.\n */\nconst displayName = TABS;\nconst propTypes = {\n\t/**\n\t * HTML `id` attribute of primary element that has `.slds-tabs_default` on it. Optional: If one is not supplied, a `shortid` will be created.\n\t */\n\tid: PropTypes.string,\n\n\t/**\n\t * The `children` are the actual tabs and panels to be displayed.\n\t *\n\t * Note that the structure of the `<Tabs />` component **does not** correspond to the DOM structure that is rendered. The `<Tabs />` component requires one or more children of type `<TabsPanel />`, which themselves require a `label` property which will be what shows in the `<Tab />` and has `children`, which end up being the _contents of the tab's corresponding panel_.\n\t *\n\t * The component iterates through each `<TabsPanel />` and rendering one `<Tab />` and one `<TabPanel />` for each of them. The tab(s) end up being children of the `<TabsList />`.\n\t *\n\t * ```\n\t * <Tabs>\n\t * \t<TabsPanel label=\"Tab 1\">\n\t * \t\t<div>\n\t * \t\t\t<h2 className=\"slds-text-heading_medium\">This is my tab 1 contents!</h2>\n\t * \t\t\t<p>They show when you click the first tab.</p>\n\t * \t\t</div>\n\t * \t</TabsPanel>\n\t * \t<TabsPanel label=\"Tab 2\">\n\t * \t\t<div>\n\t * \t\t\t<h2 className=\"slds-text-heading_medium\">This is my tab 2 contents!</h2>\n\t * \t\t\t<p>They show when you click the second tab.</p>\n\t * \t\t</div>\n\t * \t</TabsPanel>\n\t * </Tabs>\n\t * ```\n\t */\n\tchildren: PropTypes.oneOfType([\n\t\tPropTypes.arrayOf(PropTypes.node),\n\t\tPropTypes.node,\n\t\tPropTypes.element,\n\t]).isRequired,\n\n\t/**\n\t * Class names to be added to the container element and is passed along to its children.\n\t */\n\tclassName: PropTypes.oneOfType([\n\t\tPropTypes.array,\n\t\tPropTypes.object,\n\t\tPropTypes.string,\n\t]),\n\n\t/**\n\t * The Tab (and corresponding TabPanel) that is selected when the component first renders. Defaults to `0`.\n\t */\n\tdefaultSelectedIndex: PropTypes.number,\n\n\t/**\n\t * This function triggers when a tab is selected.\n\t */\n\tonSelect: PropTypes.func,\n\n\t/**\n\t * If the Tabs should be scoped, vertical, or default (default value)\n\t */\n\tvariant: PropTypes.oneOf(['default', 'scoped', 'vertical']),\n\n\t/**\n\t * The Tab (and corresponding TabPanel) that is currently selected.\n\t */\n\tselectedIndex: PropTypes.number,\n};\nconst defaultProps = {\n\tdefaultSelectedIndex: 0,\n\tvariant: 'default',\n};\n\n/**\n * A tab keeps related content in a single container that is shown and hidden through navigation.\n */\nclass Tabs extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.tabs = [];\n\n\t\t// If no `id` is supplied in the props we generate one. An HTML ID is _required_ for several elements in a tabs component in order to leverage ARIA attributes for accessibility.\n\t\tthis.generatedId = shortid.generate();\n\t\tthis.flavor = this.getVariant();\n\t\tthis.state = {\n\t\t\tselectedIndex: props.defaultSelectedIndex,\n\t\t};\n\t}\n\n\tgetNextTab(index) {\n\t\tconst count = this.getTabsCount();\n\n\t\t// Look for non-disabled tab from index to the last tab on the right\n\t\t// eslint-disable-next-line no-plusplus\n\t\t// eslint-disable-next-line no-plusplus, fp/no-loops\n\t\tfor (let i = index + 1; i < count; i++) {\n\t\t\tconst tab = this.getTab(i);\n\t\t\tif (!isTabDisabled(tab)) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\n\t\t// If no tab found, continue searching from first on left to index\n\t\t// eslint-disable-next-line no-plusplus, fp/no-loops\n\t\tfor (let i = 0; i < index; i++) {\n\t\t\tconst tab = this.getTab(i);\n\t\t\tif (!isTabDisabled(tab)) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\n\t\t// No tabs are disabled, return index\n\t\treturn index;\n\t}\n\n\tgetPanelsCount() {\n\t\treturn this.props.children ? React.Children.count(this.props.children) : 0;\n\t}\n\n\tgetPrevTab(index) {\n\t\tlet i = index;\n\n\t\t// Look for non-disabled tab from index to first tab on the left\n\t\t// eslint-disable-next-line fp/no-loops, no-plusplus\n\t\twhile (i--) {\n\t\t\tconst tab = this.getTab(i);\n\t\t\tif (!isTabDisabled(tab)) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\n\t\t// If no tab found, continue searching from last tab on right to index\n\t\ti = this.getTabsCount();\n\t\t// eslint-disable-next-line fp/no-loops, no-plusplus\n\t\twhile (i-- > index) {\n\t\t\tconst tab = this.getTab(i);\n\t\t\tif (!isTabDisabled(tab)) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\n\t\t// No tabs are disabled, return index\n\t\treturn index;\n\t}\n\n\tgetSelectedIndex() {\n\t\treturn Number.isInteger(this.props.selectedIndex)\n\t\t\t? this.props.selectedIndex\n\t\t\t: this.state.selectedIndex;\n\t}\n\n\tgetTab(index) {\n\t\treturn this.tabs[index].tab;\n\t}\n\n\tgetTabNode(index) {\n\t\treturn this.tabs[index].node;\n\t}\n\n\tgetTabsCount() {\n\t\treturn this.props.children ? React.Children.count(this.props.children) : 0;\n\t}\n\n\tgetVariant() {\n\t\treturn this.props.variant || 'default';\n\t}\n\n\tsetSelected(index, focus) {\n\t\t// Check index boundary\n\t\tif (index < 0 || index >= this.getTabsCount()) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Keep reference to last index for event handler\n\t\tconst last = this.getSelectedIndex();\n\n\t\t/**\n\t\t * This is a temporary solution that could be broken in the future without notification,\n\t\t * since this component is not a controlled component and only relies on internal state.\n\t\t * If this breaks in the future an alternative way to control the state from outside the\n\t\t * component should be present.\n\t\t * */\n\t\tlet shouldContinue;\n\t\t// Call change event handler\n\t\tif (isFunction(this.props.onSelect)) {\n\t\t\tshouldContinue = this.props.onSelect(index, last);\n\t\t}\n\n\t\t// Don't update the state if nothing has changed\n\t\tif (shouldContinue !== false && index !== this.state.selectedIndex) {\n\t\t\tthis.setState({ selectedIndex: index, focus: focus === true });\n\t\t}\n\t}\n\n\thandleClick = (e) => {\n\t\tlet node = e.target;\n\t\t/* eslint-disable no-cond-assign, fp/no-loops */\n\t\tdo {\n\t\t\tif (this.isTabFromContainer(node)) {\n\t\t\t\tif (isTabDisabled(node)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tlet parentNode = node.parentNode; // eslint-disable-line prefer-destructuring\n\n\t\t\t\tif (parentNode.nodeName === 'LI') {\n\t\t\t\t\tnode = node.parentNode;\n\t\t\t\t\tparentNode = node.parentNode; // eslint-disable-line prefer-destructuring\n\t\t\t\t}\n\n\t\t\t\tconst index = [].slice.call(parentNode.children).indexOf(node);\n\t\t\t\tthis.setSelected(index);\n\t\t\t\treturn;\n\t\t\t}\n\t\t} while ((node = node.parentNode) !== null);\n\t\t/* eslint-enable no-cond-assign */\n\t};\n\n\thandleKeyDown = (event) => {\n\t\tif (this.isTabFromContainer(event.target)) {\n\t\t\tlet index = this.getSelectedIndex();\n\t\t\tlet preventDefault = false;\n\n\t\t\tif (event.keyCode === KEYS.LEFT || event.keyCode === KEYS.UP) {\n\t\t\t\t// Select next tab to the left\n\t\t\t\tindex = this.getPrevTab(index);\n\t\t\t\tpreventDefault = true;\n\t\t\t} else if (event.keyCode === KEYS.RIGHT || event.keyCode === KEYS.DOWN) {\n\t\t\t\t// Select next tab to the right\n\t\t\t\tindex = this.getNextTab(index);\n\t\t\t\tpreventDefault = true;\n\t\t\t}\n\n\t\t\t// Prevent any dumn scrollbars from moving around as we type.\n\t\t\tif (preventDefault) {\n\t\t\t\tEventUtil.trap(event);\n\t\t\t}\n\n\t\t\tthis.setSelected(index, true);\n\t\t}\n\t};\n\n\t/**\n\t * Determine if a node from event.target is a Tab element for the current Tabs container.\n\t * If the clicked element is not a Tab, it returns false.\n\t * If it finds another Tabs container between the Tab and `this`, it returns false.\n\t */\n\tisTabFromContainer(node) {\n\t\t// Return immediately if the clicked element is not a Tab. This prevents tab panel content from selecting a tab.\n\t\tif (!isTabNode(node)) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Check if the first occurrence of a Tabs container is `this` one.\n\t\tlet nodeAncestor = node.parentElement;\n\t\tdo {\n\t\t\tif (nodeAncestor === this.tabsNode) return true;\n\t\t\telse if (nodeAncestor.getAttribute('data-tabs')) break;\n\t\t\tnodeAncestor = nodeAncestor.parentElement;\n\t\t} while (nodeAncestor);\n\n\t\treturn false;\n\t}\n\n\trenderTabPanels(parentId) {\n\t\tconst children = React.Children.toArray(this.props.children);\n\t\tconst selectedIndex = this.getSelectedIndex();\n\t\tlet result = null;\n\n\t\tresult = children.map((child, index) => {\n\t\t\tconst tabId = `${parentId}-slds-tabs_tab-${index}`;\n\t\t\tconst id = `${parentId}-slds-tabs_panel-${index}`;\n\t\t\tconst selected = selectedIndex === index;\n\t\t\tconst variant = this.getVariant();\n\n\t\t\treturn (\n\t\t\t\t<TabPanel\n\t\t\t\t\tkey={child.key}\n\t\t\t\t\tselected={selected}\n\t\t\t\t\tid={id}\n\t\t\t\t\ttabId={tabId}\n\t\t\t\t\tvariant={variant}\n\t\t\t\t>\n\t\t\t\t\t{children[index]}\n\t\t\t\t</TabPanel>\n\t\t\t);\n\t\t});\n\t\treturn result;\n\t}\n\n\trenderTabsList(parentId) {\n\t\tconst children = React.Children.toArray(this.props.children);\n\n\t\treturn (\n\t\t\t// `parentId` gets consumed by TabsList, adding a suffix of `-tabs__nav`\n\t\t\t<TabsList id={parentId} variant={this.getVariant()}>\n\t\t\t\t{children.map((child, index) => {\n\t\t\t\t\tconst id = `${parentId}-slds-tabs_tab-${index}`;\n\t\t\t\t\tconst panelId = `${parentId}-slds-tabs_panel-${index}`;\n\t\t\t\t\tconst selected = this.getSelectedIndex() === index;\n\t\t\t\t\tconst focus = selected && this.state.focus;\n\t\t\t\t\tconst variant = this.getVariant();\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Tab\n\t\t\t\t\t\t\tkey={child.key}\n\t\t\t\t\t\t\tref={(node) => {\n\t\t\t\t\t\t\t\tthis.tabs[index] = { tab: child, node };\n\t\t\t\t\t\t\t\tif (this.state.focus) {\n\t\t\t\t\t\t\t\t\tthis.setState({ focus: false });\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tfocus={focus}\n\t\t\t\t\t\t\tselected={selected}\n\t\t\t\t\t\t\tid={id}\n\t\t\t\t\t\t\tpanelId={panelId}\n\t\t\t\t\t\t\tdisabled={child.props.disabled}\n\t\t\t\t\t\t\tvariant={variant}\n\t\t\t\t\t\t\thasError={child.props.hasError}\n\t\t\t\t\t\t\tassistiveText={child.props.assistiveText}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{child.props.label}\n\t\t\t\t\t\t</Tab>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</TabsList>\n\t\t);\n\t}\n\n\trender() {\n\t\tconst {\n\t\t\tclassName,\n\t\t\tid = this.generatedId,\n\t\t\tvariant = this.getVariant,\n\t\t} = this.props;\n\n\t\treturn (\n\t\t\t/* eslint-disable jsx-a11y/no-static-element-interactions */\n\t\t\t<div\n\t\t\t\tid={id}\n\t\t\t\tclassName={classNames(\n\t\t\t\t\t{\n\t\t\t\t\t\t'slds-tabs_default': variant === 'default',\n\t\t\t\t\t\t'slds-tabs_scoped': variant === 'scoped',\n\t\t\t\t\t\t'slds-vertical-tabs': variant === 'vertical',\n\t\t\t\t\t},\n\t\t\t\t\tclassName\n\t\t\t\t)}\n\t\t\t\tonClick={this.handleClick}\n\t\t\t\tonKeyDown={this.handleKeyDown}\n\t\t\t\tdata-tabs\n\t\t\t\tref={(node) => {\n\t\t\t\t\tthis.tabsNode = node;\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{/* eslint-enable jsx-a11y/no-static-element-interactions */}\n\t\t\t\t{this.renderTabsList(id)}\n\t\t\t\t{this.renderTabPanels(id)}\n\t\t\t</div>\n\t\t);\n\t}\n}\nTabs.displayName = displayName;\nTabs.propTypes = propTypes;\nTabs.defaultProps = defaultProps;\n\nexport default Tabs;\n"]},"metadata":{},"sourceType":"module"}