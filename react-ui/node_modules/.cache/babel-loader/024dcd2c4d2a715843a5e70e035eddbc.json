{"ast":null,"code":"/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\n/* eslint-disable import/no-mutable-exports */\n\n/* eslint-disable max-len */\nimport deprecatedProperty from '../../utilities/warning/deprecated-property';\nimport sunsetProperty from '../../utilities/warning/sunset-property'; // import oneOfRequiredProperty from '../../../utilities/warning/one-of-required-property';\n\nimport onlyOneOfProperties from '../../utilities/warning/only-one-of-properties';\nimport getComponentDocFn from '../../utilities/get-component-doc';\nimport { INPUT, SEARCH } from '../../utilities/constants';\n\nvar checkProps = function checkPropsFunction() {};\n\nif (process.env.NODE_ENV !== 'production') {\n  checkProps = function checkPropsFunction(COMPONENT) {\n    var props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var jsonDoc = arguments.length > 2 ? arguments[2] : undefined;\n    var createDocUrl = getComponentDocFn(jsonDoc);\n\n    if (COMPONENT === INPUT) {\n      var iconDeprecatedMessage = \"Please use `iconLeft` and `iconRight` to pass in a customized <Icon> component. \".concat(createDocUrl()); // Deprecated and changed to another property\n\n      deprecatedProperty(COMPONENT, props.assistiveText && props.assistiveText.fieldLevelHelpButton, 'assistiveText.fieldLevelHelpButton', undefined, \"Please pass a `Tooltip` component into `fieldLevelHelpTooltip` with `assistiveText.triggerLearnMoreIcon`.\");\n      deprecatedProperty(COMPONENT, props.iconCategory, 'iconCategory', undefined, iconDeprecatedMessage);\n      deprecatedProperty(COMPONENT, props.iconName, 'iconName', undefined, iconDeprecatedMessage);\n      deprecatedProperty(COMPONENT, props.iconPosition, 'iconPosition', undefined, iconDeprecatedMessage);\n      deprecatedProperty(COMPONENT, props.iconAssistiveText, 'iconAssistiveText', undefined, iconDeprecatedMessage);\n      deprecatedProperty(COMPONENT, props.onIconClick, 'onIconClick', undefined, iconDeprecatedMessage);\n\n      if (typeof props.assistiveText === 'string') {\n        sunsetProperty(COMPONENT, props.assistiveText, 'assistiveText', \"AssistiveText as a string has been deprecated and is now an object to allow for multiple uses in the component. Please use either assistiveText.label or assistiveText.spinner. \".concat(createDocUrl('assistiveText')));\n      }\n\n      onlyOneOfProperties(COMPONENT, {\n        'assistiveText.label': props.assistiveText && props.assistiveText.label,\n        label: props.label\n      }, createDocUrl('assistiveText'));\n      onlyOneOfProperties(COMPONENT, {\n        fixedTextLeft: props.fixedTextLeft,\n        fixedTextRight: props.fixedTextRight\n      }, createDocUrl('assistiveText'));\n      /*\n      * Once we support horizontal labels, then I think we can enable this check\n      *\n      if (!props.inlineEditTrigger) {\n      \toneOfRequiredProperty(COMPONENT, {\n      \t\tassistiveText: props.assistiveText,\n      \t\tlabel: props.label\n      \t});\n      }\n      */\n    } else if (COMPONENT === SEARCH) {\n      if (typeof props.assistiveText === 'string') {\n        sunsetProperty(COMPONENT, props.assistiveText, 'assistiveText', \"`assistiveText` as a string has been deprecated and is now an object to allow for multiple uses in the component. Please use `assistiveText.label` instead. \".concat(createDocUrl('assistiveText')));\n      }\n    }\n  };\n}\n\nexport default checkProps;","map":{"version":3,"sources":["../../../.tmp-es/components/input/check-props.js"],"names":["checkProps","process","props","jsonDoc","createDocUrl","getComponentDocFn","COMPONENT","iconDeprecatedMessage","deprecatedProperty","sunsetProperty","onlyOneOfProperties","label","fixedTextLeft","fixedTextRight"],"mappings":"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","sourcesContent":["/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n/* eslint-disable import/no-mutable-exports */\n/* eslint-disable max-len */\n\nimport deprecatedProperty from '../../utilities/warning/deprecated-property';\nimport sunsetProperty from '../../utilities/warning/sunset-property';\n// import oneOfRequiredProperty from '../../../utilities/warning/one-of-required-property';\nimport onlyOneOfProperties from '../../utilities/warning/only-one-of-properties';\nimport getComponentDocFn from '../../utilities/get-component-doc';\n\nimport { INPUT, SEARCH } from '../../utilities/constants';\n\nlet checkProps = function checkPropsFunction() {};\n\nif (process.env.NODE_ENV !== 'production') {\n\tcheckProps = function checkPropsFunction(COMPONENT, props = {}, jsonDoc) {\n\t\tconst createDocUrl = getComponentDocFn(jsonDoc);\n\n\t\tif (COMPONENT === INPUT) {\n\t\t\tconst iconDeprecatedMessage = `Please use \\`iconLeft\\` and \\`iconRight\\` to pass in a customized <Icon> component. ${createDocUrl()}`;\n\n\t\t\t// Deprecated and changed to another property\n\t\t\tdeprecatedProperty(\n\t\t\t\tCOMPONENT,\n\t\t\t\tprops.assistiveText && props.assistiveText.fieldLevelHelpButton,\n\t\t\t\t'assistiveText.fieldLevelHelpButton',\n\t\t\t\tundefined,\n\t\t\t\t`Please pass a \\`Tooltip\\` component into \\`fieldLevelHelpTooltip\\` with \\`assistiveText.triggerLearnMoreIcon\\`.`\n\t\t\t);\n\t\t\tdeprecatedProperty(\n\t\t\t\tCOMPONENT,\n\t\t\t\tprops.iconCategory,\n\t\t\t\t'iconCategory',\n\t\t\t\tundefined,\n\t\t\t\ticonDeprecatedMessage\n\t\t\t);\n\t\t\tdeprecatedProperty(\n\t\t\t\tCOMPONENT,\n\t\t\t\tprops.iconName,\n\t\t\t\t'iconName',\n\t\t\t\tundefined,\n\t\t\t\ticonDeprecatedMessage\n\t\t\t);\n\t\t\tdeprecatedProperty(\n\t\t\t\tCOMPONENT,\n\t\t\t\tprops.iconPosition,\n\t\t\t\t'iconPosition',\n\t\t\t\tundefined,\n\t\t\t\ticonDeprecatedMessage\n\t\t\t);\n\t\t\tdeprecatedProperty(\n\t\t\t\tCOMPONENT,\n\t\t\t\tprops.iconAssistiveText,\n\t\t\t\t'iconAssistiveText',\n\t\t\t\tundefined,\n\t\t\t\ticonDeprecatedMessage\n\t\t\t);\n\t\t\tdeprecatedProperty(\n\t\t\t\tCOMPONENT,\n\t\t\t\tprops.onIconClick,\n\t\t\t\t'onIconClick',\n\t\t\t\tundefined,\n\t\t\t\ticonDeprecatedMessage\n\t\t\t);\n\n\t\t\tif (typeof props.assistiveText === 'string') {\n\t\t\t\tsunsetProperty(\n\t\t\t\t\tCOMPONENT,\n\t\t\t\t\tprops.assistiveText,\n\t\t\t\t\t'assistiveText',\n\t\t\t\t\t`AssistiveText as a string has been deprecated and is now an object to allow for multiple uses in the component. Please use either assistiveText.label or assistiveText.spinner. ${createDocUrl(\n\t\t\t\t\t\t'assistiveText'\n\t\t\t\t\t)}`\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tonlyOneOfProperties(\n\t\t\t\tCOMPONENT,\n\t\t\t\t{\n\t\t\t\t\t'assistiveText.label':\n\t\t\t\t\t\tprops.assistiveText && props.assistiveText.label,\n\t\t\t\t\tlabel: props.label,\n\t\t\t\t},\n\t\t\t\tcreateDocUrl('assistiveText')\n\t\t\t);\n\n\t\t\tonlyOneOfProperties(\n\t\t\t\tCOMPONENT,\n\t\t\t\t{\n\t\t\t\t\tfixedTextLeft: props.fixedTextLeft,\n\t\t\t\t\tfixedTextRight: props.fixedTextRight,\n\t\t\t\t},\n\t\t\t\tcreateDocUrl('assistiveText')\n\t\t\t);\n\n\t\t\t/*\n\t\t\t* Once we support horizontal labels, then I think we can enable this check\n\t\t\t*\n\t\t\tif (!props.inlineEditTrigger) {\n\t\t\t\toneOfRequiredProperty(COMPONENT, {\n\t\t\t\t\tassistiveText: props.assistiveText,\n\t\t\t\t\tlabel: props.label\n\t\t\t\t});\n\t\t\t}\n\t\t\t*/\n\t\t} else if (COMPONENT === SEARCH) {\n\t\t\tif (typeof props.assistiveText === 'string') {\n\t\t\t\tsunsetProperty(\n\t\t\t\t\tCOMPONENT,\n\t\t\t\t\tprops.assistiveText,\n\t\t\t\t\t'assistiveText',\n\t\t\t\t\t`\\`assistiveText\\` as a string has been deprecated and is now an object to allow for multiple uses in the component. Please use \\`assistiveText.label\\` instead. ${createDocUrl(\n\t\t\t\t\t\t'assistiveText'\n\t\t\t\t\t)}`\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t};\n}\n\nexport default checkProps;\n"]},"metadata":{},"sourceType":"module"}