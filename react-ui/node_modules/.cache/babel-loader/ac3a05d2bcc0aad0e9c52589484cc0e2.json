{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\n/* eslint-disable jsx-a11y/no-noninteractive-tabindex */\n// # App Launcher Tile Component\n// ## Dependencies\n\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames'; // This component's `checkProps` which issues warnings to developers about properties when in development mode (similar to React's built in development tools)\n\nimport checkProps from './check-props';\nimport componentDoc from './component.json'; // ## Children\n\nimport Button from '../button';\nimport Highlighter from '../utilities/highlighter';\nimport Tooltip from '../tooltip';\nimport Truncate from '../utilities/truncate';\nimport { APP_LAUNCHER_TILE } from '../../utilities/constants';\nvar propTypes = {\n  /**\n   * **Assistive text for accessibility.**\n   * * `dragIconText`: Text that describes the purpose of the drag handle icon.\n   */\n  assistiveText: PropTypes.shape({\n    dragIconText: PropTypes.string\n  }),\n\n  /**\n   * Class names to be added to the tile.\n   */\n  className: PropTypes.oneOfType([PropTypes.array, PropTypes.object, PropTypes.string]),\n\n  /**\n   * The description of the app. Not visible on small tiles.\n   */\n  description: PropTypes.string,\n\n  /**\n   * Heading for app description. NOTE: this prop is DEPRECATED and use should be avoided\n   */\n  descriptionHeading: PropTypes.string,\n\n  /**\n   * The `href` attribute of the tile. Please pass in bookmarkable URLs from your routing library. If the `onClick` callback is specified this URL will be prevented from changing the browser's location.\n   */\n  href: PropTypes.string,\n\n  /**\n   * Background color to be used on the icon. Only applied if iconNode is undefined\n   */\n  iconBackgroundColor: PropTypes.string,\n\n  /**\n   * Icon node for app tile. Takes priority over `iconText`\n   */\n  iconNode: PropTypes.node,\n\n  /**\n   * Text to be used as an icon. Only renders if iconNode is undefined\n   */\n  iconText: PropTypes.string,\n\n  /**\n   * Open the More Tooltip\n   */\n  isOpenTooltip: PropTypes.bool,\n\n  /**\n   * The localized text for the \"More information\" tooltip.\n   */\n  moreLabel: PropTypes.string,\n\n  /**\n   * Function that will be executed when clicking on a tile\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * Text used to highlight content in app tiles\n   */\n  search: PropTypes.string,\n\n  /**\n   * App name for the tile's title.\n   */\n  title: PropTypes.string.isRequired // Future feature: add Highlighter to Truncate text (https://github.com/ShinyChang/React-Text-Truncate/issues/32)\n\n};\nvar defaultProps = {\n  assistiveText: {\n    dragIconText: 'Reorder'\n  },\n  href: '#',\n  moreLabel: ' More'\n};\n/**\n * App Launcher Tiles provide information and links to a user's apps\n */\n\nvar AppLauncherTile = /*#__PURE__*/function (_React$Component) {\n  _inherits(AppLauncherTile, _React$Component);\n\n  var _super = _createSuper(AppLauncherTile);\n\n  function AppLauncherTile(props) {\n    var _this;\n\n    _classCallCheck(this, AppLauncherTile);\n\n    _this = _super.call(this, props); // `checkProps` issues warnings to developers about properties (similar to React's built in development tools)\n\n    _defineProperty(_assertThisInitialized(_this), \"handleClick\", function (event) {\n      if (_this.props.onClick) {\n        event.preventDefault();\n\n        _this.props.onClick(event, {\n          href: _this.props.href\n        });\n      }\n    });\n\n    checkProps(APP_LAUNCHER_TILE, props, componentDoc);\n    return _this;\n  }\n\n  _createClass(AppLauncherTile, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var dragButtonAriaProps = {\n        'aria-pressed': false\n      };\n      var iconStyles = {};\n\n      if (this.props.iconBackgroundColor) {\n        iconStyles.backgroundColor = this.props.iconBackgroundColor;\n      }\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: classNames('slds-app-launcher__tile slds-text-link_reset slds-is-draggable', // NOTE: while the draggable class is here for stylistic purposes, the draggable attribute is not present as draggability has not been implemented yet\n        this.props.className),\n        onClick: this.handleClick,\n        role: \"button\",\n        tabIndex: \"0\"\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"slds-app-launcher__tile-figure\"\n      }, this.props.iconNode || /*#__PURE__*/React.createElement(\"span\", {\n        className: \"slds-avatar slds-avatar_large\"\n      }, /*#__PURE__*/React.createElement(\"abbr\", {\n        className: \"slds-avatar__initials slds-icon-custom-27\",\n        style: iconStyles,\n        title: this.props.title\n      }, this.props.iconText)), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"slds-m-top_xxx-small\"\n      }, /*#__PURE__*/React.createElement(Button, _extends({\n        assistiveText: {\n          icon: this.props.assistiveText.dragIconText\n        },\n        iconCategory: \"utility\",\n        iconName: \"rows\",\n        title: this.props.assistiveText.dragIconText,\n        variant: \"icon\"\n      }, dragButtonAriaProps)))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"slds-app-launcher__tile-body\"\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        href: this.props.href,\n        onClick: function onClick(event) {\n          return _this2.props.href === '#' && event.preventDefault();\n        }\n      }, /*#__PURE__*/React.createElement(Highlighter, {\n        search: this.props.search\n      }, this.props.title)), /*#__PURE__*/React.createElement(Truncate, {\n        line: 2,\n        prefix: this.props.descriptionHeading && this.props.descriptionHeading.toUpperCase(),\n        suffix: this.props.moreLabel,\n        text: this.props.description,\n        textTruncateChild: /*#__PURE__*/React.createElement(Tooltip, {\n          align: \"bottom\",\n          content: /*#__PURE__*/React.createElement(Highlighter, {\n            search: this.props.search\n          }, this.props.description),\n          isOpen: this.props.isOpenTooltip\n        }, /*#__PURE__*/React.createElement(Button, {\n          className: \"slds-button_reset slds-text-link\",\n          variant: \"base\"\n        }, this.props.moreLabel)),\n        wrapper: function wrapper(text, textTruncateChild) {\n          return /*#__PURE__*/React.createElement(React.Fragment, null, _this2.props.descriptionHeading &&\n          /*#__PURE__*/\n          // inline style override\n          React.createElement(\"div\", {\n            className: \"slds-text-heading_label\",\n            style: {\n              letterSpacing: '0.025rem'\n            }\n          }, _this2.props.descriptionHeading, ' '), /*#__PURE__*/React.createElement(Highlighter, {\n            search: _this2.props.search\n          }, text), textTruncateChild && ' ', textTruncateChild);\n        }\n      })));\n    }\n  }]);\n\n  return AppLauncherTile;\n}(React.Component);\n\nAppLauncherTile.displayName = APP_LAUNCHER_TILE;\nAppLauncherTile.defaultProps = defaultProps;\nAppLauncherTile.propTypes = propTypes;\nexport default AppLauncherTile;","map":{"version":3,"sources":["../../../.tmp-es/components/app-launcher/tile.jsx"],"names":["propTypes","assistiveText","dragIconText","PropTypes","string","className","description","descriptionHeading","href","iconBackgroundColor","iconNode","iconText","isOpenTooltip","moreLabel","onClick","search","title","defaultProps","AppLauncherTile","React","Component","checkProps","event","dragButtonAriaProps","iconStyles","classNames","icon","letterSpacing","textTruncateChild"],"mappings":"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","sourcesContent":["/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\n/* eslint-disable jsx-a11y/no-noninteractive-tabindex */\n\n// # App Launcher Tile Component\n\n// ## Dependencies\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\n// This component's `checkProps` which issues warnings to developers about properties when in development mode (similar to React's built in development tools)\nimport checkProps from './check-props';\nimport componentDoc from './component.json';\n\n// ## Children\nimport Button from '../button';\nimport Highlighter from '../utilities/highlighter';\nimport Tooltip from '../tooltip';\nimport Truncate from '../utilities/truncate';\n\nimport { APP_LAUNCHER_TILE } from '../../utilities/constants';\n\nconst propTypes = {\n\t/**\n\t * **Assistive text for accessibility.**\n\t * * `dragIconText`: Text that describes the purpose of the drag handle icon.\n\t */\n\tassistiveText: PropTypes.shape({\n\t\tdragIconText: PropTypes.string,\n\t}),\n\t/**\n\t * Class names to be added to the tile.\n\t */\n\tclassName: PropTypes.oneOfType([\n\t\tPropTypes.array,\n\t\tPropTypes.object,\n\t\tPropTypes.string,\n\t]),\n\t/**\n\t * The description of the app. Not visible on small tiles.\n\t */\n\tdescription: PropTypes.string,\n\t/**\n\t * Heading for app description. NOTE: this prop is DEPRECATED and use should be avoided\n\t */\n\tdescriptionHeading: PropTypes.string,\n\t/**\n\t * The `href` attribute of the tile. Please pass in bookmarkable URLs from your routing library. If the `onClick` callback is specified this URL will be prevented from changing the browser's location.\n\t */\n\thref: PropTypes.string,\n\t/**\n\t * Background color to be used on the icon. Only applied if iconNode is undefined\n\t */\n\ticonBackgroundColor: PropTypes.string,\n\t/**\n\t * Icon node for app tile. Takes priority over `iconText`\n\t */\n\ticonNode: PropTypes.node,\n\t/**\n\t * Text to be used as an icon. Only renders if iconNode is undefined\n\t */\n\ticonText: PropTypes.string,\n\t/**\n\t * Open the More Tooltip\n\t */\n\tisOpenTooltip: PropTypes.bool,\n\t/**\n\t * The localized text for the \"More information\" tooltip.\n\t */\n\tmoreLabel: PropTypes.string,\n\t/**\n\t * Function that will be executed when clicking on a tile\n\t */\n\tonClick: PropTypes.func,\n\t/**\n\t * Text used to highlight content in app tiles\n\t */\n\tsearch: PropTypes.string,\n\t/**\n\t * App name for the tile's title.\n\t */\n\ttitle: PropTypes.string.isRequired,\n\n\t// Future feature: add Highlighter to Truncate text (https://github.com/ShinyChang/React-Text-Truncate/issues/32)\n};\n\nconst defaultProps = {\n\tassistiveText: {\n\t\tdragIconText: 'Reorder',\n\t},\n\thref: '#',\n\tmoreLabel: ' More',\n};\n\n/**\n * App Launcher Tiles provide information and links to a user's apps\n */\nclass AppLauncherTile extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\t// `checkProps` issues warnings to developers about properties (similar to React's built in development tools)\n\t\tcheckProps(APP_LAUNCHER_TILE, props, componentDoc);\n\t}\n\n\thandleClick = (event) => {\n\t\tif (this.props.onClick) {\n\t\t\tevent.preventDefault();\n\t\t\tthis.props.onClick(event, { href: this.props.href });\n\t\t}\n\t};\n\n\trender() {\n\t\tconst dragButtonAriaProps = { 'aria-pressed': false };\n\t\tconst iconStyles = {};\n\n\t\tif (this.props.iconBackgroundColor) {\n\t\t\ticonStyles.backgroundColor = this.props.iconBackgroundColor;\n\t\t}\n\n\t\treturn (\n\t\t\t<div\n\t\t\t\tclassName={classNames(\n\t\t\t\t\t'slds-app-launcher__tile slds-text-link_reset slds-is-draggable', // NOTE: while the draggable class is here for stylistic purposes, the draggable attribute is not present as draggability has not been implemented yet\n\t\t\t\t\tthis.props.className\n\t\t\t\t)}\n\t\t\t\tonClick={this.handleClick}\n\t\t\t\trole=\"button\"\n\t\t\t\ttabIndex=\"0\"\n\t\t\t>\n\t\t\t\t<div className=\"slds-app-launcher__tile-figure\">\n\t\t\t\t\t{this.props.iconNode || (\n\t\t\t\t\t\t<span className=\"slds-avatar slds-avatar_large\">\n\t\t\t\t\t\t\t<abbr\n\t\t\t\t\t\t\t\tclassName=\"slds-avatar__initials slds-icon-custom-27\"\n\t\t\t\t\t\t\t\tstyle={iconStyles}\n\t\t\t\t\t\t\t\ttitle={this.props.title}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{this.props.iconText}\n\t\t\t\t\t\t\t</abbr>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t)}\n\t\t\t\t\t<div className=\"slds-m-top_xxx-small\">\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tassistiveText={{\n\t\t\t\t\t\t\t\ticon: this.props.assistiveText.dragIconText,\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\ticonCategory=\"utility\"\n\t\t\t\t\t\t\ticonName=\"rows\"\n\t\t\t\t\t\t\ttitle={this.props.assistiveText.dragIconText}\n\t\t\t\t\t\t\tvariant=\"icon\"\n\t\t\t\t\t\t\t{...dragButtonAriaProps}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"slds-app-launcher__tile-body\">\n\t\t\t\t\t<a\n\t\t\t\t\t\thref={this.props.href}\n\t\t\t\t\t\tonClick={(event) =>\n\t\t\t\t\t\t\tthis.props.href === '#' && event.preventDefault()\n\t\t\t\t\t\t}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Highlighter search={this.props.search}>\n\t\t\t\t\t\t\t{this.props.title}\n\t\t\t\t\t\t</Highlighter>\n\t\t\t\t\t</a>\n\t\t\t\t\t<Truncate\n\t\t\t\t\t\tline={2}\n\t\t\t\t\t\tprefix={\n\t\t\t\t\t\t\tthis.props.descriptionHeading &&\n\t\t\t\t\t\t\tthis.props.descriptionHeading.toUpperCase()\n\t\t\t\t\t\t}\n\t\t\t\t\t\tsuffix={this.props.moreLabel}\n\t\t\t\t\t\ttext={this.props.description}\n\t\t\t\t\t\ttextTruncateChild={\n\t\t\t\t\t\t\t<Tooltip\n\t\t\t\t\t\t\t\talign=\"bottom\"\n\t\t\t\t\t\t\t\tcontent={\n\t\t\t\t\t\t\t\t\t<Highlighter search={this.props.search}>\n\t\t\t\t\t\t\t\t\t\t{this.props.description}\n\t\t\t\t\t\t\t\t\t</Highlighter>\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tisOpen={this.props.isOpenTooltip}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tclassName=\"slds-button_reset slds-text-link\"\n\t\t\t\t\t\t\t\t\tvariant=\"base\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{this.props.moreLabel}\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t\t}\n\t\t\t\t\t\twrapper={(text, textTruncateChild) => (\n\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t{this.props.descriptionHeading && (\n\t\t\t\t\t\t\t\t\t// inline style override\n\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\tclassName=\"slds-text-heading_label\"\n\t\t\t\t\t\t\t\t\t\tstyle={{ letterSpacing: '0.025rem' }}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{this.props.descriptionHeading}{' '}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t<Highlighter search={this.props.search}>{text}</Highlighter>\n\t\t\t\t\t\t\t\t{textTruncateChild && ' '}\n\t\t\t\t\t\t\t\t{textTruncateChild}\n\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t)}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nAppLauncherTile.displayName = APP_LAUNCHER_TILE;\nAppLauncherTile.defaultProps = defaultProps;\nAppLauncherTile.propTypes = propTypes;\n\nexport default AppLauncherTile;\n"]},"metadata":{},"sourceType":"module"}