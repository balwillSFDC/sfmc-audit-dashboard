{"ast":null,"code":"function ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport EventUtil from '../../utilities/event';\nimport Icon from '../icon';\nimport { BUILDER_HEADER_NAV_LINK } from '../../utilities/constants';\nvar propTypes = {\n  /**\n   * **Assistive text for accessibility**\n   * This object is merged with the default props object on every render.\n   * * `icon`: Used for the icon next to the link text.\n   * * _Tested with snapshot testing._\n   */\n  assistiveText: PropTypes.shape({\n    icon: PropTypes.string\n  }),\n\n  /**\n   * Name of the icon category. Visit <a href=\"http://www.lightningdesignsystem.com/resources/icons\">Lightning Design System Icons</a> to reference icon categories.\n   */\n  iconCategory: PropTypes.oneOf(['action', 'custom', 'doctype', 'standard', 'utility']),\n\n  /**\n   * Name of the icon. Visit <a href=\"http://www.lightningdesignsystem.com/resources/icons\">Lightning Design System Icons</a> to reference icon names.\n   */\n  iconName: PropTypes.string,\n\n  /**\n   * Path to the icon. This will override any global icon settings.\n   */\n  iconPath: PropTypes.string,\n\n  /**\n   * Text for the link.\n   */\n  label: PropTypes.string,\n\n  /**\n   * Triggered when the link is clicked.\n   */\n  onClick: PropTypes.func\n};\nvar defaultProps = {\n  assistiveText: {},\n  iconCategory: '',\n  iconName: '',\n  label: ''\n};\n/**\n * A link within the navigation section of the header.\n */\n\nvar BuilderHeaderNavLink = function BuilderHeaderNavLink(props) {\n  var assistiveText = _objectSpread(_objectSpread({}, defaultProps.assistiveText), props.assistiveText);\n\n  return /*#__PURE__*/React.createElement(\"li\", {\n    className: \"slds-builder-header__nav-item\"\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    className: \"slds-builder-header__item-action slds-media slds-media_center\",\n    href: \"#\",\n    onClick: EventUtil.trappedHandler(props.onClick)\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"slds-media__figure\"\n  }, /*#__PURE__*/React.createElement(Icon, {\n    assistiveText: {\n      label: assistiveText.icon\n    },\n    category: props.iconCategory,\n    containerClassName: \"slds-icon_container slds-icon-utility-settings slds-current-color\",\n    name: props.iconName,\n    path: props.iconPath,\n    size: \"x-small\"\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"slds-media__body\"\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"slds-truncate\",\n    title: props.label\n  }, props.label))));\n};\n\nBuilderHeaderNavLink.displayName = BUILDER_HEADER_NAV_LINK;\nBuilderHeaderNavLink.propTypes = propTypes;\nexport default BuilderHeaderNavLink;","map":{"version":3,"sources":["../../../.tmp-es/components/builder-header/nav-link.jsx"],"names":["propTypes","assistiveText","icon","PropTypes","string","iconCategory","iconName","iconPath","label","onClick","func","defaultProps","BuilderHeaderNavLink","props","EventUtil"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAA,KAAA,MAAA,OAAA;AACA,OAAA,SAAA,MAAA,YAAA;AACA,OAAA,SAAA,MAAA,uBAAA;AAEA,OAAA,IAAA,MAAA,SAAA;AAEA,SAAA,uBAAA,QAAA,2BAAA;AAEA,IAAMA,SAAS,GAAG;AACjB;AACD;AACA;AACA;AACA;AACA;AACCC,EAAAA,aAAa,EAAE,SAAS,CAAT,KAAA,CAAgB;AAC9BC,IAAAA,IAAI,EAAEC,SAAS,CAACC;AADc,GAAhB,CAPE;;AAUjB;AACD;AACA;AACCC,EAAAA,YAAY,EAAEF,SAAS,CAATA,KAAAA,CAAgB,CAAA,QAAA,EAAA,QAAA,EAAA,SAAA,EAAA,UAAA,EAbb,SAaa,CAAhBA,CAbG;;AAoBjB;AACD;AACA;AACCG,EAAAA,QAAQ,EAAEH,SAAS,CAvBF,MAAA;;AAwBjB;AACD;AACA;AACCI,EAAAA,QAAQ,EAAEJ,SAAS,CA3BF,MAAA;;AA4BjB;AACD;AACA;AACCK,EAAAA,KAAK,EAAEL,SAAS,CA/BC,MAAA;;AAgCjB;AACD;AACA;AACCM,EAAAA,OAAO,EAAEN,SAAS,CAACO;AAnCF,CAAlB;AAsCA,IAAMC,YAAY,GAAG;AACpBV,EAAAA,aAAa,EADO,EAAA;AAEpBI,EAAAA,YAAY,EAFQ,EAAA;AAGpBC,EAAAA,QAAQ,EAHY,EAAA;AAIpBE,EAAAA,KAAK,EAAE;AAJa,CAArB;AAOA;AACA;AACA;;AACA,IAAMI,oBAAoB,GAAG,SAAvBA,oBAAuB,CAAA,KAAA,EAAW;AACvC,MAAMX,aAAa,GAAA,aAAA,CAAA,aAAA,CAAA,EAAA,EACfU,YAAY,CADG,aAAA,CAAA,EAEfE,KAAK,CAFT,aAAmB,CAAnB;;AAKA,SAAA,aACC,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA;AAAI,IAAA,SAAS,EAAC;AAAd,GAAA,EAAA,aACC,KAAA,CAAA,aAAA,CAAA,GAAA,EAAA;AACC,IAAA,SAAS,EADV,+DAAA;AAEC,IAAA,IAAI,EAFL,GAAA;AAGC,IAAA,OAAO,EAAEC,SAAS,CAATA,cAAAA,CAAyBD,KAAK,CAA9BC,OAAAA;AAHV,GAAA,EAAA,aAKC,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AAAM,IAAA,SAAS,EAAC;AAAhB,GAAA,EAAA,aACC,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA;AACC,IAAA,aAAa,EAAE;AAAEN,MAAAA,KAAK,EAAEP,aAAa,CAACC;AAAvB,KADhB;AAEC,IAAA,QAAQ,EAAEW,KAAK,CAFhB,YAAA;AAGC,IAAA,kBAAkB,EAHnB,mEAAA;AAIC,IAAA,IAAI,EAAEA,KAAK,CAJZ,QAAA;AAKC,IAAA,IAAI,EAAEA,KAAK,CALZ,QAAA;AAMC,IAAA,IAAI,EAAC;AANN,GAAA,CADD,CALD,EAAA,aAeC,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AAAM,IAAA,SAAS,EAAC;AAAhB,GAAA,EAAA,aACC,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AAAM,IAAA,SAAS,EAAf,eAAA;AAAgC,IAAA,KAAK,EAAEA,KAAK,CAACL;AAA7C,GAAA,EACEK,KAAK,CAnBX,KAkBI,CADD,CAfD,CADD,CADD;AAND,CAAA;;AAiCAD,oBAAoB,CAApBA,WAAAA,GAAAA,uBAAAA;AACAA,oBAAoB,CAApBA,SAAAA,GAAAA,SAAAA;AACA,eAAA,oBAAA","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport EventUtil from '../../utilities/event';\n\nimport Icon from '../icon';\n\nimport { BUILDER_HEADER_NAV_LINK } from '../../utilities/constants';\n\nconst propTypes = {\n\t/**\n\t * **Assistive text for accessibility**\n\t * This object is merged with the default props object on every render.\n\t * * `icon`: Used for the icon next to the link text.\n\t * * _Tested with snapshot testing._\n\t */\n\tassistiveText: PropTypes.shape({\n\t\ticon: PropTypes.string,\n\t}),\n\t/**\n\t * Name of the icon category. Visit <a href=\"http://www.lightningdesignsystem.com/resources/icons\">Lightning Design System Icons</a> to reference icon categories.\n\t */\n\ticonCategory: PropTypes.oneOf([\n\t\t'action',\n\t\t'custom',\n\t\t'doctype',\n\t\t'standard',\n\t\t'utility',\n\t]),\n\t/**\n\t * Name of the icon. Visit <a href=\"http://www.lightningdesignsystem.com/resources/icons\">Lightning Design System Icons</a> to reference icon names.\n\t */\n\ticonName: PropTypes.string,\n\t/**\n\t * Path to the icon. This will override any global icon settings.\n\t */\n\ticonPath: PropTypes.string,\n\t/**\n\t * Text for the link.\n\t */\n\tlabel: PropTypes.string,\n\t/**\n\t * Triggered when the link is clicked.\n\t */\n\tonClick: PropTypes.func,\n};\n\nconst defaultProps = {\n\tassistiveText: {},\n\ticonCategory: '',\n\ticonName: '',\n\tlabel: '',\n};\n\n/**\n * A link within the navigation section of the header.\n */\nconst BuilderHeaderNavLink = (props) => {\n\tconst assistiveText = {\n\t\t...defaultProps.assistiveText,\n\t\t...props.assistiveText,\n\t};\n\n\treturn (\n\t\t<li className=\"slds-builder-header__nav-item\">\n\t\t\t<a\n\t\t\t\tclassName=\"slds-builder-header__item-action slds-media slds-media_center\"\n\t\t\t\thref=\"#\"\n\t\t\t\tonClick={EventUtil.trappedHandler(props.onClick)}\n\t\t\t>\n\t\t\t\t<span className=\"slds-media__figure\">\n\t\t\t\t\t<Icon\n\t\t\t\t\t\tassistiveText={{ label: assistiveText.icon }}\n\t\t\t\t\t\tcategory={props.iconCategory}\n\t\t\t\t\t\tcontainerClassName=\"slds-icon_container slds-icon-utility-settings slds-current-color\"\n\t\t\t\t\t\tname={props.iconName}\n\t\t\t\t\t\tpath={props.iconPath}\n\t\t\t\t\t\tsize=\"x-small\"\n\t\t\t\t\t/>\n\t\t\t\t</span>\n\t\t\t\t<span className=\"slds-media__body\">\n\t\t\t\t\t<span className=\"slds-truncate\" title={props.label}>\n\t\t\t\t\t\t{props.label}\n\t\t\t\t\t</span>\n\t\t\t\t</span>\n\t\t\t</a>\n\t\t</li>\n\t);\n};\n\nBuilderHeaderNavLink.displayName = BUILDER_HEADER_NAV_LINK;\nBuilderHeaderNavLink.propTypes = propTypes;\nexport default BuilderHeaderNavLink;\n"]},"metadata":{},"sourceType":"module"}