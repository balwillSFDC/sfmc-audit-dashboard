{"ast":null,"code":"/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\n/* eslint-disable no-console */\n\n/**\n * This is a wrapper utility for logging messages to the\n\tuser. This is helpful in using the same examples\n\tfor the documentation site as for the Storybook examples.\n * @param  {Function} options.action function that outputs\n *   messages to Storybook\n * @param  {Event} options.event the browser event\n * @param  {String} options.eventName the name of the event\n * @param  {Object} options.data callback payload and data object\n * @param  {Function} options.customLog Custom logging function. This\n *   is helpful for Node debugging and removing console log from tests.\n */\nvar log = function log(_ref) {\n  var action = _ref.action,\n      event = _ref.event,\n      eventName = _ref.eventName,\n      data = _ref.data,\n      customLog = _ref.customLog;\n\n  if (customLog && event) {\n    customLog({\n      eventName: eventName,\n      event: event,\n      data: data\n    });\n  } else if (action && event) {\n    // https://github.com/storybooks/storybook/tree/master/addons/actions\n    action(eventName)(event, data);\n  } else if (console && console.log) {\n    console.log(eventName, event, data);\n  }\n};\n\nexport default log;","map":{"version":3,"sources":["../../.tmp-es/utilities/log.js"],"names":["log","action","event","eventName","data","customLog","console"],"mappings":"AAAA;;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAMA,GAAG,GAAG,SAANA,GAAM,CAAA,IAAA,EAAmD;AAAA,MAAhDC,MAAgD,GAAA,IAAA,CAAhDA,MAAgD;AAAA,MAAxCC,KAAwC,GAAA,IAAA,CAAxCA,KAAwC;AAAA,MAAjCC,SAAiC,GAAA,IAAA,CAAjCA,SAAiC;AAAA,MAAtBC,IAAsB,GAAA,IAAA,CAAtBA,IAAsB;AAAA,MAAhBC,SAAgB,GAAA,IAAA,CAAhBA,SAAgB;;AAC9D,MAAIA,SAAS,IAAb,KAAA,EAAwB;AACvBA,IAAAA,SAAS,CAAC;AAAEF,MAAAA,SAAS,EAAX,SAAA;AAAaD,MAAAA,KAAK,EAAlB,KAAA;AAAoBE,MAAAA,IAAI,EAAJA;AAApB,KAAD,CAATC;AADD,GAAA,MAEO,IAAIJ,MAAM,IAAV,KAAA,EAAqB;AAC3B;AACAA,IAAAA,MAAM,CAANA,SAAM,CAANA,CAAAA,KAAAA,EAAAA,IAAAA;AAFM,GAAA,MAGA,IAAIK,OAAO,IAAIA,OAAO,CAAtB,GAAA,EAA4B;AAClCA,IAAAA,OAAO,CAAPA,GAAAA,CAAAA,SAAAA,EAAAA,KAAAA,EAAAA,IAAAA;AACA;AARF,CAAA;;AAWA,eAAA,GAAA","sourcesContent":["/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\n/* eslint-disable no-console */\n\n/**\n * This is a wrapper utility for logging messages to the\n\tuser. This is helpful in using the same examples\n\tfor the documentation site as for the Storybook examples.\n * @param  {Function} options.action function that outputs\n *   messages to Storybook\n * @param  {Event} options.event the browser event\n * @param  {String} options.eventName the name of the event\n * @param  {Object} options.data callback payload and data object\n * @param  {Function} options.customLog Custom logging function. This\n *   is helpful for Node debugging and removing console log from tests.\n */\nconst log = ({ action, event, eventName, data, customLog }) => {\n\tif (customLog && event) {\n\t\tcustomLog({ eventName, event, data });\n\t} else if (action && event) {\n\t\t// https://github.com/storybooks/storybook/tree/master/addons/actions\n\t\taction(eventName)(event, data);\n\t} else if (console && console.log) {\n\t\tconsole.log(eventName, event, data);\n\t}\n};\n\nexport default log;\n"]},"metadata":{},"sourceType":"module"}