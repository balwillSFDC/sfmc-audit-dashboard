{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\n/* eslint-disable class-methods-use-this */\n\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport eventUtil from '../../utilities/event';\nimport { SPLIT_VIEW_LISTBOX } from '../../utilities/constants';\nimport Icon from '../icon';\nimport SplitViewListItemContent from './private/list-item-content';\nimport listItemWithContent from './private/list-item-with-content';\nexport var SORT_OPTIONS = Object.freeze({\n  UP: 'up',\n  DOWN: 'down'\n});\nvar propTypes = {\n  /**\n   * **Assistive text for accessibility**\n   * * `list`: aria label for the list\n   * * `sort`\n   *    * `sortedBy`: Clickable sort header for the list.\n   *    * `descending`: Descending sorting.\n   *    * `ascending`: Ascending sorting.\n   */\n  assistiveText: PropTypes.shape({\n    list: PropTypes.string,\n    sort: PropTypes.shape({\n      sortedBy: PropTypes.string,\n      descending: PropTypes.string,\n      ascending: PropTypes.string\n    }),\n    unreadItem: PropTypes.string\n  }),\n\n  /**\n   * CSS classes to be added to the parent `div` tag.\n   */\n  className: PropTypes.oneOfType([PropTypes.array, PropTypes.object, PropTypes.string]),\n\n  /**\n   * Event Callbacks\n   * * `onSelect`: Called when a list item is selected. Previously, this event was called when an item was focused. The UX pattern has changed and this event is now called on pressing enter or mouse click.\n   *    * event {object} List item click event\n   *    * Meta {object}\n   *       * selectedItems {array} List of selected items.\n   *       * item {object} Last selected item.\n   * * `onSort`: Called when the list is sorted.\n   *    * event {object} Sort click event\n   */\n  events: PropTypes.shape({\n    onSelect: PropTypes.func.isRequired,\n    onSort: PropTypes.func\n  }),\n\n  /**\n   * HTML id for component.\n   */\n  id: PropTypes.string,\n\n  /**\n   * **Text labels for internationalization**\n   * * `header`: This is the header of the list.\n   */\n  labels: PropTypes.shape({\n    header: PropTypes.string\n  }),\n\n  /**\n   * The direction of the sort arrow. Option are:\n   * * SORT_OPTIONS.UP: `up`\n   * * SORT_OPTIONS.DOWN: `down`\n   */\n  sortDirection: PropTypes.oneOf([SORT_OPTIONS.UP, SORT_OPTIONS.DOWN]),\n\n  /**\n   * Allows multiple item to be selection\n   */\n  multiple: PropTypes.bool,\n\n  /**\n   * The list of items.\n   * It is recommended that you have a unique `id` for each item.\n   */\n  options: PropTypes.array.isRequired,\n\n  /**\n   * Accepts an array of item objects. For single selection, pass in an array of one object.\n   */\n  selection: PropTypes.array,\n\n  /**\n   * Accepts an array of item objects. For single unread, pass in an array of one object.\n   */\n  unread: PropTypes.array,\n\n  /**\n   * Custom list item template for the list item content. The select and unread functionality wraps the custom list item.\n   * This should be a React component that accepts props.\n   */\n  listItem: PropTypes.func\n};\nvar defaultProps = {\n  assistiveText: {\n    list: 'Select an item to open it in a new workspace tab.',\n    sort: {\n      sortedBy: 'Sorted by',\n      descending: 'Descending',\n      ascending: 'Ascending'\n    }\n  },\n  events: {},\n  labels: {},\n  selection: [],\n  unread: []\n};\n/**\n * The menu with the ARIA role of a listbox.\n */\n\nvar SplitViewListbox = /*#__PURE__*/function (_React$Component) {\n  _inherits(SplitViewListbox, _React$Component);\n\n  var _super = _createSuper(SplitViewListbox);\n\n  function SplitViewListbox(props) {\n    var _this;\n\n    _classCallCheck(this, SplitViewListbox);\n\n    _this = _super.call(this, props);\n    _this.listItemComponents = {};\n    _this.state = {\n      currentSelectedItem: null,\n      currentFocusedListItem: {\n        index: 0,\n        item: null\n      }\n    }; // Generates the list item template\n\n    _this.ListItemWithContent = listItemWithContent(props.listItem || SplitViewListItemContent);\n    return _this;\n  }\n\n  _createClass(SplitViewListbox, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.focusFirstItem();\n    }\n  }, {\n    key: \"isListItemFocused\",\n    value: function isListItemFocused(item) {\n      return this.state.currentFocusedListItem.item === item;\n    }\n  }, {\n    key: \"isSelected\",\n    value: function isSelected(item) {\n      return this.props.selection.includes(item);\n    }\n  }, {\n    key: \"isUnread\",\n    value: function isUnread(item) {\n      return this.props.unread.includes(item);\n    }\n  }, {\n    key: \"handleKeyDown\",\n    value: function handleKeyDown(event) {\n      if (this.props.multiple && event.key === 'a' && event.ctrlKey) {\n        // select / deselect all\n        eventUtil.trap(event);\n\n        if (this.props.options === this.props.selection) {\n          this.deselectAllListItems(event);\n        } else {\n          this.selectAllListItems(event);\n        }\n      } else if (event.key === 'ArrowUp') {\n        eventUtil.trap(event);\n        this.moveToPreviousItem(event);\n      } else if (event.key === 'ArrowDown') {\n        eventUtil.trap(event);\n        this.moveToNextItem(event);\n      }\n    }\n  }, {\n    key: \"moveToNextItem\",\n    value: function moveToNextItem(event) {\n      var nextFocusIndex = this.state.currentFocusedListItem.index === this.props.options.length - 1 ? 0 : this.state.currentFocusedListItem.index + 1;\n      this.moveToIndex(event, nextFocusIndex);\n    }\n  }, {\n    key: \"moveToPreviousItem\",\n    value: function moveToPreviousItem(event) {\n      var previousFocusIndex = this.state.currentFocusedListItem.index === 0 ? this.props.options.length - 1 : this.state.currentFocusedListItem.index - 1;\n      this.moveToIndex(event, previousFocusIndex);\n    }\n  }, {\n    key: \"moveToIndex\",\n    value: function moveToIndex(event, index) {\n      var item = this.props.options[index];\n      this.focusItem(item);\n    }\n  }, {\n    key: \"focusFirstItem\",\n    value: function focusFirstItem() {\n      var _this2 = this;\n\n      var firstSelectedItem = this.props.options.find(function (item) {\n        return _this2.props.selection.includes(item);\n      }) || this.props.options[0];\n\n      if (firstSelectedItem) {\n        this.focusItem(firstSelectedItem, true);\n      }\n    }\n  }, {\n    key: \"focusItem\",\n    value: function focusItem(item, setDataOnly) {\n      var index = this.props.options.indexOf(item);\n\n      if (!setDataOnly) {\n        this.listItemComponents[index].focus();\n      }\n\n      this.setState({\n        currentFocusedListItem: {\n          index: index,\n          item: item\n        }\n      });\n    }\n  }, {\n    key: \"deselectAllListItems\",\n    value: function deselectAllListItems(event) {\n      this.setState({\n        currentSelectedItem: null\n      });\n      this.props.events.onSelect(event, {\n        selectedItems: [],\n        item: null\n      });\n    }\n  }, {\n    key: \"selectAllListItems\",\n    value: function selectAllListItems(event) {\n      this.props.events.onSelect(event, {\n        selectedItems: this.props.options,\n        item: this.state.currentSelectedItem\n      });\n    }\n  }, {\n    key: \"selectListItem\",\n    value: function selectListItem(item, event) {\n      var selectedItems = [item];\n\n      if (this.props.multiple) {\n        if (event.metaKey) {\n          selectedItems = this.props.selection.includes(item) ? this.props.selection.filter(function (i) {\n            return i !== item;\n          }) : [item].concat(_toConsumableArray(this.props.selection));\n        } else if (event.shiftKey) {\n          /* eslint-disable fp/no-mutating-methods */\n          var _sort = [this.props.options.indexOf(this.state.currentSelectedItem), this.props.options.indexOf(item)].sort(),\n              _sort2 = _slicedToArray(_sort, 2),\n              begin = _sort2[0],\n              end = _sort2[1];\n          /* eslint-enable fp/no-mutating-methods */\n\n\n          var addToSelection = this.props.options.slice(begin, end + 1);\n          selectedItems = [].concat(_toConsumableArray(addToSelection), _toConsumableArray(this.props.selection.filter(function (i) {\n            return !addToSelection.includes(i);\n          })));\n        }\n      }\n\n      this.setState({\n        currentSelectedItem: item\n      });\n      this.props.events.onSelect(event, {\n        selectedItems: selectedItems,\n        item: item\n      });\n    }\n  }, {\n    key: \"handleOnSelect\",\n    value: function handleOnSelect(event, _ref) {\n      var item = _ref.item;\n      this.selectListItem(item, event);\n      this.focusItem(item);\n    }\n  }, {\n    key: \"sortDirection\",\n    value: function sortDirection() {\n      return this.props.sortDirection ? /*#__PURE__*/React.createElement(Icon, {\n        category: \"utility\",\n        name: this.props.sortDirection === SORT_OPTIONS.DOWN ? 'arrowdown' : 'arrowup',\n        size: \"xx-small\",\n        className: \"slds-align-top\"\n      }) : null;\n    }\n  }, {\n    key: \"headerWrapper\",\n    value: function headerWrapper(children) {\n      return this.props.events.onSort ? /*#__PURE__*/React.createElement(\"a\", {\n        \"aria-live\": \"polite\",\n        style: {\n          borderTop: '0'\n        },\n        href: \"#\",\n        role: \"button\",\n        className: \"slds-split-view__list-header slds-grid slds-text-link_reset\",\n        onClick: eventUtil.trappedHandler(this.props.events.onSort)\n      }, children) : /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          borderTop: '0'\n        },\n        className: \"slds-split-view__list-header slds-grid\"\n      }, children);\n    }\n  }, {\n    key: \"header\",\n    value: function header() {\n      return this.props.labels.header ? this.headerWrapper( /*#__PURE__*/React.createElement(\"span\", {\n        \"aria-sort\": this.props.sortDirection === SORT_OPTIONS.DOWN ? this.props.assistiveText.sort.descending : this.props.assistiveText.sort.ascending\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"slds-assistive-text\"\n      }, this.props.assistiveText.sort.sortedBy, ': '), /*#__PURE__*/React.createElement(\"span\", null, this.props.labels.header, this.sortDirection()), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"slds-assistive-text\"\n      }, '- ', this.props.sortDirection === SORT_OPTIONS.DOWN ? this.props.assistiveText.sort.descending : this.props.assistiveText.sort.ascending))) : null;\n    }\n  }, {\n    key: \"addListItemComponent\",\n    value: function addListItemComponent(component, index) {\n      this.listItemComponents[index] = component;\n    }\n  }, {\n    key: \"listItems\",\n    value: function listItems() {\n      var _this3 = this;\n\n      var ListItemWithContent = this.ListItemWithContent;\n      return this.props.options.map(function (item, index) {\n        return /*#__PURE__*/React.createElement(ListItemWithContent, {\n          key: item.id || index,\n          assistiveText: {\n            unreadItem: _this3.props.assistiveText.unreadItem\n          },\n          listItemRef: function listItemRef(component) {\n            _this3.addListItemComponent(component, index);\n          },\n          item: item,\n          isFocused: _this3.isListItemFocused(item),\n          isSelected: _this3.isSelected(item),\n          isUnread: _this3.isUnread(item),\n          events: {\n            onClick: function onClick(event, meta) {\n              return _this3.handleOnSelect(event, meta);\n            }\n          },\n          multiple: _this3.props.multiple\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        id: this.props.id,\n        className: classNames('slds-grid slds-grid_vertical slds-scrollable_none', this.props.className)\n      }, this.header(), /*#__PURE__*/React.createElement(\"ul\", {\n        className: \"slds-scrollable_y\",\n        \"aria-label\": this.props.assistiveText.list,\n        \"aria-multiselectable\": this.props.multiple,\n        role: \"listbox\",\n        onKeyDown: function onKeyDown(event) {\n          return _this4.handleKeyDown(event);\n        }\n      }, this.listItems()));\n    }\n  }]);\n\n  return SplitViewListbox;\n}(React.Component);\n\n_defineProperty(SplitViewListbox, \"displayName\", SPLIT_VIEW_LISTBOX);\n\n_defineProperty(SplitViewListbox, \"propTypes\", propTypes);\n\n_defineProperty(SplitViewListbox, \"defaultProps\", defaultProps);\n\nexport default SplitViewListbox;","map":{"version":3,"sources":["../../../.tmp-es/components/split-view/listbox.jsx"],"names":["SORT_OPTIONS","UP","DOWN","propTypes","assistiveText","list","PropTypes","sort","sortedBy","descending","ascending","string","unreadItem","className","events","onSelect","onSort","func","id","labels","header","sortDirection","multiple","options","selection","unread","listItem","defaultProps","SplitViewListbox","React","Component","SPLIT_VIEW_LISTBOX","currentSelectedItem","currentFocusedListItem","index","item","listItemWithContent","props","event","eventUtil","nextFocusIndex","previousFocusIndex","firstSelectedItem","setDataOnly","selectedItems","i","begin","end","addToSelection","children","borderTop","component","ListItemWithContent","onClick","classNames"],"mappings":"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","sourcesContent":["/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\n/* eslint-disable class-methods-use-this */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport eventUtil from '../../utilities/event';\n\nimport { SPLIT_VIEW_LISTBOX } from '../../utilities/constants';\n\nimport Icon from '../icon';\nimport SplitViewListItemContent from './private/list-item-content';\nimport listItemWithContent from './private/list-item-with-content';\n\nexport const SORT_OPTIONS = Object.freeze({\n\tUP: 'up',\n\tDOWN: 'down',\n});\n\nconst propTypes = {\n\t/**\n\t * **Assistive text for accessibility**\n\t * * `list`: aria label for the list\n\t * * `sort`\n\t *    * `sortedBy`: Clickable sort header for the list.\n\t *    * `descending`: Descending sorting.\n\t *    * `ascending`: Ascending sorting.\n\t */\n\tassistiveText: PropTypes.shape({\n\t\tlist: PropTypes.string,\n\t\tsort: PropTypes.shape({\n\t\t\tsortedBy: PropTypes.string,\n\t\t\tdescending: PropTypes.string,\n\t\t\tascending: PropTypes.string,\n\t\t}),\n\t\tunreadItem: PropTypes.string,\n\t}),\n\t/**\n\t * CSS classes to be added to the parent `div` tag.\n\t */\n\tclassName: PropTypes.oneOfType([\n\t\tPropTypes.array,\n\t\tPropTypes.object,\n\t\tPropTypes.string,\n\t]),\n\t/**\n\t * Event Callbacks\n\t * * `onSelect`: Called when a list item is selected. Previously, this event was called when an item was focused. The UX pattern has changed and this event is now called on pressing enter or mouse click.\n\t *    * event {object} List item click event\n\t *    * Meta {object}\n\t *       * selectedItems {array} List of selected items.\n\t *       * item {object} Last selected item.\n\t * * `onSort`: Called when the list is sorted.\n\t *    * event {object} Sort click event\n\t */\n\tevents: PropTypes.shape({\n\t\tonSelect: PropTypes.func.isRequired,\n\t\tonSort: PropTypes.func,\n\t}),\n\t/**\n\t * HTML id for component.\n\t */\n\tid: PropTypes.string,\n\t/**\n\t * **Text labels for internationalization**\n\t * * `header`: This is the header of the list.\n\t */\n\tlabels: PropTypes.shape({\n\t\theader: PropTypes.string,\n\t}),\n\t/**\n\t * The direction of the sort arrow. Option are:\n\t * * SORT_OPTIONS.UP: `up`\n\t * * SORT_OPTIONS.DOWN: `down`\n\t */\n\tsortDirection: PropTypes.oneOf([SORT_OPTIONS.UP, SORT_OPTIONS.DOWN]),\n\t/**\n\t * Allows multiple item to be selection\n\t */\n\tmultiple: PropTypes.bool,\n\t/**\n\t * The list of items.\n\t * It is recommended that you have a unique `id` for each item.\n\t */\n\toptions: PropTypes.array.isRequired,\n\t/**\n\t * Accepts an array of item objects. For single selection, pass in an array of one object.\n\t */\n\tselection: PropTypes.array,\n\t/**\n\t * Accepts an array of item objects. For single unread, pass in an array of one object.\n\t */\n\tunread: PropTypes.array,\n\t/**\n\t * Custom list item template for the list item content. The select and unread functionality wraps the custom list item.\n\t * This should be a React component that accepts props.\n\t */\n\tlistItem: PropTypes.func,\n};\n\nconst defaultProps = {\n\tassistiveText: {\n\t\tlist: 'Select an item to open it in a new workspace tab.',\n\t\tsort: {\n\t\t\tsortedBy: 'Sorted by',\n\t\t\tdescending: 'Descending',\n\t\t\tascending: 'Ascending',\n\t\t},\n\t},\n\tevents: {},\n\tlabels: {},\n\tselection: [],\n\tunread: [],\n};\n\n/**\n * The menu with the ARIA role of a listbox.\n */\nclass SplitViewListbox extends React.Component {\n\tstatic displayName = SPLIT_VIEW_LISTBOX;\n\n\tstatic propTypes = propTypes;\n\n\tstatic defaultProps = defaultProps;\n\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.listItemComponents = {};\n\n\t\tthis.state = {\n\t\t\tcurrentSelectedItem: null,\n\t\t\tcurrentFocusedListItem: {\n\t\t\t\tindex: 0,\n\t\t\t\titem: null,\n\t\t\t},\n\t\t};\n\n\t\t// Generates the list item template\n\t\tthis.ListItemWithContent = listItemWithContent(\n\t\t\tprops.listItem || SplitViewListItemContent\n\t\t);\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.focusFirstItem();\n\t}\n\n\tisListItemFocused(item) {\n\t\treturn this.state.currentFocusedListItem.item === item;\n\t}\n\n\tisSelected(item) {\n\t\treturn this.props.selection.includes(item);\n\t}\n\n\tisUnread(item) {\n\t\treturn this.props.unread.includes(item);\n\t}\n\n\thandleKeyDown(event) {\n\t\tif (this.props.multiple && event.key === 'a' && event.ctrlKey) {\n\t\t\t// select / deselect all\n\t\t\teventUtil.trap(event);\n\t\t\tif (this.props.options === this.props.selection) {\n\t\t\t\tthis.deselectAllListItems(event);\n\t\t\t} else {\n\t\t\t\tthis.selectAllListItems(event);\n\t\t\t}\n\t\t} else if (event.key === 'ArrowUp') {\n\t\t\teventUtil.trap(event);\n\t\t\tthis.moveToPreviousItem(event);\n\t\t} else if (event.key === 'ArrowDown') {\n\t\t\teventUtil.trap(event);\n\t\t\tthis.moveToNextItem(event);\n\t\t}\n\t}\n\n\tmoveToNextItem(event) {\n\t\tconst nextFocusIndex =\n\t\t\tthis.state.currentFocusedListItem.index === this.props.options.length - 1\n\t\t\t\t? 0\n\t\t\t\t: this.state.currentFocusedListItem.index + 1;\n\n\t\tthis.moveToIndex(event, nextFocusIndex);\n\t}\n\n\tmoveToPreviousItem(event) {\n\t\tconst previousFocusIndex =\n\t\t\tthis.state.currentFocusedListItem.index === 0\n\t\t\t\t? this.props.options.length - 1\n\t\t\t\t: this.state.currentFocusedListItem.index - 1;\n\n\t\tthis.moveToIndex(event, previousFocusIndex);\n\t}\n\n\tmoveToIndex(event, index) {\n\t\tconst item = this.props.options[index];\n\n\t\tthis.focusItem(item);\n\t}\n\n\tfocusFirstItem() {\n\t\tconst firstSelectedItem =\n\t\t\tthis.props.options.find((item) => this.props.selection.includes(item)) ||\n\t\t\tthis.props.options[0];\n\n\t\tif (firstSelectedItem) {\n\t\t\tthis.focusItem(firstSelectedItem, true);\n\t\t}\n\t}\n\n\tfocusItem(item, setDataOnly) {\n\t\tconst index = this.props.options.indexOf(item);\n\n\t\tif (!setDataOnly) {\n\t\t\tthis.listItemComponents[index].focus();\n\t\t}\n\n\t\tthis.setState({\n\t\t\tcurrentFocusedListItem: {\n\t\t\t\tindex,\n\t\t\t\titem,\n\t\t\t},\n\t\t});\n\t}\n\n\tdeselectAllListItems(event) {\n\t\tthis.setState({ currentSelectedItem: null });\n\t\tthis.props.events.onSelect(event, {\n\t\t\tselectedItems: [],\n\t\t\titem: null,\n\t\t});\n\t}\n\n\tselectAllListItems(event) {\n\t\tthis.props.events.onSelect(event, {\n\t\t\tselectedItems: this.props.options,\n\t\t\titem: this.state.currentSelectedItem,\n\t\t});\n\t}\n\n\tselectListItem(item, event) {\n\t\tlet selectedItems = [item];\n\n\t\tif (this.props.multiple) {\n\t\t\tif (event.metaKey) {\n\t\t\t\tselectedItems = this.props.selection.includes(item)\n\t\t\t\t\t? this.props.selection.filter((i) => i !== item)\n\t\t\t\t\t: [item, ...this.props.selection];\n\t\t\t} else if (event.shiftKey) {\n\t\t\t\t/* eslint-disable fp/no-mutating-methods */\n\t\t\t\tconst [begin, end] = [\n\t\t\t\t\tthis.props.options.indexOf(this.state.currentSelectedItem),\n\t\t\t\t\tthis.props.options.indexOf(item),\n\t\t\t\t].sort();\n\t\t\t\t/* eslint-enable fp/no-mutating-methods */\n\n\t\t\t\tconst addToSelection = this.props.options.slice(begin, end + 1);\n\n\t\t\t\tselectedItems = [\n\t\t\t\t\t...addToSelection,\n\t\t\t\t\t...this.props.selection.filter((i) => !addToSelection.includes(i)),\n\t\t\t\t];\n\t\t\t}\n\t\t}\n\n\t\tthis.setState({ currentSelectedItem: item });\n\n\t\tthis.props.events.onSelect(event, { selectedItems, item });\n\t}\n\n\thandleOnSelect(event, { item }) {\n\t\tthis.selectListItem(item, event);\n\t\tthis.focusItem(item);\n\t}\n\n\tsortDirection() {\n\t\treturn this.props.sortDirection ? (\n\t\t\t<Icon\n\t\t\t\tcategory=\"utility\"\n\t\t\t\tname={\n\t\t\t\t\tthis.props.sortDirection === SORT_OPTIONS.DOWN\n\t\t\t\t\t\t? 'arrowdown'\n\t\t\t\t\t\t: 'arrowup'\n\t\t\t\t}\n\t\t\t\tsize=\"xx-small\"\n\t\t\t\tclassName=\"slds-align-top\"\n\t\t\t/>\n\t\t) : null;\n\t}\n\n\theaderWrapper(children) {\n\t\treturn this.props.events.onSort ? (\n\t\t\t<a\n\t\t\t\taria-live=\"polite\"\n\t\t\t\tstyle={{ borderTop: '0' }}\n\t\t\t\thref=\"#\"\n\t\t\t\trole=\"button\"\n\t\t\t\tclassName=\"slds-split-view__list-header slds-grid slds-text-link_reset\"\n\t\t\t\tonClick={eventUtil.trappedHandler(this.props.events.onSort)}\n\t\t\t>\n\t\t\t\t{children}\n\t\t\t</a>\n\t\t) : (\n\t\t\t<div\n\t\t\t\tstyle={{ borderTop: '0' }}\n\t\t\t\tclassName=\"slds-split-view__list-header slds-grid\"\n\t\t\t>\n\t\t\t\t{children}\n\t\t\t</div>\n\t\t);\n\t}\n\n\theader() {\n\t\treturn this.props.labels.header\n\t\t\t? this.headerWrapper(\n\t\t\t\t\t<span\n\t\t\t\t\t\taria-sort={\n\t\t\t\t\t\t\tthis.props.sortDirection === SORT_OPTIONS.DOWN\n\t\t\t\t\t\t\t\t? this.props.assistiveText.sort.descending\n\t\t\t\t\t\t\t\t: this.props.assistiveText.sort.ascending\n\t\t\t\t\t\t}\n\t\t\t\t\t>\n\t\t\t\t\t\t<span className=\"slds-assistive-text\">\n\t\t\t\t\t\t\t{this.props.assistiveText.sort.sortedBy}\n\t\t\t\t\t\t\t{': '}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t{this.props.labels.header}\n\t\t\t\t\t\t\t{this.sortDirection()}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<span className=\"slds-assistive-text\">\n\t\t\t\t\t\t\t{'- '}\n\t\t\t\t\t\t\t{this.props.sortDirection === SORT_OPTIONS.DOWN\n\t\t\t\t\t\t\t\t? this.props.assistiveText.sort.descending\n\t\t\t\t\t\t\t\t: this.props.assistiveText.sort.ascending}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</span>\n\t\t\t  )\n\t\t\t: null;\n\t}\n\n\taddListItemComponent(component, index) {\n\t\tthis.listItemComponents[index] = component;\n\t}\n\n\tlistItems() {\n\t\tconst { ListItemWithContent } = this;\n\n\t\treturn this.props.options.map((item, index) => (\n\t\t\t<ListItemWithContent\n\t\t\t\tkey={item.id || index}\n\t\t\t\tassistiveText={{\n\t\t\t\t\tunreadItem: this.props.assistiveText.unreadItem,\n\t\t\t\t}}\n\t\t\t\tlistItemRef={(component) => {\n\t\t\t\t\tthis.addListItemComponent(component, index);\n\t\t\t\t}}\n\t\t\t\titem={item}\n\t\t\t\tisFocused={this.isListItemFocused(item)}\n\t\t\t\tisSelected={this.isSelected(item)}\n\t\t\t\tisUnread={this.isUnread(item)}\n\t\t\t\tevents={{\n\t\t\t\t\tonClick: (event, meta) => this.handleOnSelect(event, meta),\n\t\t\t\t}}\n\t\t\t\tmultiple={this.props.multiple}\n\t\t\t/>\n\t\t));\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div\n\t\t\t\tid={this.props.id}\n\t\t\t\tclassName={classNames(\n\t\t\t\t\t'slds-grid slds-grid_vertical slds-scrollable_none',\n\t\t\t\t\tthis.props.className\n\t\t\t\t)}\n\t\t\t>\n\t\t\t\t{this.header()}\n\t\t\t\t<ul\n\t\t\t\t\tclassName=\"slds-scrollable_y\"\n\t\t\t\t\taria-label={this.props.assistiveText.list}\n\t\t\t\t\taria-multiselectable={this.props.multiple}\n\t\t\t\t\trole=\"listbox\"\n\t\t\t\t\tonKeyDown={(event) => this.handleKeyDown(event)}\n\t\t\t\t>\n\t\t\t\t\t{this.listItems()}\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default SplitViewListbox;\n"]},"metadata":{},"sourceType":"module"}