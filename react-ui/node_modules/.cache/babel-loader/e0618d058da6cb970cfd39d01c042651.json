{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nvar _THEME_CLASSES;\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n// Implements the [Progress Ring design pattern](https://lightningdesignsystem.com/components/progress-ring/) in React.\n// Based on SLDS v2.4.5\n\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { PROGRESS_RING } from '../../utilities/constants';\nimport Icon from '../icon';\nimport ProgressRingShape from './private/ring-shape';\n/**\n * The themes available for the progress ring\n */\n\nexport var THEME_OPTIONS = Object.freeze({\n  ACTIVE: 'active',\n  WARNING: 'warning',\n  EXPIRED: 'expired',\n  COMPLETE: 'complete'\n});\n/**\n * The CSS classes associated with each theme\n */\n\nvar THEME_CLASSES = (_THEME_CLASSES = {}, _defineProperty(_THEME_CLASSES, THEME_OPTIONS.ACTIVE, 'slds-progress-ring_active-step'), _defineProperty(_THEME_CLASSES, THEME_OPTIONS.WARNING, 'slds-progress-ring_warning'), _defineProperty(_THEME_CLASSES, THEME_OPTIONS.EXPIRED, 'slds-progress-ring_expired'), _defineProperty(_THEME_CLASSES, THEME_OPTIONS.COMPLETE, 'slds-progress-ring_complete'), _THEME_CLASSES);\nvar propTypes = {\n  /**\n   * HTML id for component.\n   */\n  id: PropTypes.string,\n\n  /**\n   * CSS classes to be added to tag with `.slds-progress-ring`. Uses `classNames` [API](https://github.com/JedWatson/classnames).\n   */\n  className: PropTypes.oneOfType([PropTypes.array, PropTypes.object, PropTypes.string]),\n\n  /**\n   * The theme applied to the ring.\n   */\n  theme: PropTypes.oneOf(['active', 'warning', 'expired', 'complete']),\n\n  /**\n   * Overrides the icon to be displayed.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * Display the icon associated with the theme.\n   */\n  hasIcon: PropTypes.bool,\n\n  /**\n   * Percentage of progress completion, ranging [0, 100].\n   */\n  value: PropTypes.number.isRequired,\n\n  /**\n   * Direction that the progress ring \"flows.\" Default is counter-clockwise, or `drain`. For clockwise flow, use `fill`\n   */\n  flowDirection: PropTypes.oneOf(['drain', 'fill']),\n\n  /**\n   * Size of the progress ring. Default is 'medium'\n   */\n  size: PropTypes.oneOf(['medium', 'large'])\n};\nvar defaultProps = {\n  flowDirection: 'drain',\n  size: 'medium'\n};\n/**\n * Customizable and configurable progress ring. Will display progress in a circular progress bar factor, and is capable of displaying iconography inside of the ring structure.\n */\n\nvar ProgressRing = /*#__PURE__*/function (_React$Component) {\n  _inherits(ProgressRing, _React$Component);\n\n  var _super = _createSuper(ProgressRing);\n\n  function ProgressRing() {\n    _classCallCheck(this, ProgressRing);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(ProgressRing, [{\n    key: \"icon\",\n\n    /**\n     * Gets the icon to display\n     * @returns {node} Icon\n     */\n    value: function icon() {\n      var icon = '';\n\n      if (this.props.hasIcon) {\n        if (this.props.icon) {\n          // eslint-disable-next-line prefer-destructuring\n          icon = this.props.icon;\n        } else if (this.props.theme === THEME_OPTIONS.WARNING) {\n          icon = /*#__PURE__*/React.createElement(Icon, {\n            category: \"utility\",\n            name: \"warning\",\n            title: \"Warning\"\n          });\n        } else if (this.props.theme === THEME_OPTIONS.EXPIRED) {\n          icon = /*#__PURE__*/React.createElement(Icon, {\n            category: \"utility\",\n            name: \"error\",\n            title: \"Expired\"\n          });\n        } else if (this.props.theme === THEME_OPTIONS.COMPLETE) {\n          icon = /*#__PURE__*/React.createElement(Icon, {\n            category: \"utility\",\n            name: \"check\",\n            title: \"Complete\"\n          });\n        }\n      }\n\n      return icon;\n    }\n    /**\n     * Percentage as a decimal\n     * @returns {decimal} Percentage\n     */\n\n  }, {\n    key: \"percentDecimal\",\n    value: function percentDecimal() {\n      return this.props.value / 100;\n    }\n    /**\n     * Gets the theme CSS class\n     * @returns {string} Class name\n     */\n\n  }, {\n    key: \"themeClass\",\n    value: function themeClass() {\n      return THEME_CLASSES[this.props.theme] || '';\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(ProgressRingShape, {\n        id: this.props.id,\n        size: this.props.size,\n        className: classNames(this.props.className, this.themeClass(), {\n          'slds-progress-ring_large': this.props.size === 'large'\n        }),\n        fillPercentDecimal: this.percentDecimal(),\n        flowDirection: this.props.flowDirection\n      }, this.icon());\n    }\n  }]);\n\n  return ProgressRing;\n}(React.Component);\n\nProgressRing.displayName = PROGRESS_RING;\nProgressRing.propTypes = propTypes;\nProgressRing.defaultProps = defaultProps;\nexport default ProgressRing;","map":{"version":3,"sources":["../../../.tmp-es/components/progress-ring/index.jsx"],"names":["THEME_OPTIONS","ACTIVE","WARNING","EXPIRED","COMPLETE","THEME_CLASSES","propTypes","id","PropTypes","className","theme","icon","hasIcon","value","flowDirection","size","defaultProps","ProgressRing","React","Component","classNames"],"mappings":"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","sourcesContent":["/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\n// Implements the [Progress Ring design pattern](https://lightningdesignsystem.com/components/progress-ring/) in React.\n// Based on SLDS v2.4.5\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport { PROGRESS_RING } from '../../utilities/constants';\nimport Icon from '../icon';\nimport ProgressRingShape from './private/ring-shape';\n\n/**\n * The themes available for the progress ring\n */\nexport const THEME_OPTIONS = Object.freeze({\n\tACTIVE: 'active',\n\tWARNING: 'warning',\n\tEXPIRED: 'expired',\n\tCOMPLETE: 'complete',\n});\n\n/**\n * The CSS classes associated with each theme\n */\nconst THEME_CLASSES = {\n\t[THEME_OPTIONS.ACTIVE]: 'slds-progress-ring_active-step',\n\t[THEME_OPTIONS.WARNING]: 'slds-progress-ring_warning',\n\t[THEME_OPTIONS.EXPIRED]: 'slds-progress-ring_expired',\n\t[THEME_OPTIONS.COMPLETE]: 'slds-progress-ring_complete',\n};\n\nconst propTypes = {\n\t/**\n\t * HTML id for component.\n\t */\n\tid: PropTypes.string,\n\t/**\n\t * CSS classes to be added to tag with `.slds-progress-ring`. Uses `classNames` [API](https://github.com/JedWatson/classnames).\n\t */\n\tclassName: PropTypes.oneOfType([\n\t\tPropTypes.array,\n\t\tPropTypes.object,\n\t\tPropTypes.string,\n\t]),\n\t/**\n\t * The theme applied to the ring.\n\t */\n\ttheme: PropTypes.oneOf(['active', 'warning', 'expired', 'complete']),\n\t/**\n\t * Overrides the icon to be displayed.\n\t */\n\ticon: PropTypes.node,\n\t/**\n\t * Display the icon associated with the theme.\n\t */\n\thasIcon: PropTypes.bool,\n\t/**\n\t * Percentage of progress completion, ranging [0, 100].\n\t */\n\tvalue: PropTypes.number.isRequired,\n\t/**\n\t * Direction that the progress ring \"flows.\" Default is counter-clockwise, or `drain`. For clockwise flow, use `fill`\n\t */\n\tflowDirection: PropTypes.oneOf(['drain', 'fill']),\n\t/**\n\t * Size of the progress ring. Default is 'medium'\n\t */\n\tsize: PropTypes.oneOf(['medium', 'large']),\n};\n\nconst defaultProps = {\n\tflowDirection: 'drain',\n\tsize: 'medium',\n};\n\n/**\n * Customizable and configurable progress ring. Will display progress in a circular progress bar factor, and is capable of displaying iconography inside of the ring structure.\n */\nclass ProgressRing extends React.Component {\n\t/**\n\t * Gets the icon to display\n\t * @returns {node} Icon\n\t */\n\ticon() {\n\t\tlet icon = '';\n\n\t\tif (this.props.hasIcon) {\n\t\t\tif (this.props.icon) {\n\t\t\t\t// eslint-disable-next-line prefer-destructuring\n\t\t\t\ticon = this.props.icon;\n\t\t\t} else if (this.props.theme === THEME_OPTIONS.WARNING) {\n\t\t\t\ticon = <Icon category=\"utility\" name=\"warning\" title=\"Warning\" />;\n\t\t\t} else if (this.props.theme === THEME_OPTIONS.EXPIRED) {\n\t\t\t\ticon = <Icon category=\"utility\" name=\"error\" title=\"Expired\" />;\n\t\t\t} else if (this.props.theme === THEME_OPTIONS.COMPLETE) {\n\t\t\t\ticon = <Icon category=\"utility\" name=\"check\" title=\"Complete\" />;\n\t\t\t}\n\t\t}\n\n\t\treturn icon;\n\t}\n\n\t/**\n\t * Percentage as a decimal\n\t * @returns {decimal} Percentage\n\t */\n\tpercentDecimal() {\n\t\treturn this.props.value / 100;\n\t}\n\n\t/**\n\t * Gets the theme CSS class\n\t * @returns {string} Class name\n\t */\n\tthemeClass() {\n\t\treturn THEME_CLASSES[this.props.theme] || '';\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<ProgressRingShape\n\t\t\t\tid={this.props.id}\n\t\t\t\tsize={this.props.size}\n\t\t\t\tclassName={classNames(this.props.className, this.themeClass(), {\n\t\t\t\t\t'slds-progress-ring_large': this.props.size === 'large',\n\t\t\t\t})}\n\t\t\t\tfillPercentDecimal={this.percentDecimal()}\n\t\t\t\tflowDirection={this.props.flowDirection}\n\t\t\t>\n\t\t\t\t{this.icon()}\n\t\t\t</ProgressRingShape>\n\t\t);\n\t}\n}\n\nProgressRing.displayName = PROGRESS_RING;\nProgressRing.propTypes = propTypes;\nProgressRing.defaultProps = defaultProps;\n\nexport default ProgressRing;\n"]},"metadata":{},"sourceType":"module"}