{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n// Implements the [Map design pattern](https://lightningdesignsystem.com/components/map/) in React.\n// Based on SLDS v2.4.0\n\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames'; // ### shortid\n// [npmjs.com/package/shortid](https://www.npmjs.com/package/shortid)\n// shortid is a short, non-sequential, url-friendly, unique id generator\n\nimport shortid from 'shortid';\nimport Icon from '../icon';\nimport { LOCATION_MAP } from '../../utilities/constants';\nvar displayName = LOCATION_MAP;\nvar propTypes = {\n  /**\n   * CSS class names to be added with `slds-map` class. `array`, `object`, or `string` are accepted.\n   */\n  className: PropTypes.oneOfType([PropTypes.array, PropTypes.object, PropTypes.string]),\n\n  /**\n   * CSS class names to be added to the container element. `array`, `object`, or `string` are accepted.\n   */\n  classNameContainer: PropTypes.oneOfType([PropTypes.array, PropTypes.object, PropTypes.string]),\n\n  /**\n   *  Accepts location object that will be shown if no location has been selected. Required\n   *  * `id` : A unique identifier string for the location\n   *  * `name` : Name of the location\n   *  * `address` : Address of the location\n   */\n  defaultLocation: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    address: PropTypes.string.isRequired\n  }).isRequired,\n\n  /**\n   * HTML id for component.\n   */\n  id: PropTypes.string,\n\n  /**\n   *  Labels\n   *  * `title` - Title for the LocationMap component.\n   */\n  labels: PropTypes.shape({\n    title: PropTypes.string\n  }),\n\n  /**\n   * Array of locations objects for the LocationMap component.**\n   * Each location object can contain:\n   *  * `id` : A unique identifier string for the location\n   *  * `name` : Name of the location\n   *  * `address` : Address of the location\n   */\n  locations: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    address: PropTypes.string.isRequired\n  })).isRequired,\n\n  /**\n   * Callback function triggered when a location is selected\n   */\n  onClickLocation: PropTypes.func,\n\n  /**\n   * Accepts a Google Map API Key that will be used for showing the map\n   */\n  googleAPIKey: PropTypes.string.isRequired,\n\n  /**\n   *  Accepts location object that will be shown when selected\n   *  * `id` : A unique identifier string for the location\n   *  * `name` : Name of the location\n   *  * `address` : Address of the location\n   */\n  selection: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    address: PropTypes.string.isRequired\n  })\n};\nvar defaultProps = {\n  labels: {\n    title: 'Interactive Map'\n  }\n};\n/**\n * A location map component is used to find and show locations\n */\n\nvar LocationMap = /*#__PURE__*/function (_React$Component) {\n  _inherits(LocationMap, _React$Component);\n\n  var _super = _createSuper(LocationMap);\n\n  function LocationMap(props) {\n    var _this;\n\n    _classCallCheck(this, LocationMap);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"handleClick\", function (event, i) {\n      if (typeof _this.props.onClickLocation === 'function') _this.props.onClickLocation(event, _this.props.locations[i]);\n\n      if (_this.map) {\n        _this.map.focus();\n      }\n    });\n\n    _this.generatedId = shortid.generate();\n    return _this;\n  }\n  /**\n   * Get the LocationMap's HTML id. Generate a new one if no ID present.\n   */\n\n\n  _createClass(LocationMap, [{\n    key: \"getId\",\n    value: function getId() {\n      return this.props.id || this.generatedId;\n    }\n    /**\n     * Handles clicking of a location\n     */\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var labels = _objectSpread(_objectSpread({}, defaultProps.labels), this.props.labels);\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        id: this.getId(),\n        className: classNames(\"slds-grid\", {\n          'slds-has-coordinates': this.props.locations\n        }, this.props.classNameContainer)\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"slds-map_container\",\n        style: {\n          padding: '4px'\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: classNames(\"slds-map\", this.props.className),\n        ref: function ref(map) {\n          _this2.map = map;\n        },\n        tabIndex: 0 // eslint-disable-line jsx-a11y/no-noninteractive-tabindex\n        ,\n        title: labels.title\n      }, /*#__PURE__*/React.createElement(\"iframe\", {\n        id: \"\".concat(this.getId(), \"-google-map\"),\n        src: \"https://www.google.com/maps/embed/v1/place?key=\".concat(this.props.googleAPIKey, \"&q=\").concat(encodeURIComponent(this.props.selection ? this.props.selection.address : this.props.defaultLocation.address)),\n        title: labels.title\n      }))), this.props.locations.length > 1 ? /*#__PURE__*/React.createElement(\"div\", {\n        className: \"slds-coordinates\"\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"slds-coordinates__header\"\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        className: \"slds-coordinates__title\"\n      }, \"\".concat(labels.title, \" (\").concat(this.props.locations.length, \")\"))), /*#__PURE__*/React.createElement(\"ul\", {\n        className: \"slds-coordinates__list\"\n      }, this.props.locations.map(function (location, i) {\n        return /*#__PURE__*/React.createElement(\"li\", {\n          key: location.id,\n          className: \"slds-coordinates__item\"\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          className: \"slds-assistive-text\",\n          \"aria-live\": \"polite\"\n        }, \"\".concat(location.name, \" is currently selected\")), /*#__PURE__*/React.createElement(\"button\", {\n          type: \"button\",\n          onClick: function onClick(event) {\n            return _this2.handleClick(event, i);\n          },\n          className: \"slds-coordinates__item-action slds-button_reset slds-media\",\n          \"aria-pressed\": _this2.props.selection && _this2.props.selection.id === location.id\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          className: \"slds-media__figure\"\n        }, /*#__PURE__*/React.createElement(Icon, {\n          category: \"standard\",\n          name: \"account\"\n        })), /*#__PURE__*/React.createElement(\"span\", {\n          className: \"slds-media__body\"\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          className: \"slds-text-link\"\n        }, location.name), /*#__PURE__*/React.createElement(\"span\", null, location.address))));\n      }))) : null);\n    }\n  }]);\n\n  return LocationMap;\n}(React.Component);\n\nLocationMap.displayName = displayName;\nLocationMap.propTypes = propTypes;\nexport default LocationMap;","map":{"version":3,"sources":["../../../.tmp-es/components/location-map/index.jsx"],"names":["displayName","propTypes","className","PropTypes","classNameContainer","defaultLocation","id","name","address","isRequired","labels","title","string","locations","onClickLocation","googleAPIKey","selection","defaultProps","LocationMap","React","Component","shortid","classNames","padding","encodeURIComponent","location"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;AAEA;AACA;;;AACA,OAAA,KAAA,MAAA,OAAA;AACA,OAAA,SAAA,MAAA,YAAA;AACA,OAAA,UAAA,MAAA,YAAA,C,CACA;AACA;AACA;;AACA,OAAA,OAAA,MAAA,SAAA;AAEA,OAAA,IAAA,MAAA,SAAA;AACA,SAAA,YAAA,QAAA,2BAAA;AAEA,IAAMA,WAAW,GAAjB,YAAA;AAEA,IAAMC,SAAS,GAAG;AACjB;AACD;AACA;AACCC,EAAAA,SAAS,EAAEC,SAAS,CAATA,SAAAA,CAAoB,CAC9BA,SAAS,CADqB,KAAA,EAE9BA,SAAS,CAFqB,MAAA,EAG9BA,SAAS,CAPO,MAIc,CAApBA,CAJM;;AASjB;AACD;AACA;AACCC,EAAAA,kBAAkB,EAAED,SAAS,CAATA,SAAAA,CAAoB,CACvCA,SAAS,CAD8B,KAAA,EAEvCA,SAAS,CAF8B,MAAA,EAGvCA,SAAS,CAfO,MAYuB,CAApBA,CAZH;;AAiBjB;AACD;AACA;AACA;AACA;AACA;AACCE,EAAAA,eAAe,EAAE,SAAS,CAAT,KAAA,CAAgB;AAChCC,IAAAA,EAAE,EAAEH,SAAS,CAATA,MAAAA,CAD4B,UAAA;AAEhCI,IAAAA,IAAI,EAAEJ,SAAS,CAATA,MAAAA,CAF0B,UAAA;AAGhCK,IAAAA,OAAO,EAAEL,SAAS,CAATA,MAAAA,CAAiBM;AAHM,GAAhB,EAvBA,UAAA;;AA4BjB;AACD;AACA;AACCH,EAAAA,EAAE,EAAEH,SAAS,CA/BI,MAAA;;AAgCjB;AACD;AACA;AACA;AACCO,EAAAA,MAAM,EAAE,SAAS,CAAT,KAAA,CAAgB;AACvBC,IAAAA,KAAK,EAAER,SAAS,CAACS;AADM,GAAhB,CApCS;;AAuCjB;AACD;AACA;AACA;AACA;AACA;AACA;AACCC,EAAAA,SAAS,EAAE,SAAS,CAAT,OAAA,CACV,SAAS,CAAT,KAAA,CAAgB;AACfP,IAAAA,EAAE,EAAEH,SAAS,CAATA,MAAAA,CADW,UAAA;AAEfI,IAAAA,IAAI,EAAEJ,SAAS,CAATA,MAAAA,CAFS,UAAA;AAGfK,IAAAA,OAAO,EAAEL,SAAS,CAATA,MAAAA,CAAiBM;AAHX,GAAhB,CADU,EA9CM,UAAA;;AAqDjB;AACD;AACA;AACCK,EAAAA,eAAe,EAAEX,SAAS,CAxDT,IAAA;;AAyDjB;AACD;AACA;AACCY,EAAAA,YAAY,EAAEZ,SAAS,CAATA,MAAAA,CA5DG,UAAA;;AA6DjB;AACD;AACA;AACA;AACA;AACA;AACCa,EAAAA,SAAS,EAAE,SAAS,CAAT,KAAA,CAAgB;AAC1BV,IAAAA,EAAE,EAAEH,SAAS,CAATA,MAAAA,CADsB,UAAA;AAE1BI,IAAAA,IAAI,EAAEJ,SAAS,CAATA,MAAAA,CAFoB,UAAA;AAG1BK,IAAAA,OAAO,EAAEL,SAAS,CAATA,MAAAA,CAAiBM;AAHA,GAAhB;AAnEM,CAAlB;AA0EA,IAAMQ,YAAY,GAAG;AACpBP,EAAAA,MAAM,EAAE;AACPC,IAAAA,KAAK,EAAE;AADA;AADY,CAArB;AAMA;AACA;AACA;;IACMO,W;;;;;AACL,WAAA,WAAA,CAAA,KAAA,EAAmB;AAAA,QAAA,KAAA;;AAAA,IAAA,eAAA,CAAA,IAAA,EAAA,WAAA,CAAA;;AAClB,IAAA,KAAA,GAAA,MAAA,CAAA,IAAA,CAAA,IAAA,EAAA,KAAA,CAAA;;AADkB,IAAA,eAAA,CAAA,sBAAA,CAAA,KAAA,CAAA,EAAA,aAAA,EAeL,UAAA,KAAA,EAAA,CAAA,EAAc;AAC3B,UAAI,OAAO,KAAA,CAAA,KAAA,CAAP,eAAA,KAAJ,UAAA,EACC,KAAA,CAAA,KAAA,CAAA,eAAA,CAAA,KAAA,EAAkC,KAAA,CAAA,KAAA,CAAA,SAAA,CAAlC,CAAkC,CAAlC;;AACD,UAAI,KAAA,CAAJ,GAAA,EAAc;AACb,QAAA,KAAA,CAAA,GAAA,CAAA,KAAA;AACA;AApBiB,KAAA,CAAA;;AAElB,IAAA,KAAA,CAAA,WAAA,GAAmBG,OAAO,CAA1B,QAAmBA,EAAnB;AAFkB,WAAA,KAAA;AAGlB;AAED;AACD;AACA;;;;;4BACS;AACP,aAAO,KAAA,KAAA,CAAA,EAAA,IAAiB,KAAxB,WAAA;AACA;AAED;AACD;AACA;;;;6BASU;AAAA,UAAA,MAAA,GAAA,IAAA;;AACR,UAAMX,MAAM,GAAA,aAAA,CAAA,aAAA,CAAA,EAAA,EAAQO,YAAY,CAApB,MAAA,CAAA,EAAgC,KAAA,KAAA,CAA5C,MAAY,CAAZ;;AAEA,aAAA,aACC,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AACC,QAAA,EAAE,EAAE,KADL,KACK,EADL;AAEC,QAAA,SAAS,EAAEK,UAAU,CAAA,WAAA,EAEpB;AAAE,kCAAwB,KAAA,KAAA,CAAWT;AAArC,SAFoB,EAGpB,KAAA,KAAA,CAHoB,kBAAA;AAFtB,OAAA,EAAA,aAQC,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,QAAA,SAAS,EAAd,oBAAA;AAAoC,QAAA,KAAK,EAAE;AAAEU,UAAAA,OAAO,EAAE;AAAX;AAA3C,OAAA,EAAA,aACC,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AACC,QAAA,SAAS,EAAED,UAAU,CAAA,UAAA,EAAa,KAAA,KAAA,CADnC,SACsB,CADtB;AAEC,QAAA,GAAG,EAAE,SAAA,GAAA,CAAA,GAAA,EAAS;AACb,UAAA,MAAI,CAAJ,GAAA,GAAA,GAAA;AAHF,SAAA;AAKC,QAAA,QAAQ,EALT,CAAA,CAKc;AALd;AAMC,QAAA,KAAK,EAAEZ,MAAM,CAACC;AANf,OAAA,EAAA,aAQC,KAAA,CAAA,aAAA,CAAA,QAAA,EAAA;AACC,QAAA,EAAE,EAAA,GAAA,MAAA,CAAK,KAAL,KAAK,EAAL,EADH,aACG,CADH;AAEC,QAAA,GAAG,EAAA,kDAAA,MAAA,CACF,KAAA,KAAA,CADE,YAAA,EAAA,KAAA,EAAA,MAAA,CAEGa,kBAAkB,CACvB,KAAA,KAAA,CAAA,SAAA,GACG,KAAA,KAAA,CAAA,SAAA,CADH,OAAA,GAEG,KAAA,KAAA,CAAA,eAAA,CAPL,OAIyB,CAFrB,CAFJ;AASC,QAAA,KAAK,EAAEd,MAAM,CAACC;AATf,OAAA,CARD,CADD,CARD,EA8BE,KAAA,KAAA,CAAA,SAAA,CAAA,MAAA,GAAA,CAAA,GAAA,aACA,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,QAAA,SAAS,EAAC;AAAf,OAAA,EAAA,aACC,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,QAAA,SAAS,EAAC;AAAf,OAAA,EAAA,aACC,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA;AAAI,QAAA,SAAS,EAAC;AAAd,OAAA,EAAA,GAAA,MAAA,CACKD,MAAM,CADX,KAAA,EAAA,IAAA,EAAA,MAAA,CACsB,KAAA,KAAA,CAAA,SAAA,CADtB,MAAA,EAFF,GAEE,CAAA,CADD,CADD,EAAA,aAMC,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA;AAAI,QAAA,SAAS,EAAC;AAAd,OAAA,EACE,KAAA,KAAA,CAAA,SAAA,CAAA,GAAA,CAAyB,UAAA,QAAA,EAAA,CAAA,EAAA;AAAA,eAAA,aACzB,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA;AAAI,UAAA,GAAG,EAAEe,QAAQ,CAAjB,EAAA;AAAsB,UAAA,SAAS,EAAC;AAAhC,SAAA,EAAA,aACC,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AAAM,UAAA,SAAS,EAAf,qBAAA;AAAsC,uBAAU;AAAhD,SAAA,EAAA,GAAA,MAAA,CACKA,QAAQ,CADb,IAAA,EADD,wBACC,CAAA,CADD,EAAA,aAIC,KAAA,CAAA,aAAA,CAAA,QAAA,EAAA;AACC,UAAA,IAAI,EADL,QAAA;AAEC,UAAA,OAAO,EAAE,SAAA,OAAA,CAAA,KAAA,EAAA;AAAA,mBAAW,MAAI,CAAJ,WAAA,CAAA,KAAA,EAAX,CAAW,CAAX;AAFV,WAAA;AAGC,UAAA,SAAS,EAHV,4DAAA;AAIC,0BACC,MAAI,CAAJ,KAAA,CAAA,SAAA,IACA,MAAI,CAAJ,KAAA,CAAA,SAAA,CAAA,EAAA,KAA4BA,QAAQ,CAACnB;AANvC,SAAA,EAAA,aASC,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AAAM,UAAA,SAAS,EAAC;AAAhB,SAAA,EAAA,aACC,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA;AAAM,UAAA,QAAQ,EAAd,UAAA;AAA0B,UAAA,IAAI,EAAC;AAA/B,SAAA,CADD,CATD,EAAA,aAYC,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AAAM,UAAA,SAAS,EAAC;AAAhB,SAAA,EAAA,aACC,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AAAM,UAAA,SAAS,EAAC;AAAhB,SAAA,EAAkCmB,QAAQ,CAD3C,IACC,CADD,EAAA,aAEC,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA,IAAA,EAAOA,QAAQ,CAnBO,OAmBtB,CAFD,CAZD,CAJD,CADyB;AAR5B,OAQG,CADF,CAND,CADA,GA/BH,IACC,CADD;AAoEA;;;;EA/FwBN,KAAK,CAACC,S;;AAkGhCF,WAAW,CAAXA,WAAAA,GAAAA,WAAAA;AACAA,WAAW,CAAXA,SAAAA,GAAAA,SAAAA;AAEA,eAAA,WAAA","sourcesContent":["/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\n// Implements the [Map design pattern](https://lightningdesignsystem.com/components/map/) in React.\n// Based on SLDS v2.4.0\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n// ### shortid\n// [npmjs.com/package/shortid](https://www.npmjs.com/package/shortid)\n// shortid is a short, non-sequential, url-friendly, unique id generator\nimport shortid from 'shortid';\n\nimport Icon from '../icon';\nimport { LOCATION_MAP } from '../../utilities/constants';\n\nconst displayName = LOCATION_MAP;\n\nconst propTypes = {\n\t/**\n\t * CSS class names to be added with `slds-map` class. `array`, `object`, or `string` are accepted.\n\t */\n\tclassName: PropTypes.oneOfType([\n\t\tPropTypes.array,\n\t\tPropTypes.object,\n\t\tPropTypes.string,\n\t]),\n\t/**\n\t * CSS class names to be added to the container element. `array`, `object`, or `string` are accepted.\n\t */\n\tclassNameContainer: PropTypes.oneOfType([\n\t\tPropTypes.array,\n\t\tPropTypes.object,\n\t\tPropTypes.string,\n\t]),\n\t/**\n\t *  Accepts location object that will be shown if no location has been selected. Required\n\t *  * `id` : A unique identifier string for the location\n\t *  * `name` : Name of the location\n\t *  * `address` : Address of the location\n\t */\n\tdefaultLocation: PropTypes.shape({\n\t\tid: PropTypes.string.isRequired,\n\t\tname: PropTypes.string.isRequired,\n\t\taddress: PropTypes.string.isRequired,\n\t}).isRequired,\n\t/**\n\t * HTML id for component.\n\t */\n\tid: PropTypes.string,\n\t/**\n\t *  Labels\n\t *  * `title` - Title for the LocationMap component.\n\t */\n\tlabels: PropTypes.shape({\n\t\ttitle: PropTypes.string,\n\t}),\n\t/**\n\t * Array of locations objects for the LocationMap component.**\n\t * Each location object can contain:\n\t *  * `id` : A unique identifier string for the location\n\t *  * `name` : Name of the location\n\t *  * `address` : Address of the location\n\t */\n\tlocations: PropTypes.arrayOf(\n\t\tPropTypes.shape({\n\t\t\tid: PropTypes.string.isRequired,\n\t\t\tname: PropTypes.string.isRequired,\n\t\t\taddress: PropTypes.string.isRequired,\n\t\t})\n\t).isRequired,\n\t/**\n\t * Callback function triggered when a location is selected\n\t */\n\tonClickLocation: PropTypes.func,\n\t/**\n\t * Accepts a Google Map API Key that will be used for showing the map\n\t */\n\tgoogleAPIKey: PropTypes.string.isRequired,\n\t/**\n\t *  Accepts location object that will be shown when selected\n\t *  * `id` : A unique identifier string for the location\n\t *  * `name` : Name of the location\n\t *  * `address` : Address of the location\n\t */\n\tselection: PropTypes.shape({\n\t\tid: PropTypes.string.isRequired,\n\t\tname: PropTypes.string.isRequired,\n\t\taddress: PropTypes.string.isRequired,\n\t}),\n};\n\nconst defaultProps = {\n\tlabels: {\n\t\ttitle: 'Interactive Map',\n\t},\n};\n\n/**\n * A location map component is used to find and show locations\n */\nclass LocationMap extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.generatedId = shortid.generate();\n\t}\n\n\t/**\n\t * Get the LocationMap's HTML id. Generate a new one if no ID present.\n\t */\n\tgetId() {\n\t\treturn this.props.id || this.generatedId;\n\t}\n\n\t/**\n\t * Handles clicking of a location\n\t */\n\thandleClick = (event, i) => {\n\t\tif (typeof this.props.onClickLocation === 'function')\n\t\t\tthis.props.onClickLocation(event, this.props.locations[i]);\n\t\tif (this.map) {\n\t\t\tthis.map.focus();\n\t\t}\n\t};\n\n\trender() {\n\t\tconst labels = { ...defaultProps.labels, ...this.props.labels };\n\n\t\treturn (\n\t\t\t<div\n\t\t\t\tid={this.getId()}\n\t\t\t\tclassName={classNames(\n\t\t\t\t\t`slds-grid`,\n\t\t\t\t\t{ 'slds-has-coordinates': this.props.locations },\n\t\t\t\t\tthis.props.classNameContainer\n\t\t\t\t)}\n\t\t\t>\n\t\t\t\t<div className=\"slds-map_container\" style={{ padding: '4px' }}>\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName={classNames(`slds-map`, this.props.className)}\n\t\t\t\t\t\tref={(map) => {\n\t\t\t\t\t\t\tthis.map = map;\n\t\t\t\t\t\t}}\n\t\t\t\t\t\ttabIndex={0} // eslint-disable-line jsx-a11y/no-noninteractive-tabindex\n\t\t\t\t\t\ttitle={labels.title}\n\t\t\t\t\t>\n\t\t\t\t\t\t<iframe\n\t\t\t\t\t\t\tid={`${this.getId()}-google-map`}\n\t\t\t\t\t\t\tsrc={`https://www.google.com/maps/embed/v1/place?key=${\n\t\t\t\t\t\t\t\tthis.props.googleAPIKey\n\t\t\t\t\t\t\t}&q=${encodeURIComponent(\n\t\t\t\t\t\t\t\tthis.props.selection\n\t\t\t\t\t\t\t\t\t? this.props.selection.address\n\t\t\t\t\t\t\t\t\t: this.props.defaultLocation.address\n\t\t\t\t\t\t\t)}`}\n\t\t\t\t\t\t\ttitle={labels.title}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t{this.props.locations.length > 1 ? (\n\t\t\t\t\t<div className=\"slds-coordinates\">\n\t\t\t\t\t\t<div className=\"slds-coordinates__header\">\n\t\t\t\t\t\t\t<h2 className=\"slds-coordinates__title\">\n\t\t\t\t\t\t\t\t{`${labels.title} (${this.props.locations.length})`}\n\t\t\t\t\t\t\t</h2>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<ul className=\"slds-coordinates__list\">\n\t\t\t\t\t\t\t{this.props.locations.map((location, i) => (\n\t\t\t\t\t\t\t\t<li key={location.id} className=\"slds-coordinates__item\">\n\t\t\t\t\t\t\t\t\t<span className=\"slds-assistive-text\" aria-live=\"polite\">\n\t\t\t\t\t\t\t\t\t\t{`${location.name} is currently selected`}\n\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\t\tonClick={(event) => this.handleClick(event, i)}\n\t\t\t\t\t\t\t\t\t\tclassName=\"slds-coordinates__item-action slds-button_reset slds-media\"\n\t\t\t\t\t\t\t\t\t\taria-pressed={\n\t\t\t\t\t\t\t\t\t\t\tthis.props.selection &&\n\t\t\t\t\t\t\t\t\t\t\tthis.props.selection.id === location.id\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<span className=\"slds-media__figure\">\n\t\t\t\t\t\t\t\t\t\t\t<Icon category=\"standard\" name=\"account\" />\n\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t<span className=\"slds-media__body\">\n\t\t\t\t\t\t\t\t\t\t\t<span className=\"slds-text-link\">{location.name}</span>\n\t\t\t\t\t\t\t\t\t\t\t<span>{location.address}</span>\n\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</div>\n\t\t\t\t) : null}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nLocationMap.displayName = displayName;\nLocationMap.propTypes = propTypes;\n\nexport default LocationMap;\n"]},"metadata":{},"sourceType":"module"}