{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n// # Pill Container Component\n// Implements the [Listbox of Pill Options design pattern](https://www.lightningdesignsystem.com/components/pills/?variant=listbox-of-pill-options) in React.\n\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport shortid from 'shortid';\nimport SelectedListBox from './private/selected-listbox';\nimport { PILL_CONTAINER } from '../../utilities/constants';\nvar propTypes = {\n  /**\n   * **Assistive text for accessibility**\n   * * `listboxLabel`: This is a label for the listbox. The default is `Selected Options:`.\n   * * `removePill`: Used to remove a selected item (pill). Focus is on the pill. This is not a button. The default is `Press delete or backspace to remove`.\n   */\n  assistiveText: PropTypes.shape({\n    listboxLabel: PropTypes.string,\n    removePill: PropTypes.string\n  }),\n\n  /**\n   * CSS classes to be added to the pill container\n   */\n  className: PropTypes.oneOfType([PropTypes.array, PropTypes.object, PropTypes.string]),\n\n  /**\n   * HTML id for pill container\n   */\n  id: PropTypes.string,\n\n  /**\n   * **Text labels for internationalization**\n   * * `removePillTitle`: Title on `X` icon\n   */\n  labels: PropTypes.shape({\n    removePillTitle: PropTypes.string\n  }),\n\n  /**\n   * **Array of pill objects.**\n   * Each object can contain:\n   * * `avatar`: An `Avatar` component.\n   * * `error`: Adds error styling\n   * * `icon`: An `Icon` component.\n   * * `id`: A unique identifier string.\n   * * `label`: A primary string of text.\n   * * `title`: Text that appears on mouse hover. Most helpful for long labels.\n   * ```\n   * {\n   * \tid: '2',\n   * \tlabel: 'Salesforce.com, Inc.',\n   * \ttitle: 'Salesforce.com, Inc. - Want to work here?',\n   * },\n   * ```\n   * `options` with array length of zero will remove this component from the DOM.\n   */\n  options: PropTypes.arrayOf(PropTypes.shape({\n    avatar: PropTypes.oneOfType([PropTypes.node, PropTypes.shape({\n      imgSrc: PropTypes.string,\n      title: PropTypes.string,\n      variant: PropTypes.string\n    })]),\n    bare: PropTypes.bool,\n    error: PropTypes.bool,\n    icon: PropTypes.oneOfType([PropTypes.node, PropTypes.shape({\n      category: PropTypes.string,\n      name: PropTypes.string\n    })]),\n    id: PropTypes.string,\n    label: PropTypes.oneOfType([PropTypes.node, PropTypes.string]),\n    title: PropTypes.string\n  })),\n\n  /**\n   * Function called when a pill is clicked\n   */\n  onClickPill: PropTypes.func,\n\n  /**\n   * Function called when a pill is requested to be 'removed' via the delete key or 'X' icon click.\n   */\n  onRequestRemovePill: PropTypes.func,\n\n  /**\n   * Custom style object to be passed to the pill container\n   */\n  style: PropTypes.object,\n\n  /**\n   * Specifies the pill styling at the container level. `bare` removes border styling from all pills.\n   */\n  variant: PropTypes.oneOf(['base', 'bare'])\n};\n/**\n * A `PillContainer` is a container that holds one or more pills. Use it for a list of pills in a container that resembles an `input` form field. It is not intended for navigation.\n */\n\nvar PillContainer = /*#__PURE__*/function (_React$Component) {\n  _inherits(PillContainer, _React$Component);\n\n  var _super = _createSuper(PillContainer);\n\n  function PillContainer(props) {\n    var _this;\n\n    _classCallCheck(this, PillContainer);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"getId\", function () {\n      return _this.props.id || _this.generatedId;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getNewActiveOptionIndex\", function (_ref) {\n      var activeOptionIndex = _ref.activeOptionIndex,\n          offset = _ref.offset,\n          options = _ref.options;\n      var nextIndex = activeOptionIndex + offset;\n      return options.length > nextIndex && nextIndex >= 0 ? nextIndex : activeOptionIndex;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleBlurPill\", function () {\n      if (!_this.preserveFocus) {\n        _this.setState({\n          listboxHasFocus: false\n        });\n      } else {\n        _this.preserveFocus = false;\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleClickPill\", function (event, data) {\n      if (_this.props.onClickPill) {\n        _this.props.onClickPill(event, {\n          index: data.index,\n          option: data.option\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handlePillFocus\", function (event, data) {\n      if (!_this.state.listboxHasFocus) {\n        _this.setState({\n          activeSelectedOption: data.option,\n          activeSelectedOptionIndex: data.index,\n          listboxHasFocus: true\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleNavigatePillContainer\", function (event, _ref2) {\n      var direction = _ref2.direction;\n      var offsets = {\n        next: 1,\n        previous: -1\n      };\n\n      _this.setState(function (prevState) {\n        var options = _this.props.options;\n        var isLastOptionAndRightIsPressed = prevState.activeSelectedOptionIndex + 1 === options.length && direction === 'next';\n        var isFirstOptionAndLeftIsPressed = prevState.activeSelectedOptionIndex === 0 && direction === 'previous';\n        var newState;\n\n        if (isLastOptionAndRightIsPressed) {\n          newState = {\n            activeSelectedOption: options[0],\n            activeSelectedOptionIndex: 0,\n            listboxHasFocus: true\n          };\n        } else if (isFirstOptionAndLeftIsPressed) {\n          newState = {\n            activeSelectedOption: options[options.length - 1],\n            activeSelectedOptionIndex: options.length - 1,\n            listboxHasFocus: true\n          };\n        } else {\n          var newIndex = _this.getNewActiveOptionIndex({\n            activeOptionIndex: prevState.activeSelectedOptionIndex,\n            offset: offsets[direction],\n            options: options\n          });\n\n          newState = {\n            activeSelectedOption: options[newIndex],\n            activeSelectedOptionIndex: newIndex,\n            listboxHasFocus: true\n          };\n        }\n\n        _this.preserveFocus = true;\n        return newState;\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleRequestFocusPillContainer\", function (event, _ref3) {\n      var ref = _ref3.ref;\n\n      if (ref) {\n        _this.activeSelectedOptionRef = ref;\n\n        _this.activeSelectedOptionRef.focus();\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleRequestRemove\", function (event, data) {\n      if (_this.props.onRequestRemovePill) {\n        _this.preserveFocus = true;\n\n        _this.props.onRequestRemovePill(event, {\n          index: data.index,\n          option: data.option\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"resetActiveSelectedOption\", function () {\n      var options = _this.props.options;\n      var activeSelectedOptionIndex = _this.state.activeSelectedOptionIndex;\n\n      if (!options[activeSelectedOptionIndex]) {\n        if (options.length > 0 && activeSelectedOptionIndex >= options.length) {\n          activeSelectedOptionIndex = options.length - 1;\n        } else {\n          activeSelectedOptionIndex = 0;\n        }\n      }\n\n      _this.setState({\n        activeSelectedOption: options[activeSelectedOptionIndex] || undefined,\n        activeSelectedOptionIndex: activeSelectedOptionIndex,\n        listboxHasFocus: !!options[activeSelectedOptionIndex]\n      });\n    });\n\n    _this.state = {\n      // seeding initial state with this.props.options[0]\n      activeSelectedOption: _this.props.options && _this.props.options[0] || undefined,\n      activeSelectedOptionIndex: 0,\n      listboxHasFocus: false\n    };\n    _this.activeSelectedOptionRef = null;\n    _this.generatedId = shortid.generate();\n    _this.preserveFocus = false;\n    return _this;\n  }\n\n  _createClass(PillContainer, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      if (this.props.options && this.props.options.length > 0 && !this.props.options[this.state.activeSelectedOptionIndex] || this.preserveFocus) {\n        this.resetActiveSelectedOption();\n        this.preserveFocus = false;\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return this.props.options.length > 0 ? /*#__PURE__*/React.createElement(SelectedListBox, {\n        activeOption: this.state.activeSelectedOption,\n        activeOptionIndex: this.state.activeSelectedOptionIndex,\n        assistiveText: {\n          removePill: this.props.assistiveText.removePill,\n          selectedListboxLabel: this.props.assistiveText.listboxLabel\n        },\n        className: this.props.className,\n        events: {\n          onBlurPill: this.handleBlurPill,\n          onClickPill: this.handleClickPill,\n          onPillFocus: this.handlePillFocus,\n          onRequestFocus: this.handleRequestFocusPillContainer,\n          onRequestFocusOnNextPill: this.handleNavigatePillContainer,\n          onRequestFocusOnPreviousPill: this.handleNavigatePillContainer,\n          onRequestRemove: this.handleRequestRemove\n        },\n        id: \"\".concat(this.getId(), \"-listbox-of-pill-options\"),\n        isBare: this.props.variant === 'bare',\n        isPillContainer: true,\n        labels: this.props.labels,\n        listboxHasFocus: this.state.listboxHasFocus,\n        renderAtSelectionLength: 0,\n        selection: this.props.options,\n        style: this.props.style\n      }) : null;\n    }\n  }]);\n\n  return PillContainer;\n}(React.Component);\n\nPillContainer.displayName = PILL_CONTAINER;\nPillContainer.defaultProps = {\n  assistiveText: {\n    listboxLabel: 'Selected Options:',\n    removePill: 'Press delete or backspace to remove'\n  },\n  labels: {\n    removePillTitle: 'Remove'\n  }\n};\nPillContainer.propTypes = propTypes;\nexport default PillContainer;","map":{"version":3,"sources":["../../../.tmp-es/components/pill-container/index.jsx"],"names":["propTypes","assistiveText","listboxLabel","PropTypes","removePill","string","className","id","labels","removePillTitle","options","avatar","imgSrc","title","variant","bare","error","icon","category","name","label","onClickPill","onRequestRemovePill","style","PillContainer","React","Component","activeSelectedOption","activeSelectedOptionIndex","listboxHasFocus","shortid","activeOptionIndex","offset","nextIndex","index","data","option","direction","offsets","next","previous","isLastOptionAndRightIsPressed","prevState","isFirstOptionAndLeftIsPressed","newState","newIndex","ref","selectedListboxLabel","onBlurPill","onPillFocus","onRequestFocus","onRequestFocusOnNextPill","onRequestFocusOnPreviousPill","onRequestRemove","handleRequestRemove"],"mappings":"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","sourcesContent":["/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\n// # Pill Container Component\n// Implements the [Listbox of Pill Options design pattern](https://www.lightningdesignsystem.com/components/pills/?variant=listbox-of-pill-options) in React.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport shortid from 'shortid';\nimport SelectedListBox from './private/selected-listbox';\n\nimport { PILL_CONTAINER } from '../../utilities/constants';\n\nconst propTypes = {\n\t/**\n\t * **Assistive text for accessibility**\n\t * * `listboxLabel`: This is a label for the listbox. The default is `Selected Options:`.\n\t * * `removePill`: Used to remove a selected item (pill). Focus is on the pill. This is not a button. The default is `Press delete or backspace to remove`.\n\t */\n\tassistiveText: PropTypes.shape({\n\t\tlistboxLabel: PropTypes.string,\n\t\tremovePill: PropTypes.string,\n\t}),\n\t/**\n\t * CSS classes to be added to the pill container\n\t */\n\tclassName: PropTypes.oneOfType([\n\t\tPropTypes.array,\n\t\tPropTypes.object,\n\t\tPropTypes.string,\n\t]),\n\t/**\n\t * HTML id for pill container\n\t */\n\tid: PropTypes.string,\n\t/**\n\t * **Text labels for internationalization**\n\t * * `removePillTitle`: Title on `X` icon\n\t */\n\tlabels: PropTypes.shape({\n\t\tremovePillTitle: PropTypes.string,\n\t}),\n\t/**\n\t * **Array of pill objects.**\n\t * Each object can contain:\n\t * * `avatar`: An `Avatar` component.\n\t * * `error`: Adds error styling\n\t * * `icon`: An `Icon` component.\n\t * * `id`: A unique identifier string.\n\t * * `label`: A primary string of text.\n\t * * `title`: Text that appears on mouse hover. Most helpful for long labels.\n\t * ```\n\t * {\n\t * \tid: '2',\n\t * \tlabel: 'Salesforce.com, Inc.',\n\t * \ttitle: 'Salesforce.com, Inc. - Want to work here?',\n\t * },\n\t * ```\n\t * `options` with array length of zero will remove this component from the DOM.\n\t */\n\toptions: PropTypes.arrayOf(\n\t\tPropTypes.shape({\n\t\t\tavatar: PropTypes.oneOfType([\n\t\t\t\tPropTypes.node,\n\t\t\t\tPropTypes.shape({\n\t\t\t\t\timgSrc: PropTypes.string,\n\t\t\t\t\ttitle: PropTypes.string,\n\t\t\t\t\tvariant: PropTypes.string,\n\t\t\t\t}),\n\t\t\t]),\n\t\t\tbare: PropTypes.bool,\n\t\t\terror: PropTypes.bool,\n\t\t\ticon: PropTypes.oneOfType([\n\t\t\t\tPropTypes.node,\n\t\t\t\tPropTypes.shape({\n\t\t\t\t\tcategory: PropTypes.string,\n\t\t\t\t\tname: PropTypes.string,\n\t\t\t\t}),\n\t\t\t]),\n\t\t\tid: PropTypes.string,\n\t\t\tlabel: PropTypes.oneOfType([PropTypes.node, PropTypes.string]),\n\t\t\ttitle: PropTypes.string,\n\t\t})\n\t),\n\t/**\n\t * Function called when a pill is clicked\n\t */\n\tonClickPill: PropTypes.func,\n\t/**\n\t * Function called when a pill is requested to be 'removed' via the delete key or 'X' icon click.\n\t */\n\tonRequestRemovePill: PropTypes.func,\n\t/**\n\t * Custom style object to be passed to the pill container\n\t */\n\tstyle: PropTypes.object,\n\t/**\n\t * Specifies the pill styling at the container level. `bare` removes border styling from all pills.\n\t */\n\tvariant: PropTypes.oneOf(['base', 'bare']),\n};\n\n/**\n * A `PillContainer` is a container that holds one or more pills. Use it for a list of pills in a container that resembles an `input` form field. It is not intended for navigation.\n */\nclass PillContainer extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\t// seeding initial state with this.props.options[0]\n\t\t\tactiveSelectedOption:\n\t\t\t\t(this.props.options && this.props.options[0]) || undefined,\n\t\t\tactiveSelectedOptionIndex: 0,\n\t\t\tlistboxHasFocus: false,\n\t\t};\n\n\t\tthis.activeSelectedOptionRef = null;\n\t\tthis.generatedId = shortid.generate();\n\t\tthis.preserveFocus = false;\n\t}\n\n\tcomponentDidUpdate() {\n\t\tif (\n\t\t\t(this.props.options &&\n\t\t\t\tthis.props.options.length > 0 &&\n\t\t\t\t!this.props.options[this.state.activeSelectedOptionIndex]) ||\n\t\t\tthis.preserveFocus\n\t\t) {\n\t\t\tthis.resetActiveSelectedOption();\n\t\t\tthis.preserveFocus = false;\n\t\t}\n\t}\n\n\tgetId = () => this.props.id || this.generatedId;\n\n\tgetNewActiveOptionIndex = ({ activeOptionIndex, offset, options }) => {\n\t\tconst nextIndex = activeOptionIndex + offset;\n\t\treturn options.length > nextIndex && nextIndex >= 0\n\t\t\t? nextIndex\n\t\t\t: activeOptionIndex;\n\t};\n\n\thandleBlurPill = () => {\n\t\tif (!this.preserveFocus) {\n\t\t\tthis.setState({ listboxHasFocus: false });\n\t\t} else {\n\t\t\tthis.preserveFocus = false;\n\t\t}\n\t};\n\n\thandleClickPill = (event, data) => {\n\t\tif (this.props.onClickPill) {\n\t\t\tthis.props.onClickPill(event, {\n\t\t\t\tindex: data.index,\n\t\t\t\toption: data.option,\n\t\t\t});\n\t\t}\n\t};\n\n\thandlePillFocus = (event, data) => {\n\t\tif (!this.state.listboxHasFocus) {\n\t\t\tthis.setState({\n\t\t\t\tactiveSelectedOption: data.option,\n\t\t\t\tactiveSelectedOptionIndex: data.index,\n\t\t\t\tlistboxHasFocus: true,\n\t\t\t});\n\t\t}\n\t};\n\n\thandleNavigatePillContainer = (event, { direction }) => {\n\t\tconst offsets = { next: 1, previous: -1 };\n\t\tthis.setState((prevState) => {\n\t\t\tconst { options } = this.props;\n\t\t\tconst isLastOptionAndRightIsPressed =\n\t\t\t\tprevState.activeSelectedOptionIndex + 1 === options.length &&\n\t\t\t\tdirection === 'next';\n\t\t\tconst isFirstOptionAndLeftIsPressed =\n\t\t\t\tprevState.activeSelectedOptionIndex === 0 && direction === 'previous';\n\t\t\tlet newState;\n\n\t\t\tif (isLastOptionAndRightIsPressed) {\n\t\t\t\tnewState = {\n\t\t\t\t\tactiveSelectedOption: options[0],\n\t\t\t\t\tactiveSelectedOptionIndex: 0,\n\t\t\t\t\tlistboxHasFocus: true,\n\t\t\t\t};\n\t\t\t} else if (isFirstOptionAndLeftIsPressed) {\n\t\t\t\tnewState = {\n\t\t\t\t\tactiveSelectedOption: options[options.length - 1],\n\t\t\t\t\tactiveSelectedOptionIndex: options.length - 1,\n\t\t\t\t\tlistboxHasFocus: true,\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tconst newIndex = this.getNewActiveOptionIndex({\n\t\t\t\t\tactiveOptionIndex: prevState.activeSelectedOptionIndex,\n\t\t\t\t\toffset: offsets[direction],\n\t\t\t\t\toptions,\n\t\t\t\t});\n\t\t\t\tnewState = {\n\t\t\t\t\tactiveSelectedOption: options[newIndex],\n\t\t\t\t\tactiveSelectedOptionIndex: newIndex,\n\t\t\t\t\tlistboxHasFocus: true,\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tthis.preserveFocus = true;\n\t\t\treturn newState;\n\t\t});\n\t};\n\n\thandleRequestFocusPillContainer = (event, { ref }) => {\n\t\tif (ref) {\n\t\t\tthis.activeSelectedOptionRef = ref;\n\t\t\tthis.activeSelectedOptionRef.focus();\n\t\t}\n\t};\n\n\thandleRequestRemove = (event, data) => {\n\t\tif (this.props.onRequestRemovePill) {\n\t\t\tthis.preserveFocus = true;\n\t\t\tthis.props.onRequestRemovePill(event, {\n\t\t\t\tindex: data.index,\n\t\t\t\toption: data.option,\n\t\t\t});\n\t\t}\n\t};\n\n\tresetActiveSelectedOption = () => {\n\t\tconst { options } = this.props;\n\t\tlet { activeSelectedOptionIndex } = this.state;\n\n\t\tif (!options[activeSelectedOptionIndex]) {\n\t\t\tif (options.length > 0 && activeSelectedOptionIndex >= options.length) {\n\t\t\t\tactiveSelectedOptionIndex = options.length - 1;\n\t\t\t} else {\n\t\t\t\tactiveSelectedOptionIndex = 0;\n\t\t\t}\n\t\t}\n\n\t\tthis.setState({\n\t\t\tactiveSelectedOption: options[activeSelectedOptionIndex] || undefined,\n\t\t\tactiveSelectedOptionIndex,\n\t\t\tlistboxHasFocus: !!options[activeSelectedOptionIndex],\n\t\t});\n\t};\n\n\trender() {\n\t\treturn this.props.options.length > 0 ? (\n\t\t\t<SelectedListBox\n\t\t\t\tactiveOption={this.state.activeSelectedOption}\n\t\t\t\tactiveOptionIndex={this.state.activeSelectedOptionIndex}\n\t\t\t\tassistiveText={{\n\t\t\t\t\tremovePill: this.props.assistiveText.removePill,\n\t\t\t\t\tselectedListboxLabel: this.props.assistiveText.listboxLabel,\n\t\t\t\t}}\n\t\t\t\tclassName={this.props.className}\n\t\t\t\tevents={{\n\t\t\t\t\tonBlurPill: this.handleBlurPill,\n\t\t\t\t\tonClickPill: this.handleClickPill,\n\t\t\t\t\tonPillFocus: this.handlePillFocus,\n\t\t\t\t\tonRequestFocus: this.handleRequestFocusPillContainer,\n\t\t\t\t\tonRequestFocusOnNextPill: this.handleNavigatePillContainer,\n\t\t\t\t\tonRequestFocusOnPreviousPill: this.handleNavigatePillContainer,\n\t\t\t\t\tonRequestRemove: this.handleRequestRemove,\n\t\t\t\t}}\n\t\t\t\tid={`${this.getId()}-listbox-of-pill-options`}\n\t\t\t\tisBare={this.props.variant === 'bare'}\n\t\t\t\tisPillContainer\n\t\t\t\tlabels={this.props.labels}\n\t\t\t\tlistboxHasFocus={this.state.listboxHasFocus}\n\t\t\t\trenderAtSelectionLength={0}\n\t\t\t\tselection={this.props.options}\n\t\t\t\tstyle={this.props.style}\n\t\t\t/>\n\t\t) : null;\n\t}\n}\n\nPillContainer.displayName = PILL_CONTAINER;\n\nPillContainer.defaultProps = {\n\tassistiveText: {\n\t\tlistboxLabel: 'Selected Options:',\n\t\tremovePill: 'Press delete or backspace to remove',\n\t},\n\tlabels: {\n\t\tremovePillTitle: 'Remove',\n\t},\n};\n\nPillContainer.propTypes = propTypes;\n\nexport default PillContainer;\n"]},"metadata":{},"sourceType":"module"}